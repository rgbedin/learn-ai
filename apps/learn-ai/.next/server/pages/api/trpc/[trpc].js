"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/trpc/[trpc]";
exports.ids = ["pages/api/trpc/[trpc]"];
exports.modules = {

/***/ "@clerk/nextjs":
/*!********************************!*\
  !*** external "@clerk/nextjs" ***!
  \********************************/
/***/ ((module) => {

module.exports = require("@clerk/nextjs");

/***/ }),

/***/ "@clerk/nextjs/server":
/*!***************************************!*\
  !*** external "@clerk/nextjs/server" ***!
  \***************************************/
/***/ ((module) => {

module.exports = require("@clerk/nextjs/server");

/***/ }),

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("@prisma/client");

/***/ }),

/***/ "aws-sdk":
/*!**************************!*\
  !*** external "aws-sdk" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("aws-sdk");

/***/ }),

/***/ "dayjs":
/*!************************!*\
  !*** external "dayjs" ***!
  \************************/
/***/ ((module) => {

module.exports = require("dayjs");

/***/ }),

/***/ "mammoth":
/*!**************************!*\
  !*** external "mammoth" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("mammoth");

/***/ }),

/***/ "ml-kmeans":
/*!****************************!*\
  !*** external "ml-kmeans" ***!
  \****************************/
/***/ ((module) => {

module.exports = require("ml-kmeans");

/***/ }),

/***/ "natural":
/*!**************************!*\
  !*** external "natural" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("natural");

/***/ }),

/***/ "../../../api-utils/node":
/*!*****************************************************!*\
  !*** external "next/dist/server/api-utils/node.js" ***!
  \*****************************************************/
/***/ ((module) => {

module.exports = require("next/dist/server/api-utils/node.js");

/***/ }),

/***/ "../route-module":
/*!************************************************************************!*\
  !*** external "next/dist/server/future/route-modules/route-module.js" ***!
  \************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/server/future/route-modules/route-module.js");

/***/ }),

/***/ "numeric":
/*!**************************!*\
  !*** external "numeric" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("numeric");

/***/ }),

/***/ "pdf-parse":
/*!****************************!*\
  !*** external "pdf-parse" ***!
  \****************************/
/***/ ((module) => {

module.exports = require("pdf-parse");

/***/ }),

/***/ "superjson":
/*!****************************!*\
  !*** external "superjson" ***!
  \****************************/
/***/ ((module) => {

module.exports = require("superjson");

/***/ }),

/***/ "tiktoken":
/*!***************************!*\
  !*** external "tiktoken" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("tiktoken");

/***/ }),

/***/ "@t3-oss/env-nextjs":
/*!*************************************!*\
  !*** external "@t3-oss/env-nextjs" ***!
  \*************************************/
/***/ ((module) => {

module.exports = import("@t3-oss/env-nextjs");;

/***/ }),

/***/ "@trpc/server":
/*!*******************************!*\
  !*** external "@trpc/server" ***!
  \*******************************/
/***/ ((module) => {

module.exports = import("@trpc/server");;

/***/ }),

/***/ "@trpc/server/adapters/next":
/*!*********************************************!*\
  !*** external "@trpc/server/adapters/next" ***!
  \*********************************************/
/***/ ((module) => {

module.exports = import("@trpc/server/adapters/next");;

/***/ }),

/***/ "axios":
/*!************************!*\
  !*** external "axios" ***!
  \************************/
/***/ ((module) => {

module.exports = import("axios");;

/***/ }),

/***/ "langchain":
/*!****************************!*\
  !*** external "langchain" ***!
  \****************************/
/***/ ((module) => {

module.exports = import("langchain");;

/***/ }),

/***/ "langchain/chains":
/*!***********************************!*\
  !*** external "langchain/chains" ***!
  \***********************************/
/***/ ((module) => {

module.exports = import("langchain/chains");;

/***/ }),

/***/ "langchain/chat_models/openai":
/*!***********************************************!*\
  !*** external "langchain/chat_models/openai" ***!
  \***********************************************/
/***/ ((module) => {

module.exports = import("langchain/chat_models/openai");;

/***/ }),

/***/ "langchain/embeddings/openai":
/*!**********************************************!*\
  !*** external "langchain/embeddings/openai" ***!
  \**********************************************/
/***/ ((module) => {

module.exports = import("langchain/embeddings/openai");;

/***/ }),

/***/ "langchain/text_splitter":
/*!******************************************!*\
  !*** external "langchain/text_splitter" ***!
  \******************************************/
/***/ ((module) => {

module.exports = import("langchain/text_splitter");;

/***/ }),

/***/ "langchain/vectorstores/faiss":
/*!***********************************************!*\
  !*** external "langchain/vectorstores/faiss" ***!
  \***********************************************/
/***/ ((module) => {

module.exports = import("langchain/vectorstores/faiss");;

/***/ }),

/***/ "openai":
/*!*************************!*\
  !*** external "openai" ***!
  \*************************/
/***/ ((module) => {

module.exports = import("openai");;

/***/ }),

/***/ "stripe":
/*!*************************!*\
  !*** external "stripe" ***!
  \*************************/
/***/ ((module) => {

module.exports = import("stripe");;

/***/ }),

/***/ "zod":
/*!**********************!*\
  !*** external "zod" ***!
  \**********************/
/***/ ((module) => {

module.exports = import("zod");;

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "(api)/../../node_modules/next/dist/build/webpack/loaders/next-route-loader/helpers.js":
/*!***************************************************************************************!*\
  !*** ../../node_modules/next/dist/build/webpack/loaders/next-route-loader/helpers.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("/**\n * Hoists a name from a module or promised module.\n *\n * @param module the module to hoist the name from\n * @param name the name to hoist\n * @returns the value on the module (or promised module)\n */ \nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"hoist\", ({\n    enumerable: true,\n    get: function() {\n        return hoist;\n    }\n}));\nfunction hoist(module, name) {\n    // If the name is available in the module, return it.\n    if (name in module) {\n        return module[name];\n    }\n    // If a property called `then` exists, assume it's a promise and\n    // return a promise that resolves to the name.\n    if (\"then\" in module && typeof module.then === \"function\") {\n        return module.then((mod)=>hoist(mod, name));\n    }\n    // If we're trying to hoise the default export, and the module is a function,\n    // return the module itself.\n    if (typeof module === \"function\" && name === \"default\") {\n        return module;\n    }\n    // Otherwise, return undefined.\n    return undefined;\n}\n\n//# sourceMappingURL=helpers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvbmV4dC1yb3V0ZS1sb2FkZXIvaGVscGVycy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFpQjtBQUNqQiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRix5Q0FBd0M7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLEVBQUM7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWFybi1haS8uLi8uLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9oZWxwZXJzLmpzP2RmZjQiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBIb2lzdHMgYSBuYW1lIGZyb20gYSBtb2R1bGUgb3IgcHJvbWlzZWQgbW9kdWxlLlxuICpcbiAqIEBwYXJhbSBtb2R1bGUgdGhlIG1vZHVsZSB0byBob2lzdCB0aGUgbmFtZSBmcm9tXG4gKiBAcGFyYW0gbmFtZSB0aGUgbmFtZSB0byBob2lzdFxuICogQHJldHVybnMgdGhlIHZhbHVlIG9uIHRoZSBtb2R1bGUgKG9yIHByb21pc2VkIG1vZHVsZSlcbiAqLyBcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImhvaXN0XCIsIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBob2lzdDtcbiAgICB9XG59KTtcbmZ1bmN0aW9uIGhvaXN0KG1vZHVsZSwgbmFtZSkge1xuICAgIC8vIElmIHRoZSBuYW1lIGlzIGF2YWlsYWJsZSBpbiB0aGUgbW9kdWxlLCByZXR1cm4gaXQuXG4gICAgaWYgKG5hbWUgaW4gbW9kdWxlKSB7XG4gICAgICAgIHJldHVybiBtb2R1bGVbbmFtZV07XG4gICAgfVxuICAgIC8vIElmIGEgcHJvcGVydHkgY2FsbGVkIGB0aGVuYCBleGlzdHMsIGFzc3VtZSBpdCdzIGEgcHJvbWlzZSBhbmRcbiAgICAvLyByZXR1cm4gYSBwcm9taXNlIHRoYXQgcmVzb2x2ZXMgdG8gdGhlIG5hbWUuXG4gICAgaWYgKFwidGhlblwiIGluIG1vZHVsZSAmJiB0eXBlb2YgbW9kdWxlLnRoZW4gPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICByZXR1cm4gbW9kdWxlLnRoZW4oKG1vZCk9PmhvaXN0KG1vZCwgbmFtZSkpO1xuICAgIH1cbiAgICAvLyBJZiB3ZSdyZSB0cnlpbmcgdG8gaG9pc2UgdGhlIGRlZmF1bHQgZXhwb3J0LCBhbmQgdGhlIG1vZHVsZSBpcyBhIGZ1bmN0aW9uLFxuICAgIC8vIHJldHVybiB0aGUgbW9kdWxlIGl0c2VsZi5cbiAgICBpZiAodHlwZW9mIG1vZHVsZSA9PT0gXCJmdW5jdGlvblwiICYmIG5hbWUgPT09IFwiZGVmYXVsdFwiKSB7XG4gICAgICAgIHJldHVybiBtb2R1bGU7XG4gICAgfVxuICAgIC8vIE90aGVyd2lzZSwgcmV0dXJuIHVuZGVmaW5lZC5cbiAgICByZXR1cm4gdW5kZWZpbmVkO1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1oZWxwZXJzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/../../node_modules/next/dist/build/webpack/loaders/next-route-loader/helpers.js\n");

/***/ }),

/***/ "(api)/../../node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Ftrpc%2F%5Btrpc%5D&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Ftrpc%2F%5Btrpc%5D.ts&middlewareConfigBase64=e30%3D!":
/*!**************************************************************************************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Ftrpc%2F%5Btrpc%5D&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Ftrpc%2F%5Btrpc%5D.ts&middlewareConfigBase64=e30%3D! ***!
  \**************************************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module */ \"(api)/../../node_modules/next/dist/server/future/route-modules/pages-api/module.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/../../node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_webpack_loaders_next_route_loader_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/webpack/loaders/next-route-loader/helpers */ \"(api)/../../node_modules/next/dist/build/webpack/loaders/next-route-loader/helpers.js\");\n/* harmony import */ var _src_pages_api_trpc_trpc_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/pages/api/trpc/[trpc].ts */ \"(api)/./src/pages/api/trpc/[trpc].ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_src_pages_api_trpc_trpc_ts__WEBPACK_IMPORTED_MODULE_3__]);\n_src_pages_api_trpc_trpc_ts__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n// @ts-ignore this need to be imported from next/dist to be external\n\n\n\nconst PagesAPIRouteModule = next_dist_server_future_route_modules_pages_api_module__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule;\n// Import the userland code.\n// @ts-expect-error - replaced by webpack/turbopack loader\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_webpack_loaders_next_route_loader_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_src_pages_api_trpc_trpc_ts__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_webpack_loaders_next_route_loader_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_src_pages_api_trpc_trpc_ts__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/trpc/[trpc]\",\n        pathname: \"/api/trpc/[trpc]\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _src_pages_api_trpc_trpc_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvbmV4dC1yb3V0ZS1sb2FkZXIvaW5kZXguanM/a2luZD1QQUdFU19BUEkmcGFnZT0lMkZhcGklMkZ0cnBjJTJGJTVCdHJwYyU1RCZwcmVmZXJyZWRSZWdpb249JmFic29sdXRlUGFnZVBhdGg9LiUyRnNyYyUyRnBhZ2VzJTJGYXBpJTJGdHJwYyUyRiU1QnRycGMlNUQudHMmbWlkZGxld2FyZUNvbmZpZ0Jhc2U2ND1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDaUY7QUFDbEI7QUFDbUI7QUFDbEYsNEJBQTRCLHVHQUEwQjtBQUN0RDtBQUNBO0FBQzJEO0FBQzNEO0FBQ0EsaUVBQWUsZ0dBQUssQ0FBQyx3REFBUSxZQUFZLEVBQUM7QUFDMUM7QUFDTyxlQUFlLGdHQUFLLENBQUMsd0RBQVE7QUFDcEM7QUFDTztBQUNQO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLFlBQVk7QUFDWixDQUFDOztBQUVELHFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVhcm4tYWkvPzJhNjIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLWlnbm9yZSB0aGlzIG5lZWQgdG8gYmUgaW1wb3J0ZWQgZnJvbSBuZXh0L2Rpc3QgdG8gYmUgZXh0ZXJuYWxcbmltcG9ydCAqIGFzIG1vZHVsZSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9wYWdlcy1hcGkvbW9kdWxlXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgaG9pc3QgfSBmcm9tIFwibmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9oZWxwZXJzXCI7XG5jb25zdCBQYWdlc0FQSVJvdXRlTW9kdWxlID0gbW9kdWxlLlBhZ2VzQVBJUm91dGVNb2R1bGU7XG4vLyBJbXBvcnQgdGhlIHVzZXJsYW5kIGNvZGUuXG4vLyBAdHMtZXhwZWN0LWVycm9yIC0gcmVwbGFjZWQgYnkgd2VicGFjay90dXJib3BhY2sgbG9hZGVyXG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiLi9zcmMvcGFnZXMvYXBpL3RycGMvW3RycGNdLnRzXCI7XG4vLyBSZS1leHBvcnQgdGhlIGhhbmRsZXIgKHNob3VsZCBiZSB0aGUgZGVmYXVsdCBleHBvcnQpLlxuZXhwb3J0IGRlZmF1bHQgaG9pc3QodXNlcmxhbmQsIFwiZGVmYXVsdFwiKTtcbi8vIFJlLWV4cG9ydCBjb25maWcuXG5leHBvcnQgY29uc3QgY29uZmlnID0gaG9pc3QodXNlcmxhbmQsIFwiY29uZmlnXCIpO1xuLy8gQ3JlYXRlIGFuZCBleHBvcnQgdGhlIHJvdXRlIG1vZHVsZSB0aGF0IHdpbGwgYmUgY29uc3VtZWQuXG5leHBvcnQgY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgUGFnZXNBUElSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuUEFHRVNfQVBJLFxuICAgICAgICBwYWdlOiBcIi9hcGkvdHJwYy9bdHJwY11cIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS90cnBjL1t0cnBjXVwiLFxuICAgICAgICAvLyBUaGUgZm9sbG93aW5nIGFyZW4ndCB1c2VkIGluIHByb2R1Y3Rpb24uXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcIlwiXG4gICAgfSxcbiAgICB1c2VybGFuZFxufSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhZ2VzLWFwaS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/../../node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Ftrpc%2F%5Btrpc%5D&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Ftrpc%2F%5Btrpc%5D.ts&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./src/pages/api/trpc/[trpc].ts":
/*!**************************************!*\
  !*** ./src/pages/api/trpc/[trpc].ts ***!
  \**************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _trpc_server_adapters_next__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @trpc/server/adapters/next */ \"@trpc/server/adapters/next\");\n/* harmony import */ var _env_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ~/env.mjs */ \"(api)/./src/env.mjs\");\n/* harmony import */ var _server_api_root__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ~/server/api/root */ \"(api)/./src/server/api/root.ts\");\n/* harmony import */ var _server_api_trpc__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ~/server/api/trpc */ \"(api)/./src/server/api/trpc.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_trpc_server_adapters_next__WEBPACK_IMPORTED_MODULE_0__, _env_mjs__WEBPACK_IMPORTED_MODULE_1__, _server_api_root__WEBPACK_IMPORTED_MODULE_2__, _server_api_trpc__WEBPACK_IMPORTED_MODULE_3__]);\n([_trpc_server_adapters_next__WEBPACK_IMPORTED_MODULE_0__, _env_mjs__WEBPACK_IMPORTED_MODULE_1__, _server_api_root__WEBPACK_IMPORTED_MODULE_2__, _server_api_trpc__WEBPACK_IMPORTED_MODULE_3__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n// export API handler\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_trpc_server_adapters_next__WEBPACK_IMPORTED_MODULE_0__.createNextApiHandler)({\n    router: _server_api_root__WEBPACK_IMPORTED_MODULE_2__.appRouter,\n    createContext: _server_api_trpc__WEBPACK_IMPORTED_MODULE_3__.createTRPCContext,\n    onError: _env_mjs__WEBPACK_IMPORTED_MODULE_1__.env.NODE_ENV === \"development\" ? ({ path, error })=>{\n        console.error(`❌ tRPC failed on ${path ?? \"<no-path>\"}: ${error.message}`);\n    } : undefined\n}));\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvcGFnZXMvYXBpL3RycGMvW3RycGNdLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQWtFO0FBRWxDO0FBQ2M7QUFDUTtBQUV0RCxxQkFBcUI7QUFDckIsaUVBQWVBLGdGQUFvQkEsQ0FBQztJQUNsQ0ksUUFBUUYsdURBQVNBO0lBQ2pCRyxlQUFlRiwrREFBaUJBO0lBQ2hDRyxTQUNFTCx5Q0FBR0EsQ0FBQ00sUUFBUSxLQUFLLGdCQUNiLENBQUMsRUFBRUMsSUFBSSxFQUFFQyxLQUFLLEVBQUU7UUFDZEMsUUFBUUQsS0FBSyxDQUNYLENBQUMsaUJBQWlCLEVBQUVELFFBQVEsWUFBWSxFQUFFLEVBQUVDLE1BQU1FLE9BQU8sQ0FBQyxDQUFDO0lBRS9ELElBQ0FDO0FBQ1IsRUFBRSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVhcm4tYWkvLi9zcmMvcGFnZXMvYXBpL3RycGMvW3RycGNdLnRzP2NlNTAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlTmV4dEFwaUhhbmRsZXIgfSBmcm9tIFwiQHRycGMvc2VydmVyL2FkYXB0ZXJzL25leHRcIjtcblxuaW1wb3J0IHsgZW52IH0gZnJvbSBcIn4vZW52Lm1qc1wiO1xuaW1wb3J0IHsgYXBwUm91dGVyIH0gZnJvbSBcIn4vc2VydmVyL2FwaS9yb290XCI7XG5pbXBvcnQgeyBjcmVhdGVUUlBDQ29udGV4dCB9IGZyb20gXCJ+L3NlcnZlci9hcGkvdHJwY1wiO1xuXG4vLyBleHBvcnQgQVBJIGhhbmRsZXJcbmV4cG9ydCBkZWZhdWx0IGNyZWF0ZU5leHRBcGlIYW5kbGVyKHtcbiAgcm91dGVyOiBhcHBSb3V0ZXIsXG4gIGNyZWF0ZUNvbnRleHQ6IGNyZWF0ZVRSUENDb250ZXh0LFxuICBvbkVycm9yOlxuICAgIGVudi5OT0RFX0VOViA9PT0gXCJkZXZlbG9wbWVudFwiXG4gICAgICA/ICh7IHBhdGgsIGVycm9yIH0pID0+IHtcbiAgICAgICAgICBjb25zb2xlLmVycm9yKFxuICAgICAgICAgICAgYOKdjCB0UlBDIGZhaWxlZCBvbiAke3BhdGggPz8gXCI8bm8tcGF0aD5cIn06ICR7ZXJyb3IubWVzc2FnZX1gXG4gICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgICAgOiB1bmRlZmluZWQsXG59KTtcbiJdLCJuYW1lcyI6WyJjcmVhdGVOZXh0QXBpSGFuZGxlciIsImVudiIsImFwcFJvdXRlciIsImNyZWF0ZVRSUENDb250ZXh0Iiwicm91dGVyIiwiY3JlYXRlQ29udGV4dCIsIm9uRXJyb3IiLCJOT0RFX0VOViIsInBhdGgiLCJlcnJvciIsImNvbnNvbGUiLCJtZXNzYWdlIiwidW5kZWZpbmVkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./src/pages/api/trpc/[trpc].ts\n");

/***/ }),

/***/ "(api)/./src/server/api/root.ts":
/*!********************************!*\
  !*** ./src/server/api/root.ts ***!
  \********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   appRouter: () => (/* binding */ appRouter)\n/* harmony export */ });\n/* harmony import */ var _server_api_trpc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ~/server/api/trpc */ \"(api)/./src/server/api/trpc.ts\");\n/* harmony import */ var _routers_file__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./routers/file */ \"(api)/./src/server/api/routers/file.ts\");\n/* harmony import */ var _routers_coins__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./routers/coins */ \"(api)/./src/server/api/routers/coins.ts\");\n/* harmony import */ var _routers_stripe__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./routers/stripe */ \"(api)/./src/server/api/routers/stripe.ts\");\n/* harmony import */ var _routers_user__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./routers/user */ \"(api)/./src/server/api/routers/user.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_server_api_trpc__WEBPACK_IMPORTED_MODULE_0__, _routers_file__WEBPACK_IMPORTED_MODULE_1__, _routers_coins__WEBPACK_IMPORTED_MODULE_2__, _routers_stripe__WEBPACK_IMPORTED_MODULE_3__, _routers_user__WEBPACK_IMPORTED_MODULE_4__]);\n([_server_api_trpc__WEBPACK_IMPORTED_MODULE_0__, _routers_file__WEBPACK_IMPORTED_MODULE_1__, _routers_coins__WEBPACK_IMPORTED_MODULE_2__, _routers_stripe__WEBPACK_IMPORTED_MODULE_3__, _routers_user__WEBPACK_IMPORTED_MODULE_4__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\n/**\n * This is the primary router for your server.\n *\n * All routers added in /api/routers should be manually added here.\n */ const appRouter = (0,_server_api_trpc__WEBPACK_IMPORTED_MODULE_0__.createTRPCRouter)({\n    file: _routers_file__WEBPACK_IMPORTED_MODULE_1__.fileRouter,\n    coins: _routers_coins__WEBPACK_IMPORTED_MODULE_2__.coinsRouter,\n    stripe: _routers_stripe__WEBPACK_IMPORTED_MODULE_3__.stripeRouter,\n    user: _routers_user__WEBPACK_IMPORTED_MODULE_4__.userRouter\n});\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvc2VydmVyL2FwaS9yb290LnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFxRDtBQUNUO0FBQ0U7QUFDRTtBQUNKO0FBRTVDOzs7O0NBSUMsR0FDTSxNQUFNSyxZQUFZTCxrRUFBZ0JBLENBQUM7SUFDeENNLE1BQU1MLHFEQUFVQTtJQUNoQk0sT0FBT0wsdURBQVdBO0lBQ2xCTSxRQUFRTCx5REFBWUE7SUFDcEJNLE1BQU1MLHFEQUFVQTtBQUNsQixHQUFHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVhcm4tYWkvLi9zcmMvc2VydmVyL2FwaS9yb290LnRzP2E5YjYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlVFJQQ1JvdXRlciB9IGZyb20gXCJ+L3NlcnZlci9hcGkvdHJwY1wiO1xuaW1wb3J0IHsgZmlsZVJvdXRlciB9IGZyb20gXCIuL3JvdXRlcnMvZmlsZVwiO1xuaW1wb3J0IHsgY29pbnNSb3V0ZXIgfSBmcm9tIFwiLi9yb3V0ZXJzL2NvaW5zXCI7XG5pbXBvcnQgeyBzdHJpcGVSb3V0ZXIgfSBmcm9tIFwiLi9yb3V0ZXJzL3N0cmlwZVwiO1xuaW1wb3J0IHsgdXNlclJvdXRlciB9IGZyb20gXCIuL3JvdXRlcnMvdXNlclwiO1xuXG4vKipcbiAqIFRoaXMgaXMgdGhlIHByaW1hcnkgcm91dGVyIGZvciB5b3VyIHNlcnZlci5cbiAqXG4gKiBBbGwgcm91dGVycyBhZGRlZCBpbiAvYXBpL3JvdXRlcnMgc2hvdWxkIGJlIG1hbnVhbGx5IGFkZGVkIGhlcmUuXG4gKi9cbmV4cG9ydCBjb25zdCBhcHBSb3V0ZXIgPSBjcmVhdGVUUlBDUm91dGVyKHtcbiAgZmlsZTogZmlsZVJvdXRlcixcbiAgY29pbnM6IGNvaW5zUm91dGVyLFxuICBzdHJpcGU6IHN0cmlwZVJvdXRlcixcbiAgdXNlcjogdXNlclJvdXRlcixcbn0pO1xuXG4vLyBleHBvcnQgdHlwZSBkZWZpbml0aW9uIG9mIEFQSVxuZXhwb3J0IHR5cGUgQXBwUm91dGVyID0gdHlwZW9mIGFwcFJvdXRlcjtcbiJdLCJuYW1lcyI6WyJjcmVhdGVUUlBDUm91dGVyIiwiZmlsZVJvdXRlciIsImNvaW5zUm91dGVyIiwic3RyaXBlUm91dGVyIiwidXNlclJvdXRlciIsImFwcFJvdXRlciIsImZpbGUiLCJjb2lucyIsInN0cmlwZSIsInVzZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./src/server/api/root.ts\n");

/***/ }),

/***/ "(api)/./src/server/api/routers/coins.ts":
/*!*****************************************!*\
  !*** ./src/server/api/routers/coins.ts ***!
  \*****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   coinsRouter: () => (/* binding */ coinsRouter),\n/* harmony export */   deductCoins: () => (/* binding */ deductCoins),\n/* harmony export */   ensureUserHasCoins: () => (/* binding */ ensureUserHasCoins),\n/* harmony export */   giveMonthlyRefillIfNeeded: () => (/* binding */ giveMonthlyRefillIfNeeded)\n/* harmony export */ });\n/* harmony import */ var _trpc_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @trpc/server */ \"@trpc/server\");\n/* harmony import */ var dayjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! dayjs */ \"dayjs\");\n/* harmony import */ var dayjs__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(dayjs__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _server_api_trpc__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ~/server/api/trpc */ \"(api)/./src/server/api/trpc.ts\");\n/* harmony import */ var _user__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./user */ \"(api)/./src/server/api/routers/user.ts\");\n/* harmony import */ var database_src_client__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! database/src/client */ \"(api)/../../packages/database/src/client.ts\");\n/* harmony import */ var _utils_constants__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ~/utils/constants */ \"(api)/./src/utils/constants.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_trpc_server__WEBPACK_IMPORTED_MODULE_0__, _server_api_trpc__WEBPACK_IMPORTED_MODULE_2__, _user__WEBPACK_IMPORTED_MODULE_3__]);\n([_trpc_server__WEBPACK_IMPORTED_MODULE_0__, _server_api_trpc__WEBPACK_IMPORTED_MODULE_2__, _user__WEBPACK_IMPORTED_MODULE_3__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n// eslint-disable-file @typescript-eslint/no-unsafe-member-access\n\n\n\n\n\n\nconst ensureUserHasCoins = async (userId, amount)=>{\n    const coins = await database_src_client__WEBPACK_IMPORTED_MODULE_4__.prisma.coins.findUnique({\n        where: {\n            userId\n        }\n    });\n    if (!coins) {\n        throw new _trpc_server__WEBPACK_IMPORTED_MODULE_0__.TRPCError({\n            code: \"INTERNAL_SERVER_ERROR\",\n            message: \"User has no coins\"\n        });\n    }\n    if (coins.coins < amount) {\n        throw new _trpc_server__WEBPACK_IMPORTED_MODULE_0__.TRPCError({\n            code: \"FORBIDDEN\",\n            message: \"User does not have enough coins\"\n        });\n    }\n};\nconst deductCoins = async (userId, amount)=>{\n    await database_src_client__WEBPACK_IMPORTED_MODULE_4__.prisma.coins.update({\n        where: {\n            userId\n        },\n        data: {\n            coins: {\n                decrement: amount\n            }\n        }\n    });\n};\nconst giveMonthlyRefillIfNeeded = async (userId, bypassSubscriptionCheck = false)=>{\n    return await database_src_client__WEBPACK_IMPORTED_MODULE_4__.prisma.$transaction(async (tx)=>{\n        let coins = await tx.coins.findUnique({\n            where: {\n                userId\n            }\n        });\n        if (!coins) {\n            throw new _trpc_server__WEBPACK_IMPORTED_MODULE_0__.TRPCError({\n                code: \"INTERNAL_SERVER_ERROR\",\n                message: \"User has no coins\"\n            });\n        }\n        const { isValid } = await (0,_user__WEBPACK_IMPORTED_MODULE_3__.getUserSubscriptionStatus)(userId);\n        if ((isValid ?? bypassSubscriptionCheck) && // If subscription is valid or we're bypassing the check\n        coins && (!coins.lastMonthlyRefill || // If user has never had a refill\n        Math.abs(dayjs__WEBPACK_IMPORTED_MODULE_1___default()(coins.lastMonthlyRefill).diff(new Date(), \"month\")) >= 1 // If user has had a refill more than a month ago\n        )) {\n            coins = await tx.coins.update({\n                where: {\n                    userId\n                },\n                data: {\n                    coins: {\n                        increment: _utils_constants__WEBPACK_IMPORTED_MODULE_5__.COINS_PER_MONTH\n                    },\n                    lastMonthlyRefill: new Date()\n                }\n            });\n        }\n        return coins;\n    }, {\n        isolationLevel: \"Serializable\"\n    });\n};\nconst coinsRouter = (0,_server_api_trpc__WEBPACK_IMPORTED_MODULE_2__.createTRPCRouter)({\n    getMyCoins: _server_api_trpc__WEBPACK_IMPORTED_MODULE_2__.privateProcedure.query(async ({ ctx })=>{\n        let coins = await ctx.prisma.coins.findUnique({\n            where: {\n                userId: ctx.userId\n            }\n        });\n        if (!coins) {\n            coins = await ctx.prisma.coins.create({\n                data: {\n                    userId: ctx.userId,\n                    coins: _utils_constants__WEBPACK_IMPORTED_MODULE_5__.INITIAL_COINS\n                }\n            });\n        }\n        coins = await giveMonthlyRefillIfNeeded(ctx.userId);\n        const nextRefill = coins.lastMonthlyRefill ? dayjs__WEBPACK_IMPORTED_MODULE_1___default()(coins.lastMonthlyRefill).add(1, \"month\").toDate() : undefined;\n        return {\n            coins: coins.coins,\n            nextRefill\n        };\n    })\n});\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvc2VydmVyL2FwaS9yb3V0ZXJzL2NvaW5zLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsaUVBQWlFO0FBQ3hCO0FBQ2Y7QUFDNkM7QUFDcEI7QUFDTjtBQUNzQjtBQUU1RCxNQUFNUSxxQkFBcUIsT0FBT0MsUUFBZ0JDO0lBQ3ZELE1BQU1DLFFBQVEsTUFBTU4sdURBQU1BLENBQUNNLEtBQUssQ0FBQ0MsVUFBVSxDQUFDO1FBQzFDQyxPQUFPO1lBQ0xKO1FBQ0Y7SUFDRjtJQUVBLElBQUksQ0FBQ0UsT0FBTztRQUNWLE1BQU0sSUFBSVgsbURBQVNBLENBQUM7WUFDbEJjLE1BQU07WUFDTkMsU0FBUztRQUNYO0lBQ0Y7SUFFQSxJQUFJSixNQUFNQSxLQUFLLEdBQUdELFFBQVE7UUFDeEIsTUFBTSxJQUFJVixtREFBU0EsQ0FBQztZQUNsQmMsTUFBTTtZQUNOQyxTQUFTO1FBQ1g7SUFDRjtBQUNGLEVBQUU7QUFFSyxNQUFNQyxjQUFjLE9BQU9QLFFBQWdCQztJQUNoRCxNQUFNTCx1REFBTUEsQ0FBQ00sS0FBSyxDQUFDTSxNQUFNLENBQUM7UUFDeEJKLE9BQU87WUFDTEo7UUFDRjtRQUNBUyxNQUFNO1lBQ0pQLE9BQU87Z0JBQ0xRLFdBQVdUO1lBQ2I7UUFDRjtJQUNGO0FBQ0YsRUFBRTtBQUVLLE1BQU1VLDRCQUE0QixPQUN2Q1gsUUFDQVksMEJBQTBCLEtBQUs7SUFFL0IsT0FBTyxNQUFNaEIsdURBQU1BLENBQUNpQixZQUFZLENBQzlCLE9BQU9DO1FBQ0wsSUFBSVosUUFBUSxNQUFNWSxHQUFHWixLQUFLLENBQUNDLFVBQVUsQ0FBQztZQUNwQ0MsT0FBTztnQkFDTEo7WUFDRjtRQUNGO1FBRUEsSUFBSSxDQUFDRSxPQUFPO1lBQ1YsTUFBTSxJQUFJWCxtREFBU0EsQ0FBQztnQkFDbEJjLE1BQU07Z0JBQ05DLFNBQVM7WUFDWDtRQUNGO1FBRUEsTUFBTSxFQUFFUyxPQUFPLEVBQUUsR0FBRyxNQUFNcEIsZ0VBQXlCQSxDQUFDSztRQUVwRCxJQUNFLENBQUNlLFdBQVdILHVCQUFzQixLQUFNLHdEQUF3RDtRQUNoR1YsU0FDQyxFQUFDQSxNQUFNYyxpQkFBaUIsSUFBSSxpQ0FBaUM7UUFDNURDLEtBQUtDLEdBQUcsQ0FBQzFCLDRDQUFLQSxDQUFDVSxNQUFNYyxpQkFBaUIsRUFBRUcsSUFBSSxDQUFDLElBQUlDLFFBQVEsYUFDdkQsRUFBRyxpREFBaUQ7UUFBcEQsR0FDSjtZQUNBbEIsUUFBUSxNQUFNWSxHQUFHWixLQUFLLENBQUNNLE1BQU0sQ0FBQztnQkFDNUJKLE9BQU87b0JBQ0xKO2dCQUNGO2dCQUNBUyxNQUFNO29CQUNKUCxPQUFPO3dCQUNMbUIsV0FBV3hCLDZEQUFlQTtvQkFDNUI7b0JBQ0FtQixtQkFBbUIsSUFBSUk7Z0JBQ3pCO1lBQ0Y7UUFDRjtRQUVBLE9BQU9sQjtJQUNULEdBQ0E7UUFDRW9CLGdCQUFnQjtJQUNsQjtBQUVKLEVBQUU7QUFFSyxNQUFNQyxjQUFjOUIsa0VBQWdCQSxDQUFDO0lBQzFDK0IsWUFBWTlCLDhEQUFnQkEsQ0FBQytCLEtBQUssQ0FBQyxPQUFPLEVBQUVDLEdBQUcsRUFBRTtRQUMvQyxJQUFJeEIsUUFBUSxNQUFNd0IsSUFBSTlCLE1BQU0sQ0FBQ00sS0FBSyxDQUFDQyxVQUFVLENBQUM7WUFDNUNDLE9BQU87Z0JBQ0xKLFFBQVEwQixJQUFJMUIsTUFBTTtZQUNwQjtRQUNGO1FBRUEsSUFBSSxDQUFDRSxPQUFPO1lBQ1ZBLFFBQVEsTUFBTXdCLElBQUk5QixNQUFNLENBQUNNLEtBQUssQ0FBQ3lCLE1BQU0sQ0FBQztnQkFDcENsQixNQUFNO29CQUNKVCxRQUFRMEIsSUFBSTFCLE1BQU07b0JBQ2xCRSxPQUFPSiwyREFBYUE7Z0JBQ3RCO1lBQ0Y7UUFDRjtRQUVBSSxRQUFRLE1BQU1TLDBCQUEwQmUsSUFBSTFCLE1BQU07UUFFbEQsTUFBTTRCLGFBQWExQixNQUFNYyxpQkFBaUIsR0FDdEN4Qiw0Q0FBS0EsQ0FBQ1UsTUFBTWMsaUJBQWlCLEVBQUVhLEdBQUcsQ0FBQyxHQUFHLFNBQVNDLE1BQU0sS0FDckRDO1FBRUosT0FBTztZQUFFN0IsT0FBT0EsTUFBTUEsS0FBSztZQUFFMEI7UUFBVztJQUMxQztBQUNGLEdBQUciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWFybi1haS8uL3NyYy9zZXJ2ZXIvYXBpL3JvdXRlcnMvY29pbnMudHM/ZGY5NCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBlc2xpbnQtZGlzYWJsZS1maWxlIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnNhZmUtbWVtYmVyLWFjY2Vzc1xuaW1wb3J0IHsgVFJQQ0Vycm9yIH0gZnJvbSBcIkB0cnBjL3NlcnZlclwiO1xuaW1wb3J0IGRheWpzIGZyb20gXCJkYXlqc1wiO1xuaW1wb3J0IHsgY3JlYXRlVFJQQ1JvdXRlciwgcHJpdmF0ZVByb2NlZHVyZSB9IGZyb20gXCJ+L3NlcnZlci9hcGkvdHJwY1wiO1xuaW1wb3J0IHsgZ2V0VXNlclN1YnNjcmlwdGlvblN0YXR1cyB9IGZyb20gXCIuL3VzZXJcIjtcbmltcG9ydCB7IHByaXNtYSB9IGZyb20gXCJkYXRhYmFzZS9zcmMvY2xpZW50XCI7XG5pbXBvcnQgeyBDT0lOU19QRVJfTU9OVEgsIElOSVRJQUxfQ09JTlMgfSBmcm9tIFwifi91dGlscy9jb25zdGFudHNcIjtcblxuZXhwb3J0IGNvbnN0IGVuc3VyZVVzZXJIYXNDb2lucyA9IGFzeW5jICh1c2VySWQ6IHN0cmluZywgYW1vdW50OiBudW1iZXIpID0+IHtcbiAgY29uc3QgY29pbnMgPSBhd2FpdCBwcmlzbWEuY29pbnMuZmluZFVuaXF1ZSh7XG4gICAgd2hlcmU6IHtcbiAgICAgIHVzZXJJZCxcbiAgICB9LFxuICB9KTtcblxuICBpZiAoIWNvaW5zKSB7XG4gICAgdGhyb3cgbmV3IFRSUENFcnJvcih7XG4gICAgICBjb2RlOiBcIklOVEVSTkFMX1NFUlZFUl9FUlJPUlwiLFxuICAgICAgbWVzc2FnZTogXCJVc2VyIGhhcyBubyBjb2luc1wiLFxuICAgIH0pO1xuICB9XG5cbiAgaWYgKGNvaW5zLmNvaW5zIDwgYW1vdW50KSB7XG4gICAgdGhyb3cgbmV3IFRSUENFcnJvcih7XG4gICAgICBjb2RlOiBcIkZPUkJJRERFTlwiLFxuICAgICAgbWVzc2FnZTogXCJVc2VyIGRvZXMgbm90IGhhdmUgZW5vdWdoIGNvaW5zXCIsXG4gICAgfSk7XG4gIH1cbn07XG5cbmV4cG9ydCBjb25zdCBkZWR1Y3RDb2lucyA9IGFzeW5jICh1c2VySWQ6IHN0cmluZywgYW1vdW50OiBudW1iZXIpID0+IHtcbiAgYXdhaXQgcHJpc21hLmNvaW5zLnVwZGF0ZSh7XG4gICAgd2hlcmU6IHtcbiAgICAgIHVzZXJJZCxcbiAgICB9LFxuICAgIGRhdGE6IHtcbiAgICAgIGNvaW5zOiB7XG4gICAgICAgIGRlY3JlbWVudDogYW1vdW50LFxuICAgICAgfSxcbiAgICB9LFxuICB9KTtcbn07XG5cbmV4cG9ydCBjb25zdCBnaXZlTW9udGhseVJlZmlsbElmTmVlZGVkID0gYXN5bmMgKFxuICB1c2VySWQ6IHN0cmluZyxcbiAgYnlwYXNzU3Vic2NyaXB0aW9uQ2hlY2sgPSBmYWxzZSxcbikgPT4ge1xuICByZXR1cm4gYXdhaXQgcHJpc21hLiR0cmFuc2FjdGlvbihcbiAgICBhc3luYyAodHgpID0+IHtcbiAgICAgIGxldCBjb2lucyA9IGF3YWl0IHR4LmNvaW5zLmZpbmRVbmlxdWUoe1xuICAgICAgICB3aGVyZToge1xuICAgICAgICAgIHVzZXJJZCxcbiAgICAgICAgfSxcbiAgICAgIH0pO1xuXG4gICAgICBpZiAoIWNvaW5zKSB7XG4gICAgICAgIHRocm93IG5ldyBUUlBDRXJyb3Ioe1xuICAgICAgICAgIGNvZGU6IFwiSU5URVJOQUxfU0VSVkVSX0VSUk9SXCIsXG4gICAgICAgICAgbWVzc2FnZTogXCJVc2VyIGhhcyBubyBjb2luc1wiLFxuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgICAgY29uc3QgeyBpc1ZhbGlkIH0gPSBhd2FpdCBnZXRVc2VyU3Vic2NyaXB0aW9uU3RhdHVzKHVzZXJJZCk7XG5cbiAgICAgIGlmIChcbiAgICAgICAgKGlzVmFsaWQgPz8gYnlwYXNzU3Vic2NyaXB0aW9uQ2hlY2spICYmIC8vIElmIHN1YnNjcmlwdGlvbiBpcyB2YWxpZCBvciB3ZSdyZSBieXBhc3NpbmcgdGhlIGNoZWNrXG4gICAgICAgIGNvaW5zICYmXG4gICAgICAgICghY29pbnMubGFzdE1vbnRobHlSZWZpbGwgfHwgLy8gSWYgdXNlciBoYXMgbmV2ZXIgaGFkIGEgcmVmaWxsXG4gICAgICAgICAgTWF0aC5hYnMoZGF5anMoY29pbnMubGFzdE1vbnRobHlSZWZpbGwpLmRpZmYobmV3IERhdGUoKSwgXCJtb250aFwiKSkgPj1cbiAgICAgICAgICAgIDEpIC8vIElmIHVzZXIgaGFzIGhhZCBhIHJlZmlsbCBtb3JlIHRoYW4gYSBtb250aCBhZ29cbiAgICAgICkge1xuICAgICAgICBjb2lucyA9IGF3YWl0IHR4LmNvaW5zLnVwZGF0ZSh7XG4gICAgICAgICAgd2hlcmU6IHtcbiAgICAgICAgICAgIHVzZXJJZCxcbiAgICAgICAgICB9LFxuICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgIGNvaW5zOiB7XG4gICAgICAgICAgICAgIGluY3JlbWVudDogQ09JTlNfUEVSX01PTlRILFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGxhc3RNb250aGx5UmVmaWxsOiBuZXcgRGF0ZSgpLFxuICAgICAgICAgIH0sXG4gICAgICAgIH0pO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gY29pbnM7XG4gICAgfSxcbiAgICB7XG4gICAgICBpc29sYXRpb25MZXZlbDogXCJTZXJpYWxpemFibGVcIixcbiAgICB9LFxuICApO1xufTtcblxuZXhwb3J0IGNvbnN0IGNvaW5zUm91dGVyID0gY3JlYXRlVFJQQ1JvdXRlcih7XG4gIGdldE15Q29pbnM6IHByaXZhdGVQcm9jZWR1cmUucXVlcnkoYXN5bmMgKHsgY3R4IH0pID0+IHtcbiAgICBsZXQgY29pbnMgPSBhd2FpdCBjdHgucHJpc21hLmNvaW5zLmZpbmRVbmlxdWUoe1xuICAgICAgd2hlcmU6IHtcbiAgICAgICAgdXNlcklkOiBjdHgudXNlcklkLFxuICAgICAgfSxcbiAgICB9KTtcblxuICAgIGlmICghY29pbnMpIHtcbiAgICAgIGNvaW5zID0gYXdhaXQgY3R4LnByaXNtYS5jb2lucy5jcmVhdGUoe1xuICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgdXNlcklkOiBjdHgudXNlcklkLFxuICAgICAgICAgIGNvaW5zOiBJTklUSUFMX0NPSU5TLFxuICAgICAgICB9LFxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgY29pbnMgPSBhd2FpdCBnaXZlTW9udGhseVJlZmlsbElmTmVlZGVkKGN0eC51c2VySWQpO1xuXG4gICAgY29uc3QgbmV4dFJlZmlsbCA9IGNvaW5zLmxhc3RNb250aGx5UmVmaWxsXG4gICAgICA/IGRheWpzKGNvaW5zLmxhc3RNb250aGx5UmVmaWxsKS5hZGQoMSwgXCJtb250aFwiKS50b0RhdGUoKVxuICAgICAgOiB1bmRlZmluZWQ7XG5cbiAgICByZXR1cm4geyBjb2luczogY29pbnMuY29pbnMsIG5leHRSZWZpbGwgfTtcbiAgfSksXG59KTtcbiJdLCJuYW1lcyI6WyJUUlBDRXJyb3IiLCJkYXlqcyIsImNyZWF0ZVRSUENSb3V0ZXIiLCJwcml2YXRlUHJvY2VkdXJlIiwiZ2V0VXNlclN1YnNjcmlwdGlvblN0YXR1cyIsInByaXNtYSIsIkNPSU5TX1BFUl9NT05USCIsIklOSVRJQUxfQ09JTlMiLCJlbnN1cmVVc2VySGFzQ29pbnMiLCJ1c2VySWQiLCJhbW91bnQiLCJjb2lucyIsImZpbmRVbmlxdWUiLCJ3aGVyZSIsImNvZGUiLCJtZXNzYWdlIiwiZGVkdWN0Q29pbnMiLCJ1cGRhdGUiLCJkYXRhIiwiZGVjcmVtZW50IiwiZ2l2ZU1vbnRobHlSZWZpbGxJZk5lZWRlZCIsImJ5cGFzc1N1YnNjcmlwdGlvbkNoZWNrIiwiJHRyYW5zYWN0aW9uIiwidHgiLCJpc1ZhbGlkIiwibGFzdE1vbnRobHlSZWZpbGwiLCJNYXRoIiwiYWJzIiwiZGlmZiIsIkRhdGUiLCJpbmNyZW1lbnQiLCJpc29sYXRpb25MZXZlbCIsImNvaW5zUm91dGVyIiwiZ2V0TXlDb2lucyIsInF1ZXJ5IiwiY3R4IiwiY3JlYXRlIiwibmV4dFJlZmlsbCIsImFkZCIsInRvRGF0ZSIsInVuZGVmaW5lZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./src/server/api/routers/coins.ts\n");

/***/ }),

/***/ "(api)/./src/server/api/routers/file.ts":
/*!****************************************!*\
  !*** ./src/server/api/routers/file.ts ***!
  \****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fileRouter: () => (/* binding */ fileRouter),\n/* harmony export */   getDownloadUrl: () => (/* binding */ getDownloadUrl)\n/* harmony export */ });\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zod */ \"zod\");\n/* harmony import */ var _server_api_trpc__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ~/server/api/trpc */ \"(api)/./src/server/api/trpc.ts\");\n/* harmony import */ var aws_sdk__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! aws-sdk */ \"aws-sdk\");\n/* harmony import */ var aws_sdk__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(aws_sdk__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var mammoth__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! mammoth */ \"mammoth\");\n/* harmony import */ var mammoth__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(mammoth__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _trpc_server__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @trpc/server */ \"@trpc/server\");\n/* harmony import */ var database_src_client__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! database/src/client */ \"(api)/../../packages/database/src/client.ts\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! axios */ \"axios\");\n/* harmony import */ var _server_utils_extractPdf__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ~/server/utils/extractPdf */ \"(api)/./src/server/utils/extractPdf.ts\");\n/* harmony import */ var _server_utils_extractPagesFromFileText__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ~/server/utils/extractPagesFromFileText */ \"(api)/./src/server/utils/extractPagesFromFileText.ts\");\n/* harmony import */ var _server_utils_ai__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ~/server/utils/ai */ \"(api)/./src/server/utils/ai.ts\");\n/* harmony import */ var _utils_costs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ~/utils/costs */ \"(api)/./src/utils/costs.ts\");\n/* harmony import */ var _coins__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./coins */ \"(api)/./src/server/api/routers/coins.ts\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_12__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([zod__WEBPACK_IMPORTED_MODULE_0__, _server_api_trpc__WEBPACK_IMPORTED_MODULE_1__, _trpc_server__WEBPACK_IMPORTED_MODULE_4__, axios__WEBPACK_IMPORTED_MODULE_6__, _server_utils_ai__WEBPACK_IMPORTED_MODULE_9__, _coins__WEBPACK_IMPORTED_MODULE_11__]);\n([zod__WEBPACK_IMPORTED_MODULE_0__, _server_api_trpc__WEBPACK_IMPORTED_MODULE_1__, _trpc_server__WEBPACK_IMPORTED_MODULE_4__, axios__WEBPACK_IMPORTED_MODULE_6__, _server_utils_ai__WEBPACK_IMPORTED_MODULE_9__, _coins__WEBPACK_IMPORTED_MODULE_11__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n// eslint-disable-file @typescript-eslint/no-unsafe-member-access\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst BUCKET_NAME = \"learn-ai-m93\";\naws_sdk__WEBPACK_IMPORTED_MODULE_2___default().config.update({\n    accessKeyId: process.env.AWS_ACCESS_KEY_ID,\n    secretAccessKey: process.env.AWS_SECRET_ACCESS_KEY,\n    region: process.env.AWS_REGION\n});\nconst s3 = new (aws_sdk__WEBPACK_IMPORTED_MODULE_2___default().S3)();\nconst getDownloadUrl = async (key)=>{\n    const params = {\n        Bucket: BUCKET_NAME,\n        Key: key,\n        Expires: 60 * 60 * 24 * 7\n    };\n    const promise = new Promise((resolve)=>{\n        s3.getSignedUrl(\"getObject\", params, (err, data)=>{\n            if (err) {\n                throw new _trpc_server__WEBPACK_IMPORTED_MODULE_4__.TRPCError({\n                    code: \"INTERNAL_SERVER_ERROR\",\n                    message: \"Error creating download URL from AWS S3\",\n                    cause: err?.message\n                });\n            }\n            resolve(data);\n        });\n    });\n    return promise;\n};\nconst transcribeImage = async (key)=>{\n    const textract = new (aws_sdk__WEBPACK_IMPORTED_MODULE_2___default().Textract)();\n    let text = \"\";\n    const promise = new Promise((resolve)=>{\n        textract.detectDocumentText({\n            Document: {\n                S3Object: {\n                    Bucket: BUCKET_NAME,\n                    Name: key\n                }\n            }\n        }, (err, data)=>{\n            if (err) {\n                throw new _trpc_server__WEBPACK_IMPORTED_MODULE_4__.TRPCError({\n                    code: \"INTERNAL_SERVER_ERROR\",\n                    message: \"Error extracting text from image\",\n                    cause: err?.message\n                });\n            }\n            if (data?.Blocks) {\n                text = data.Blocks.filter((block)=>block.BlockType === \"LINE\").map((block)=>block.Text).join(\"\\n\");\n            }\n            resolve(text);\n        });\n    });\n    return promise;\n};\nconst transcribeAudio = async (key)=>{\n    console.debug(\"Transcribing audio file\", key);\n    const transcribeService = new (aws_sdk__WEBPACK_IMPORTED_MODULE_2___default().TranscribeService)();\n    const params = {\n        TranscriptionJobName: `JobName-${Date.now()}`,\n        IdentifyLanguage: true,\n        MediaFormat: key.endsWith(\"mp3\") ? \"mp3\" : key.endsWith(\"wav\") ? \"wav\" : \"mp4\",\n        Media: {\n            MediaFileUri: `s3://${BUCKET_NAME}/${key}`\n        }\n    };\n    const response = await transcribeService.startTranscriptionJob(params).promise();\n    let job = response.TranscriptionJob;\n    while(job.TranscriptionJobStatus !== \"COMPLETED\"){\n        console.debug(\"Waiting for transcription job to complete...\");\n        await new Promise((resolve)=>setTimeout(resolve, 3000));\n        const res = await transcribeService.getTranscriptionJob({\n            TranscriptionJobName: job.TranscriptionJobName\n        }).promise();\n        job = res.TranscriptionJob;\n    }\n    const transcriptUri = job.Transcript?.TranscriptFileUri;\n    if (!transcriptUri) {\n        throw new _trpc_server__WEBPACK_IMPORTED_MODULE_4__.TRPCError({\n            code: \"INTERNAL_SERVER_ERROR\",\n            message: \"Error getting transcript URI\"\n        });\n    }\n    // Fetch the transcript result from the provided URI\n    const transcriptResponse = await fetch(transcriptUri);\n    const transcriptData = await transcriptResponse.json();\n    return transcriptData.results.transcripts[0].transcript;\n};\nconst extractAndStoreText = async (key)=>{\n    const file = await database_src_client__WEBPACK_IMPORTED_MODULE_5__.prisma.file.findFirstOrThrow({\n        where: {\n            key\n        }\n    });\n    const downloadAsBuffer = async ()=>{\n        const downloadUrl = await getDownloadUrl(key);\n        const response = await axios__WEBPACK_IMPORTED_MODULE_6__[\"default\"].get(downloadUrl, {\n            responseType: \"arraybuffer\"\n        });\n        return response.data;\n    };\n    let text = null;\n    let numPages = undefined;\n    let isDigitalContent = false;\n    if (file.type === \"application/pdf\") {\n        const { text: t, numPages: n } = await (0,_server_utils_extractPdf__WEBPACK_IMPORTED_MODULE_7__.extractPdf)(await downloadAsBuffer());\n        text = t;\n        numPages = n;\n        isDigitalContent = true;\n        if (!t || t.trim().length === 0) {\n            isDigitalContent = false;\n            numPages = undefined;\n            const tImage = await transcribeImage(key);\n            text = tImage;\n        }\n    } else if (file.type === \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\") {\n        const result = await mammoth__WEBPACK_IMPORTED_MODULE_3__.extractRawText({\n            buffer: await downloadAsBuffer()\n        });\n        isDigitalContent = true;\n        text = result.value;\n    } else if (file.type.includes(\"image\")) {\n        text = await transcribeImage(key);\n    } else if (file.type.includes(\"audio\")) {\n        text = await transcribeAudio(key);\n    } else {\n        throw new _trpc_server__WEBPACK_IMPORTED_MODULE_4__.TRPCError({\n            code: \"BAD_REQUEST\",\n            message: \"File type not supported\"\n        });\n    }\n    await database_src_client__WEBPACK_IMPORTED_MODULE_5__.prisma.file.update({\n        where: {\n            uid: file.uid\n        },\n        data: {\n            text,\n            hasProcessed: !!text,\n            isDigitalContent,\n            numPages\n        }\n    });\n    return {\n        text,\n        numPages\n    };\n};\nconst fileRouter = (0,_server_api_trpc__WEBPACK_IMPORTED_MODULE_1__.createTRPCRouter)({\n    addRatingToSummary: _server_api_trpc__WEBPACK_IMPORTED_MODULE_1__.privateProcedure.input(zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n        uid: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().nonempty(),\n        rating: zod__WEBPACK_IMPORTED_MODULE_0__.z.number().int().min(1).max(5)\n    })).mutation(async ({ ctx, input })=>{\n        const summary = await ctx.prisma.summary.findUnique({\n            where: {\n                uid: input.uid,\n                file: {\n                    userId: ctx.userId\n                }\n            }\n        });\n        if (!summary) {\n            throw new _trpc_server__WEBPACK_IMPORTED_MODULE_4__.TRPCError({\n                code: \"NOT_FOUND\",\n                message: \"Summary not found\"\n            });\n        }\n        const updatedSummary = await ctx.prisma.summary.update({\n            where: {\n                uid: input.uid\n            },\n            data: {\n                rating: input.rating\n            }\n        });\n        return updatedSummary;\n    }),\n    onAfterUpload: _server_api_trpc__WEBPACK_IMPORTED_MODULE_1__.privateProcedure.input(zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n        key: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().nonempty(),\n        name: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().nonempty(),\n        type: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().nonempty(),\n        size: zod__WEBPACK_IMPORTED_MODULE_0__.z.number().int().positive(),\n        options: zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n            audioDurationInSeconds: zod__WEBPACK_IMPORTED_MODULE_0__.z.number().int().positive().optional()\n        })\n    })).mutation(async ({ ctx, input })=>{\n        let cost = 0;\n        try {\n            cost = (0,_utils_costs__WEBPACK_IMPORTED_MODULE_10__.getCostUploadByFileType)(input.type, input.options);\n        } catch (e) {\n            console.error(e);\n            throw new _trpc_server__WEBPACK_IMPORTED_MODULE_4__.TRPCError({\n                code: \"BAD_REQUEST\",\n                message: \"Could not compute cost\"\n            });\n        }\n        await (0,_coins__WEBPACK_IMPORTED_MODULE_11__.ensureUserHasCoins)(ctx.userId, cost);\n        const file = await ctx.prisma.file.create({\n            data: {\n                key: input.key,\n                name: input.name,\n                type: input.type,\n                userId: ctx.userId,\n                size: input.size\n            }\n        });\n        void extractAndStoreText(input.key);\n        await (0,_coins__WEBPACK_IMPORTED_MODULE_11__.deductCoins)(ctx.userId, cost);\n        return file;\n    }),\n    updateFile: _server_api_trpc__WEBPACK_IMPORTED_MODULE_1__.privateProcedure.input(zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n        uid: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().nonempty(),\n        name: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().nonempty()\n    })).mutation(async ({ ctx, input })=>{\n        const file = await ctx.prisma.file.update({\n            where: {\n                uid: input.uid,\n                userId: ctx.userId\n            },\n            data: {\n                name: input.name\n            }\n        });\n        return file;\n    }),\n    getFileByUid: _server_api_trpc__WEBPACK_IMPORTED_MODULE_1__.privateProcedure.input(zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n        uid: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().nonempty(),\n        getText: zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean().optional()\n    })).query(async ({ ctx, input })=>{\n        const file = await ctx.prisma.file.findUnique({\n            where: {\n                uid: input.uid,\n                userId: ctx.userId\n            }\n        });\n        if (!file) {\n            throw new _trpc_server__WEBPACK_IMPORTED_MODULE_4__.TRPCError({\n                code: \"NOT_FOUND\",\n                message: \"File not found\"\n            });\n        }\n        let previewUrl = null;\n        if (file.type.includes(\"image\")) {\n            previewUrl = await getDownloadUrl(file.key);\n        }\n        if (!input.getText) {\n            file.text = \"\";\n        }\n        return {\n            ...file,\n            previewUrl\n        };\n    }),\n    getAllUserFiles: _server_api_trpc__WEBPACK_IMPORTED_MODULE_1__.privateProcedure.query(async ({ ctx })=>{\n        const files = await ctx.prisma.file.findMany({\n            select: {\n                key: true,\n                name: true,\n                type: true,\n                uid: true,\n                userId: true,\n                hasProcessed: true,\n                createdAt: true,\n                size: true,\n                numPages: true\n            },\n            where: {\n                userId: ctx.userId\n            }\n        });\n        return files;\n    }),\n    getRecentSummaries: _server_api_trpc__WEBPACK_IMPORTED_MODULE_1__.privateProcedure.query(async ({ ctx })=>{\n        const summaries = await ctx.prisma.summary.findMany({\n            select: {\n                createdAt: true,\n                fileUid: true,\n                language: true,\n                uid: true,\n                file: {\n                    select: {\n                        name: true,\n                        type: true\n                    }\n                },\n                pageStart: true,\n                pageEnd: true,\n                type: true\n            },\n            where: {\n                file: {\n                    userId: ctx.userId\n                }\n            },\n            orderBy: {\n                createdAt: \"desc\"\n            },\n            take: 5\n        });\n        return summaries;\n    }),\n    getDownloadUrl: _server_api_trpc__WEBPACK_IMPORTED_MODULE_1__.privateProcedure.input(zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n        key: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().nonempty()\n    })).query(async ({ input })=>{\n        return getDownloadUrl(input.key);\n    }),\n    createUploadUrl: _server_api_trpc__WEBPACK_IMPORTED_MODULE_1__.privateProcedure.input(zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n        filename: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().nonempty(),\n        filetype: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().nonempty()\n    })).mutation(async ({ ctx, input })=>{\n        const timeNow = new Date().getTime();\n        const theKey = `${ctx.userId}/${timeNow}-${input.filename}`;\n        const params = {\n            Bucket: BUCKET_NAME,\n            Key: theKey,\n            Expires: 60,\n            ContentType: input.filetype\n        };\n        const promise = new Promise((resolve)=>{\n            s3.getSignedUrl(\"putObject\", params, (err, data)=>{\n                if (err) {\n                    throw new _trpc_server__WEBPACK_IMPORTED_MODULE_4__.TRPCError({\n                        code: \"INTERNAL_SERVER_ERROR\",\n                        message: \"Error creating upload URL from AWS S3\",\n                        cause: err?.message\n                    });\n                }\n                resolve({\n                    url: data,\n                    key: theKey\n                });\n            });\n        });\n        return promise;\n    }),\n    getSummary: _server_api_trpc__WEBPACK_IMPORTED_MODULE_1__.privateProcedure.input(zod__WEBPACK_IMPORTED_MODULE_0__.z.string().nonempty()).query(async ({ ctx, input })=>{\n        const summary = await ctx.prisma.summary.findUnique({\n            where: {\n                uid: input,\n                file: {\n                    userId: ctx.userId\n                }\n            }\n        });\n        if (!summary) {\n            throw new _trpc_server__WEBPACK_IMPORTED_MODULE_4__.TRPCError({\n                code: \"NOT_FOUND\",\n                message: \"Summary not found\"\n            });\n        }\n        return summary;\n    }),\n    getSummaries: _server_api_trpc__WEBPACK_IMPORTED_MODULE_1__.privateProcedure.input(zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n        fileUid: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().nonempty(),\n        type: zod__WEBPACK_IMPORTED_MODULE_0__.z.nativeEnum(_prisma_client__WEBPACK_IMPORTED_MODULE_12__.SummaryType)\n    })).query(async ({ ctx, input })=>{\n        const summaries = await ctx.prisma.summary.findMany({\n            select: {\n                createdAt: true,\n                fileUid: true,\n                language: true,\n                uid: true,\n                pageStart: true,\n                pageEnd: true,\n                type: true\n            },\n            where: {\n                fileUid: input.fileUid,\n                type: input.type\n            }\n        });\n        return summaries;\n    }),\n    getAllChats: _server_api_trpc__WEBPACK_IMPORTED_MODULE_1__.privateProcedure.input(zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n        fileUid: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().nonempty()\n    })).query(async ({ ctx, input })=>{\n        const chats = await ctx.prisma.chat.findMany({\n            select: {\n                createdAt: true,\n                fileUid: true,\n                uid: true,\n                firstQuestion: true\n            },\n            where: {\n                fileUid: input.fileUid\n            }\n        });\n        return chats;\n    }),\n    getChat: _server_api_trpc__WEBPACK_IMPORTED_MODULE_1__.privateProcedure.input(zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n        uid: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().nonempty()\n    })).query(async ({ ctx, input })=>{\n        const chat = await ctx.prisma.chat.findUnique({\n            select: {\n                createdAt: true,\n                fileUid: true,\n                uid: true,\n                firstQuestion: true,\n                history: true\n            },\n            where: {\n                uid: input.uid\n            }\n        });\n        if (!chat) {\n            throw new _trpc_server__WEBPACK_IMPORTED_MODULE_4__.TRPCError({\n                code: \"NOT_FOUND\",\n                message: \"Chat not found\"\n            });\n        }\n        return chat;\n    }),\n    askQuestion: _server_api_trpc__WEBPACK_IMPORTED_MODULE_1__.privateProcedure.input(zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n        fileUid: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().nonempty(),\n        chatUid: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n        question: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().nonempty()\n    })).mutation(()=>{\n        throw new _trpc_server__WEBPACK_IMPORTED_MODULE_4__.TRPCError({\n            code: \"NOT_IMPLEMENTED\",\n            message: \"This feature is not implemented yet\"\n        });\n    }),\n    generateSummary: _server_api_trpc__WEBPACK_IMPORTED_MODULE_1__.privateProcedure.input(zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n        type: zod__WEBPACK_IMPORTED_MODULE_0__.z.nativeEnum(_prisma_client__WEBPACK_IMPORTED_MODULE_12__.SummaryType),\n        key: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().nonempty(),\n        languageCode: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().nonempty(),\n        pageStart: zod__WEBPACK_IMPORTED_MODULE_0__.z.number().int().positive().optional(),\n        pageEnd: zod__WEBPACK_IMPORTED_MODULE_0__.z.number().int().positive().optional()\n    })).mutation(async ({ ctx, input })=>{\n        const cost = (0,_utils_costs__WEBPACK_IMPORTED_MODULE_10__.getCostBySummaryTypeAndPages)(input.type, input.pageStart, input.pageEnd);\n        await (0,_coins__WEBPACK_IMPORTED_MODULE_11__.ensureUserHasCoins)(ctx.userId, cost);\n        const file = await database_src_client__WEBPACK_IMPORTED_MODULE_5__.prisma.file.findFirst({\n            where: {\n                key: input.key,\n                userId: ctx.userId\n            }\n        });\n        if (!file) {\n            throw new _trpc_server__WEBPACK_IMPORTED_MODULE_4__.TRPCError({\n                code: \"NOT_FOUND\",\n                message: \"File not found\"\n            });\n        }\n        if (!file.text) {\n            throw new _trpc_server__WEBPACK_IMPORTED_MODULE_4__.TRPCError({\n                code: \"BAD_REQUEST\",\n                message: \"File has not been processed yet\"\n            });\n        }\n        const text = (0,_server_utils_extractPagesFromFileText__WEBPACK_IMPORTED_MODULE_8__.extractPagesFromFileText)(file.text, input.pageStart, input.pageEnd);\n        console.debug(\"Extracted text\", text.length, \"characters\");\n        const summary = await (0,_server_utils_ai__WEBPACK_IMPORTED_MODULE_9__.summarizeText)(text, file.name, input.languageCode, input.type);\n        const s = await database_src_client__WEBPACK_IMPORTED_MODULE_5__.prisma.summary.create({\n            data: {\n                fileUid: file.uid,\n                language: input.languageCode,\n                text: summary,\n                pageStart: input.pageStart,\n                pageEnd: input.pageEnd,\n                type: input.type\n            }\n        });\n        await (0,_coins__WEBPACK_IMPORTED_MODULE_11__.deductCoins)(ctx.userId, cost);\n        return s;\n    })\n});\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./src/server/api/routers/file.ts\n");

/***/ }),

/***/ "(api)/./src/server/api/routers/stripe.ts":
/*!******************************************!*\
  !*** ./src/server/api/routers/stripe.ts ***!
  \******************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getOrCreateStripeCustomerIdForUser: () => (/* binding */ getOrCreateStripeCustomerIdForUser),\n/* harmony export */   handleInvoicePaid: () => (/* binding */ handleInvoicePaid),\n/* harmony export */   handleStripeCheckoutSessionCompleted: () => (/* binding */ handleStripeCheckoutSessionCompleted),\n/* harmony export */   handleSubscriptionUpdated: () => (/* binding */ handleSubscriptionUpdated),\n/* harmony export */   stripe: () => (/* binding */ stripe),\n/* harmony export */   stripeRouter: () => (/* binding */ stripeRouter)\n/* harmony export */ });\n/* harmony import */ var _trpc_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @trpc/server */ \"@trpc/server\");\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! zod */ \"zod\");\n/* harmony import */ var stripe__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! stripe */ \"stripe\");\n/* harmony import */ var _server_api_trpc__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ~/server/api/trpc */ \"(api)/./src/server/api/trpc.ts\");\n/* harmony import */ var _clerk_nextjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @clerk/nextjs */ \"@clerk/nextjs\");\n/* harmony import */ var _clerk_nextjs__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_clerk_nextjs__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _utils_constants__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ~/utils/constants */ \"(api)/./src/utils/constants.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_trpc_server__WEBPACK_IMPORTED_MODULE_0__, zod__WEBPACK_IMPORTED_MODULE_1__, stripe__WEBPACK_IMPORTED_MODULE_2__, _server_api_trpc__WEBPACK_IMPORTED_MODULE_3__]);\n([_trpc_server__WEBPACK_IMPORTED_MODULE_0__, zod__WEBPACK_IMPORTED_MODULE_1__, stripe__WEBPACK_IMPORTED_MODULE_2__, _server_api_trpc__WEBPACK_IMPORTED_MODULE_3__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n/* eslint-disable @typescript-eslint/no-unsafe-call */ /* eslint-disable @typescript-eslint/no-unsafe-return */ /* eslint-disable @typescript-eslint/no-unsafe-assignment */ /* eslint-disable @typescript-eslint/no-explicit-any */ /* eslint-disable @typescript-eslint/no-unsafe-member-access */ // eslint-disable-file @typescript-eslint/no-unsafe-member-access\n\n\n\n\n\n\nconst stripe = new stripe__WEBPACK_IMPORTED_MODULE_2__.Stripe(process.env.STRIPE_SECRET_KEY, {\n    apiVersion: \"2023-08-16\"\n});\nconst getOrCreateStripeCustomerIdForUser = async ({ stripe, prisma, userId })=>{\n    const user = await _clerk_nextjs__WEBPACK_IMPORTED_MODULE_4__.clerkClient.users.getUser(userId);\n    const ourUser = await prisma.user.findUnique({\n        where: {\n            id: user.id\n        }\n    });\n    if (!ourUser) throw new Error(\"User not found\");\n    if (ourUser.stripeCustomerId) {\n        return ourUser.stripeCustomerId;\n    }\n    const customer = await stripe.customers.create({\n        email: user.emailAddresses?.[0]?.emailAddress ?? undefined,\n        name: `${user.firstName} ${user.lastName}` ?? 0,\n        metadata: {\n            userId: user.id\n        }\n    });\n    const updatedUser = await prisma.user.update({\n        where: {\n            id: user.id\n        },\n        data: {\n            stripeCustomerId: customer.id\n        }\n    });\n    return updatedUser.stripeCustomerId;\n};\nconst handleInvoicePaid = async ({ event, stripe, prisma })=>{\n    const invoice = event.data.object;\n    const subscriptionId = invoice.subscription;\n    const subscription = await stripe.subscriptions.retrieve(subscriptionId);\n    const userId = subscription.metadata.userId;\n    await prisma.user.update({\n        where: {\n            id: userId\n        },\n        data: {\n            stripeSubscriptionId: subscription.id,\n            stripeSubscriptionStatus: subscription.status,\n            stripeSubscriptionPaidUntil: subscription.status.includes(\"incomplete\") ? undefined : new Date(subscription.current_period_end * 1000)\n        }\n    });\n};\nconst handleStripeCheckoutSessionCompleted = async ({ event, prisma })=>{\n    const session = event.data.object;\n    const userId = session.metadata?.userId;\n    console.info(\"Handling checkout session completed\", session);\n    const lineItemsResp = await stripe.checkout.sessions.listLineItems(session.id);\n    const lineItems = lineItemsResp.data;\n    console.info(\"Line items\", lineItems);\n    for (const li of lineItems){\n        const product = li.price?.product;\n        const productId = typeof product === \"string\" ? product : product.id;\n        console.info(\"Product\", product);\n        if (productId === process.env.STRIPE_COIN_PRODUCT_ID) {\n            const quantity = li.quantity ?? 1;\n            console.info(\"Quantity\", quantity);\n            await prisma.coins.update({\n                where: {\n                    userId: userId\n                },\n                data: {\n                    coins: {\n                        increment: quantity * _utils_constants__WEBPACK_IMPORTED_MODULE_5__.COINS_PER_BUNDLE\n                    }\n                }\n            });\n        } else {\n            console.warn(\"Unknown product\", product);\n        }\n    }\n};\nconst handleSubscriptionUpdated = async ({ event, prisma })=>{\n    const subscription = event.data.object;\n    const userId = subscription.metadata.userId;\n    await prisma.user.update({\n        where: {\n            id: userId\n        },\n        data: {\n            stripeSubscriptionId: subscription.id,\n            stripeSubscriptionStatus: subscription.status,\n            stripeSubscriptionPaidUntil: subscription.status.includes(\"incomplete\") ? undefined : new Date(subscription.current_period_end * 1000)\n        }\n    });\n};\nconst stripeRouter = (0,_server_api_trpc__WEBPACK_IMPORTED_MODULE_3__.createTRPCRouter)({\n    getProductPrice: _server_api_trpc__WEBPACK_IMPORTED_MODULE_3__.privateProcedure.input(zod__WEBPACK_IMPORTED_MODULE_1__.z.object({\n        product: zod__WEBPACK_IMPORTED_MODULE_1__.z.enum([\n            \"SUBS_MONTHLY\",\n            \"SUBS_YEARLY\",\n            \"COIN\"\n        ])\n    })).query(async ({ input })=>{\n        const prices = await stripe.prices.list({\n            active: true\n        });\n        const thePrice = prices.data.find((price)=>{\n            if (price.recurring?.interval === \"month\") {\n                return input.product === \"SUBS_MONTHLY\";\n            } else if (price.recurring?.interval === \"year\") {\n                return input.product === \"SUBS_YEARLY\";\n            } else if (price.product === process.env.STRIPE_COIN_PRODUCT_ID) {\n                return input.product === \"COIN\";\n            }\n        });\n        if (!thePrice) {\n            throw new _trpc_server__WEBPACK_IMPORTED_MODULE_0__.TRPCError({\n                code: \"INTERNAL_SERVER_ERROR\",\n                message: \"No price found\"\n            });\n        }\n        return thePrice.unit_amount;\n    }),\n    generateCheckoutUrl: _server_api_trpc__WEBPACK_IMPORTED_MODULE_3__.privateProcedure.input(zod__WEBPACK_IMPORTED_MODULE_1__.z.object({\n        product: zod__WEBPACK_IMPORTED_MODULE_1__.z.enum([\n            \"SUBS_MONTHLY\",\n            \"SUBS_YEARLY\",\n            \"COIN\"\n        ]),\n        amount: zod__WEBPACK_IMPORTED_MODULE_1__.z.number().optional(),\n        origin: zod__WEBPACK_IMPORTED_MODULE_1__.z.string()\n    })).mutation(async ({ ctx, input })=>{\n        const customerId = await getOrCreateStripeCustomerIdForUser({\n            prisma: ctx.prisma,\n            stripe,\n            userId: ctx.userId\n        });\n        if (input.product === \"COIN\") {\n            const prices = await stripe.prices.list({\n                product: process.env.STRIPE_COIN_PRODUCT_ID,\n                expand: [\n                    \"data.product\"\n                ]\n            });\n            const thePrice = prices.data.find((price)=>{\n                return price.active;\n            });\n            if (!thePrice) {\n                throw new _trpc_server__WEBPACK_IMPORTED_MODULE_0__.TRPCError({\n                    code: \"INTERNAL_SERVER_ERROR\",\n                    message: \"No price found\"\n                });\n            }\n            const params = {\n                payment_intent_data: {\n                    metadata: {\n                        userId: ctx.userId\n                    }\n                },\n                billing_address_collection: \"auto\",\n                mode: \"payment\",\n                line_items: [\n                    {\n                        price: thePrice.id,\n                        quantity: input.amount ?? 1\n                    }\n                ],\n                metadata: {\n                    userId: ctx.userId\n                },\n                allow_promotion_codes: true,\n                customer: customerId,\n                success_url: input.origin,\n                cancel_url: input.origin\n            };\n            const session = await stripe.checkout.sessions.create(params);\n            return session;\n        } else {\n            const prices = await stripe.prices.list({\n                product: process.env.STRIPE_SUBSCRIPTION_PRODUCT_ID,\n                expand: [\n                    \"data.product\"\n                ]\n            });\n            const thePrice = prices.data.find((price)=>{\n                if (input.product === \"SUBS_MONTHLY\") {\n                    return price.recurring?.interval === \"month\" && price.active;\n                } else if (input.product === \"SUBS_YEARLY\") {\n                    return price.recurring?.interval === \"year\" && price.active;\n                }\n            });\n            if (!thePrice) {\n                throw new _trpc_server__WEBPACK_IMPORTED_MODULE_0__.TRPCError({\n                    code: \"INTERNAL_SERVER_ERROR\",\n                    message: \"No price found\"\n                });\n            }\n            const params = {\n                subscription_data: {\n                    metadata: {\n                        userId: ctx.userId\n                    }\n                },\n                billing_address_collection: \"auto\",\n                mode: \"subscription\",\n                line_items: [\n                    {\n                        price: thePrice.id,\n                        quantity: 1\n                    }\n                ],\n                metadata: {\n                    userId: ctx.userId\n                },\n                allow_promotion_codes: true,\n                customer: customerId,\n                success_url: input.origin,\n                cancel_url: input.origin\n            };\n            const session = await stripe.checkout.sessions.create(params);\n            return session;\n        }\n    }),\n    generateBillingPortalUrl: _server_api_trpc__WEBPACK_IMPORTED_MODULE_3__.privateProcedure.input(zod__WEBPACK_IMPORTED_MODULE_1__.z.object({\n        origin: zod__WEBPACK_IMPORTED_MODULE_1__.z.string()\n    })).mutation(async ({ ctx, input })=>{\n        const customerId = await getOrCreateStripeCustomerIdForUser({\n            prisma: ctx.prisma,\n            stripe,\n            userId: ctx.userId\n        });\n        const stripeBillingPortalSession = await stripe.billingPortal.sessions.create({\n            customer: customerId,\n            return_url: input.origin\n        });\n        if (!stripeBillingPortalSession) {\n            throw new _trpc_server__WEBPACK_IMPORTED_MODULE_0__.TRPCError({\n                code: \"INTERNAL_SERVER_ERROR\",\n                message: \"No billing portal session found\"\n            });\n        }\n        return {\n            billingPortalUrl: stripeBillingPortalSession.url\n        };\n    })\n});\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./src/server/api/routers/stripe.ts\n");

/***/ }),

/***/ "(api)/./src/server/api/routers/user.ts":
/*!****************************************!*\
  !*** ./src/server/api/routers/user.ts ***!
  \****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getUserSubscriptionStatus: () => (/* binding */ getUserSubscriptionStatus),\n/* harmony export */   userRouter: () => (/* binding */ userRouter)\n/* harmony export */ });\n/* harmony import */ var database_src_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! database/src/client */ \"(api)/../../packages/database/src/client.ts\");\n/* harmony import */ var dayjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! dayjs */ \"dayjs\");\n/* harmony import */ var dayjs__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(dayjs__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _server_api_trpc__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ~/server/api/trpc */ \"(api)/./src/server/api/trpc.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_server_api_trpc__WEBPACK_IMPORTED_MODULE_2__]);\n_server_api_trpc__WEBPACK_IMPORTED_MODULE_2__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n// eslint-disable-file @typescript-eslint/no-unsafe-member-access\n\n\n\nconst getUserSubscriptionStatus = async (userId)=>{\n    let user = await database_src_client__WEBPACK_IMPORTED_MODULE_0__.prisma.user.findUnique({\n        where: {\n            id: userId\n        },\n        select: {\n            stripeSubscriptionStatus: true,\n            stripeSubscriptionPaidUntil: true\n        }\n    });\n    if (!user) {\n        user = await database_src_client__WEBPACK_IMPORTED_MODULE_0__.prisma.user.create({\n            data: {\n                id: userId\n            }\n        });\n    }\n    return {\n        status: user.stripeSubscriptionStatus,\n        paidUntil: user.stripeSubscriptionPaidUntil,\n        isValid: !!user.stripeSubscriptionPaidUntil && dayjs__WEBPACK_IMPORTED_MODULE_1___default()(user.stripeSubscriptionPaidUntil).isAfter(new Date()) && user.stripeSubscriptionStatus !== \"canceled\"\n    };\n};\nconst userRouter = (0,_server_api_trpc__WEBPACK_IMPORTED_MODULE_2__.createTRPCRouter)({\n    getSubscriptionStatus: _server_api_trpc__WEBPACK_IMPORTED_MODULE_2__.privateProcedure.query(async ({ ctx })=>{\n        return await getUserSubscriptionStatus(ctx.userId);\n    })\n});\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvc2VydmVyL2FwaS9yb3V0ZXJzL3VzZXIudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUEsaUVBQWlFO0FBQ3BCO0FBQ25CO0FBQzZDO0FBRWhFLE1BQU1JLDRCQUE0QixPQUFPQztJQUM5QyxJQUFJQyxPQUFPLE1BQU1OLHVEQUFNQSxDQUFDTSxJQUFJLENBQUNDLFVBQVUsQ0FBQztRQUN0Q0MsT0FBTztZQUNMQyxJQUFJSjtRQUNOO1FBQ0FLLFFBQVE7WUFDTkMsMEJBQTBCO1lBQzFCQyw2QkFBNkI7UUFDL0I7SUFDRjtJQUVBLElBQUksQ0FBQ04sTUFBTTtRQUNUQSxPQUFPLE1BQU1OLHVEQUFNQSxDQUFDTSxJQUFJLENBQUNPLE1BQU0sQ0FBQztZQUM5QkMsTUFBTTtnQkFDSkwsSUFBSUo7WUFDTjtRQUNGO0lBQ0Y7SUFFQSxPQUFPO1FBQ0xVLFFBQVFULEtBQUtLLHdCQUF3QjtRQUNyQ0ssV0FBV1YsS0FBS00sMkJBQTJCO1FBQzNDSyxTQUNFLENBQUMsQ0FBQ1gsS0FBS00sMkJBQTJCLElBQ2xDWCw0Q0FBS0EsQ0FBQ0ssS0FBS00sMkJBQTJCLEVBQUVNLE9BQU8sQ0FBQyxJQUFJQyxXQUNwRGIsS0FBS0ssd0JBQXdCLEtBQUs7SUFDdEM7QUFDRixFQUFFO0FBRUssTUFBTVMsYUFBYWxCLGtFQUFnQkEsQ0FBQztJQUN6Q21CLHVCQUF1QmxCLDhEQUFnQkEsQ0FBQ21CLEtBQUssQ0FBQyxPQUFPLEVBQUVDLEdBQUcsRUFBRTtRQUMxRCxPQUFPLE1BQU1uQiwwQkFBMEJtQixJQUFJbEIsTUFBTTtJQUNuRDtBQUNGLEdBQUciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWFybi1haS8uL3NyYy9zZXJ2ZXIvYXBpL3JvdXRlcnMvdXNlci50cz9jZDFhIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGVzbGludC1kaXNhYmxlLWZpbGUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVuc2FmZS1tZW1iZXItYWNjZXNzXG5pbXBvcnQgeyBwcmlzbWEgfSBmcm9tIFwiZGF0YWJhc2Uvc3JjL2NsaWVudFwiO1xuaW1wb3J0IGRheWpzIGZyb20gXCJkYXlqc1wiO1xuaW1wb3J0IHsgY3JlYXRlVFJQQ1JvdXRlciwgcHJpdmF0ZVByb2NlZHVyZSB9IGZyb20gXCJ+L3NlcnZlci9hcGkvdHJwY1wiO1xuXG5leHBvcnQgY29uc3QgZ2V0VXNlclN1YnNjcmlwdGlvblN0YXR1cyA9IGFzeW5jICh1c2VySWQ6IHN0cmluZykgPT4ge1xuICBsZXQgdXNlciA9IGF3YWl0IHByaXNtYS51c2VyLmZpbmRVbmlxdWUoe1xuICAgIHdoZXJlOiB7XG4gICAgICBpZDogdXNlcklkLFxuICAgIH0sXG4gICAgc2VsZWN0OiB7XG4gICAgICBzdHJpcGVTdWJzY3JpcHRpb25TdGF0dXM6IHRydWUsXG4gICAgICBzdHJpcGVTdWJzY3JpcHRpb25QYWlkVW50aWw6IHRydWUsXG4gICAgfSxcbiAgfSk7XG5cbiAgaWYgKCF1c2VyKSB7XG4gICAgdXNlciA9IGF3YWl0IHByaXNtYS51c2VyLmNyZWF0ZSh7XG4gICAgICBkYXRhOiB7XG4gICAgICAgIGlkOiB1c2VySWQsXG4gICAgICB9LFxuICAgIH0pO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBzdGF0dXM6IHVzZXIuc3RyaXBlU3Vic2NyaXB0aW9uU3RhdHVzLFxuICAgIHBhaWRVbnRpbDogdXNlci5zdHJpcGVTdWJzY3JpcHRpb25QYWlkVW50aWwsXG4gICAgaXNWYWxpZDpcbiAgICAgICEhdXNlci5zdHJpcGVTdWJzY3JpcHRpb25QYWlkVW50aWwgJiZcbiAgICAgIGRheWpzKHVzZXIuc3RyaXBlU3Vic2NyaXB0aW9uUGFpZFVudGlsKS5pc0FmdGVyKG5ldyBEYXRlKCkpICYmXG4gICAgICB1c2VyLnN0cmlwZVN1YnNjcmlwdGlvblN0YXR1cyAhPT0gXCJjYW5jZWxlZFwiLFxuICB9O1xufTtcblxuZXhwb3J0IGNvbnN0IHVzZXJSb3V0ZXIgPSBjcmVhdGVUUlBDUm91dGVyKHtcbiAgZ2V0U3Vic2NyaXB0aW9uU3RhdHVzOiBwcml2YXRlUHJvY2VkdXJlLnF1ZXJ5KGFzeW5jICh7IGN0eCB9KSA9PiB7XG4gICAgcmV0dXJuIGF3YWl0IGdldFVzZXJTdWJzY3JpcHRpb25TdGF0dXMoY3R4LnVzZXJJZCk7XG4gIH0pLFxufSk7XG4iXSwibmFtZXMiOlsicHJpc21hIiwiZGF5anMiLCJjcmVhdGVUUlBDUm91dGVyIiwicHJpdmF0ZVByb2NlZHVyZSIsImdldFVzZXJTdWJzY3JpcHRpb25TdGF0dXMiLCJ1c2VySWQiLCJ1c2VyIiwiZmluZFVuaXF1ZSIsIndoZXJlIiwiaWQiLCJzZWxlY3QiLCJzdHJpcGVTdWJzY3JpcHRpb25TdGF0dXMiLCJzdHJpcGVTdWJzY3JpcHRpb25QYWlkVW50aWwiLCJjcmVhdGUiLCJkYXRhIiwic3RhdHVzIiwicGFpZFVudGlsIiwiaXNWYWxpZCIsImlzQWZ0ZXIiLCJEYXRlIiwidXNlclJvdXRlciIsImdldFN1YnNjcmlwdGlvblN0YXR1cyIsInF1ZXJ5IiwiY3R4Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./src/server/api/routers/user.ts\n");

/***/ }),

/***/ "(api)/./src/server/api/trpc.ts":
/*!********************************!*\
  !*** ./src/server/api/trpc.ts ***!
  \********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createTRPCContext: () => (/* binding */ createTRPCContext),\n/* harmony export */   createTRPCRouter: () => (/* binding */ createTRPCRouter),\n/* harmony export */   privateProcedure: () => (/* binding */ privateProcedure),\n/* harmony export */   publicProcedure: () => (/* binding */ publicProcedure)\n/* harmony export */ });\n/* harmony import */ var _clerk_nextjs_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @clerk/nextjs/server */ \"@clerk/nextjs/server\");\n/* harmony import */ var _clerk_nextjs_server__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_clerk_nextjs_server__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _trpc_server__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @trpc/server */ \"@trpc/server\");\n/* harmony import */ var database_src_client__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! database/src/client */ \"(api)/../../packages/database/src/client.ts\");\n/* harmony import */ var superjson__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! superjson */ \"superjson\");\n/* harmony import */ var superjson__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(superjson__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! zod */ \"zod\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_trpc_server__WEBPACK_IMPORTED_MODULE_1__, zod__WEBPACK_IMPORTED_MODULE_4__]);\n([_trpc_server__WEBPACK_IMPORTED_MODULE_1__, zod__WEBPACK_IMPORTED_MODULE_4__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n/**\n * YOU PROBABLY DON'T NEED TO EDIT THIS FILE, UNLESS:\n * 1. You want to modify request context (see Part 1).\n * 2. You want to create a new middleware or type of procedure (see Part 3).\n *\n * TL;DR - This is where all the tRPC server stuff is created and plugged in. The pieces you will\n * need to use are documented accordingly near the end.\n */ \n\n\n\n\n/**\n * 1. CONTEXT\n *\n * This section defines the \"contexts\" that are available in the backend API.\n *\n * These allow you to access things when processing a request, like the database, the session, etc.\n */ /**\n * This is the actual context you will use in your router. It will be used to process every request\n * that goes through your tRPC endpoint.\n *\n * @see https://trpc.io/docs/context\n */ const createTRPCContext = (opts)=>{\n    const { req } = opts;\n    const sesh = (0,_clerk_nextjs_server__WEBPACK_IMPORTED_MODULE_0__.getAuth)(req);\n    const userId = sesh.userId;\n    return {\n        prisma: database_src_client__WEBPACK_IMPORTED_MODULE_2__.prisma,\n        userId\n    };\n};\n/**\n * 2. INITIALIZATION\n *\n * This is where the tRPC API is initialized, connecting the context and transformer. We also parse\n * ZodErrors so that you get typesafety on the frontend if your procedure fails due to validation\n * errors on the backend.\n */ const t = _trpc_server__WEBPACK_IMPORTED_MODULE_1__.initTRPC.context().create({\n    transformer: (superjson__WEBPACK_IMPORTED_MODULE_3___default()),\n    errorFormatter ({ shape, error }) {\n        return {\n            ...shape,\n            data: {\n                ...shape.data,\n                zodError: error.cause instanceof zod__WEBPACK_IMPORTED_MODULE_4__.ZodError ? error.cause.flatten() : null\n            }\n        };\n    }\n});\n/**\n * 3. ROUTER & PROCEDURE (THE IMPORTANT BIT)\n *\n * These are the pieces you use to build your tRPC API. You should import these a lot in the\n * \"/src/server/api/routers\" directory.\n */ /**\n * This is how you create new routers and sub-routers in your tRPC API.\n *\n * @see https://trpc.io/docs/router\n */ const createTRPCRouter = t.router;\n/**\n * Public (unauthenticated) procedure\n *\n * This is the base piece you use to build new queries and mutations on your tRPC API. It does not\n * guarantee that a user querying is authorized, but you can still access user session data if they\n * are logged in.\n */ const publicProcedure = t.procedure;\nconst enforceUserIsAuthed = t.middleware(async ({ ctx, next })=>{\n    if (!ctx.userId) {\n        throw new _trpc_server__WEBPACK_IMPORTED_MODULE_1__.TRPCError({\n            code: \"UNAUTHORIZED\"\n        });\n    }\n    return next({\n        ctx: {\n            userId: ctx.userId\n        }\n    });\n});\nconst privateProcedure = t.procedure.use(enforceUserIsAuthed);\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvc2VydmVyL2FwaS90cnBjLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7Ozs7Ozs7Q0FPQyxHQUM4QztBQUNJO0FBRU47QUFDWDtBQUNIO0FBRS9COzs7Ozs7Q0FNQyxHQUVEOzs7OztDQUtDLEdBQ00sTUFBTU0sb0JBQW9CLENBQUNDO0lBQ2hDLE1BQU0sRUFBRUMsR0FBRyxFQUFFLEdBQUdEO0lBQ2hCLE1BQU1FLE9BQU9ULDZEQUFPQSxDQUFDUTtJQUNyQixNQUFNRSxTQUFTRCxLQUFLQyxNQUFNO0lBRTFCLE9BQU87UUFDTFAsTUFBTUEseURBQUFBO1FBQ05PO0lBQ0Y7QUFDRixFQUFFO0FBRUY7Ozs7OztDQU1DLEdBRUQsTUFBTUMsSUFBSVQsa0RBQVFBLENBQUNVLE9BQU8sR0FBNkJDLE1BQU0sQ0FBQztJQUM1REMsYUFBYVYsa0RBQVNBO0lBQ3RCVyxnQkFBZSxFQUFFQyxLQUFLLEVBQUVDLEtBQUssRUFBRTtRQUM3QixPQUFPO1lBQ0wsR0FBR0QsS0FBSztZQUNSRSxNQUFNO2dCQUNKLEdBQUdGLE1BQU1FLElBQUk7Z0JBQ2JDLFVBQ0VGLE1BQU1HLEtBQUssWUFBWWYseUNBQVFBLEdBQUdZLE1BQU1HLEtBQUssQ0FBQ0MsT0FBTyxLQUFLO1lBQzlEO1FBQ0Y7SUFDRjtBQUNGO0FBRUE7Ozs7O0NBS0MsR0FFRDs7OztDQUlDLEdBQ00sTUFBTUMsbUJBQW1CWCxFQUFFWSxNQUFNLENBQUM7QUFFekM7Ozs7OztDQU1DLEdBQ00sTUFBTUMsa0JBQWtCYixFQUFFYyxTQUFTLENBQUM7QUFFM0MsTUFBTUMsc0JBQXNCZixFQUFFZ0IsVUFBVSxDQUFDLE9BQU8sRUFBRUMsR0FBRyxFQUFFQyxJQUFJLEVBQUU7SUFDM0QsSUFBSSxDQUFDRCxJQUFJbEIsTUFBTSxFQUFFO1FBQ2YsTUFBTSxJQUFJVCxtREFBU0EsQ0FBQztZQUNsQjZCLE1BQU07UUFDUjtJQUNGO0lBRUEsT0FBT0QsS0FBSztRQUNWRCxLQUFLO1lBQ0hsQixRQUFRa0IsSUFBSWxCLE1BQU07UUFDcEI7SUFDRjtBQUNGO0FBRU8sTUFBTXFCLG1CQUFtQnBCLEVBQUVjLFNBQVMsQ0FBQ08sR0FBRyxDQUFDTixxQkFBcUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWFybi1haS8uL3NyYy9zZXJ2ZXIvYXBpL3RycGMudHM/MTk3MiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFlPVSBQUk9CQUJMWSBET04nVCBORUVEIFRPIEVESVQgVEhJUyBGSUxFLCBVTkxFU1M6XG4gKiAxLiBZb3Ugd2FudCB0byBtb2RpZnkgcmVxdWVzdCBjb250ZXh0IChzZWUgUGFydCAxKS5cbiAqIDIuIFlvdSB3YW50IHRvIGNyZWF0ZSBhIG5ldyBtaWRkbGV3YXJlIG9yIHR5cGUgb2YgcHJvY2VkdXJlIChzZWUgUGFydCAzKS5cbiAqXG4gKiBUTDtEUiAtIFRoaXMgaXMgd2hlcmUgYWxsIHRoZSB0UlBDIHNlcnZlciBzdHVmZiBpcyBjcmVhdGVkIGFuZCBwbHVnZ2VkIGluLiBUaGUgcGllY2VzIHlvdSB3aWxsXG4gKiBuZWVkIHRvIHVzZSBhcmUgZG9jdW1lbnRlZCBhY2NvcmRpbmdseSBuZWFyIHRoZSBlbmQuXG4gKi9cbmltcG9ydCB7IGdldEF1dGggfSBmcm9tIFwiQGNsZXJrL25leHRqcy9zZXJ2ZXJcIjtcbmltcG9ydCB7IFRSUENFcnJvciwgaW5pdFRSUEMgfSBmcm9tIFwiQHRycGMvc2VydmVyXCI7XG5pbXBvcnQgeyB0eXBlIENyZWF0ZU5leHRDb250ZXh0T3B0aW9ucyB9IGZyb20gXCJAdHJwYy9zZXJ2ZXIvYWRhcHRlcnMvbmV4dFwiO1xuaW1wb3J0IHsgcHJpc21hIH0gZnJvbSBcImRhdGFiYXNlL3NyYy9jbGllbnRcIjtcbmltcG9ydCBzdXBlcmpzb24gZnJvbSBcInN1cGVyanNvblwiO1xuaW1wb3J0IHsgWm9kRXJyb3IgfSBmcm9tIFwiem9kXCI7XG5cbi8qKlxuICogMS4gQ09OVEVYVFxuICpcbiAqIFRoaXMgc2VjdGlvbiBkZWZpbmVzIHRoZSBcImNvbnRleHRzXCIgdGhhdCBhcmUgYXZhaWxhYmxlIGluIHRoZSBiYWNrZW5kIEFQSS5cbiAqXG4gKiBUaGVzZSBhbGxvdyB5b3UgdG8gYWNjZXNzIHRoaW5ncyB3aGVuIHByb2Nlc3NpbmcgYSByZXF1ZXN0LCBsaWtlIHRoZSBkYXRhYmFzZSwgdGhlIHNlc3Npb24sIGV0Yy5cbiAqL1xuXG4vKipcbiAqIFRoaXMgaXMgdGhlIGFjdHVhbCBjb250ZXh0IHlvdSB3aWxsIHVzZSBpbiB5b3VyIHJvdXRlci4gSXQgd2lsbCBiZSB1c2VkIHRvIHByb2Nlc3MgZXZlcnkgcmVxdWVzdFxuICogdGhhdCBnb2VzIHRocm91Z2ggeW91ciB0UlBDIGVuZHBvaW50LlxuICpcbiAqIEBzZWUgaHR0cHM6Ly90cnBjLmlvL2RvY3MvY29udGV4dFxuICovXG5leHBvcnQgY29uc3QgY3JlYXRlVFJQQ0NvbnRleHQgPSAob3B0czogQ3JlYXRlTmV4dENvbnRleHRPcHRpb25zKSA9PiB7XG4gIGNvbnN0IHsgcmVxIH0gPSBvcHRzO1xuICBjb25zdCBzZXNoID0gZ2V0QXV0aChyZXEpO1xuICBjb25zdCB1c2VySWQgPSBzZXNoLnVzZXJJZDtcblxuICByZXR1cm4ge1xuICAgIHByaXNtYSxcbiAgICB1c2VySWQsXG4gIH07XG59O1xuXG4vKipcbiAqIDIuIElOSVRJQUxJWkFUSU9OXG4gKlxuICogVGhpcyBpcyB3aGVyZSB0aGUgdFJQQyBBUEkgaXMgaW5pdGlhbGl6ZWQsIGNvbm5lY3RpbmcgdGhlIGNvbnRleHQgYW5kIHRyYW5zZm9ybWVyLiBXZSBhbHNvIHBhcnNlXG4gKiBab2RFcnJvcnMgc28gdGhhdCB5b3UgZ2V0IHR5cGVzYWZldHkgb24gdGhlIGZyb250ZW5kIGlmIHlvdXIgcHJvY2VkdXJlIGZhaWxzIGR1ZSB0byB2YWxpZGF0aW9uXG4gKiBlcnJvcnMgb24gdGhlIGJhY2tlbmQuXG4gKi9cblxuY29uc3QgdCA9IGluaXRUUlBDLmNvbnRleHQ8dHlwZW9mIGNyZWF0ZVRSUENDb250ZXh0PigpLmNyZWF0ZSh7XG4gIHRyYW5zZm9ybWVyOiBzdXBlcmpzb24sXG4gIGVycm9yRm9ybWF0dGVyKHsgc2hhcGUsIGVycm9yIH0pIHtcbiAgICByZXR1cm4ge1xuICAgICAgLi4uc2hhcGUsXG4gICAgICBkYXRhOiB7XG4gICAgICAgIC4uLnNoYXBlLmRhdGEsXG4gICAgICAgIHpvZEVycm9yOlxuICAgICAgICAgIGVycm9yLmNhdXNlIGluc3RhbmNlb2YgWm9kRXJyb3IgPyBlcnJvci5jYXVzZS5mbGF0dGVuKCkgOiBudWxsLFxuICAgICAgfSxcbiAgICB9O1xuICB9LFxufSk7XG5cbi8qKlxuICogMy4gUk9VVEVSICYgUFJPQ0VEVVJFIChUSEUgSU1QT1JUQU5UIEJJVClcbiAqXG4gKiBUaGVzZSBhcmUgdGhlIHBpZWNlcyB5b3UgdXNlIHRvIGJ1aWxkIHlvdXIgdFJQQyBBUEkuIFlvdSBzaG91bGQgaW1wb3J0IHRoZXNlIGEgbG90IGluIHRoZVxuICogXCIvc3JjL3NlcnZlci9hcGkvcm91dGVyc1wiIGRpcmVjdG9yeS5cbiAqL1xuXG4vKipcbiAqIFRoaXMgaXMgaG93IHlvdSBjcmVhdGUgbmV3IHJvdXRlcnMgYW5kIHN1Yi1yb3V0ZXJzIGluIHlvdXIgdFJQQyBBUEkuXG4gKlxuICogQHNlZSBodHRwczovL3RycGMuaW8vZG9jcy9yb3V0ZXJcbiAqL1xuZXhwb3J0IGNvbnN0IGNyZWF0ZVRSUENSb3V0ZXIgPSB0LnJvdXRlcjtcblxuLyoqXG4gKiBQdWJsaWMgKHVuYXV0aGVudGljYXRlZCkgcHJvY2VkdXJlXG4gKlxuICogVGhpcyBpcyB0aGUgYmFzZSBwaWVjZSB5b3UgdXNlIHRvIGJ1aWxkIG5ldyBxdWVyaWVzIGFuZCBtdXRhdGlvbnMgb24geW91ciB0UlBDIEFQSS4gSXQgZG9lcyBub3RcbiAqIGd1YXJhbnRlZSB0aGF0IGEgdXNlciBxdWVyeWluZyBpcyBhdXRob3JpemVkLCBidXQgeW91IGNhbiBzdGlsbCBhY2Nlc3MgdXNlciBzZXNzaW9uIGRhdGEgaWYgdGhleVxuICogYXJlIGxvZ2dlZCBpbi5cbiAqL1xuZXhwb3J0IGNvbnN0IHB1YmxpY1Byb2NlZHVyZSA9IHQucHJvY2VkdXJlO1xuXG5jb25zdCBlbmZvcmNlVXNlcklzQXV0aGVkID0gdC5taWRkbGV3YXJlKGFzeW5jICh7IGN0eCwgbmV4dCB9KSA9PiB7XG4gIGlmICghY3R4LnVzZXJJZCkge1xuICAgIHRocm93IG5ldyBUUlBDRXJyb3Ioe1xuICAgICAgY29kZTogXCJVTkFVVEhPUklaRURcIixcbiAgICB9KTtcbiAgfVxuXG4gIHJldHVybiBuZXh0KHtcbiAgICBjdHg6IHtcbiAgICAgIHVzZXJJZDogY3R4LnVzZXJJZCxcbiAgICB9LFxuICB9KTtcbn0pO1xuXG5leHBvcnQgY29uc3QgcHJpdmF0ZVByb2NlZHVyZSA9IHQucHJvY2VkdXJlLnVzZShlbmZvcmNlVXNlcklzQXV0aGVkKTtcbiJdLCJuYW1lcyI6WyJnZXRBdXRoIiwiVFJQQ0Vycm9yIiwiaW5pdFRSUEMiLCJwcmlzbWEiLCJzdXBlcmpzb24iLCJab2RFcnJvciIsImNyZWF0ZVRSUENDb250ZXh0Iiwib3B0cyIsInJlcSIsInNlc2giLCJ1c2VySWQiLCJ0IiwiY29udGV4dCIsImNyZWF0ZSIsInRyYW5zZm9ybWVyIiwiZXJyb3JGb3JtYXR0ZXIiLCJzaGFwZSIsImVycm9yIiwiZGF0YSIsInpvZEVycm9yIiwiY2F1c2UiLCJmbGF0dGVuIiwiY3JlYXRlVFJQQ1JvdXRlciIsInJvdXRlciIsInB1YmxpY1Byb2NlZHVyZSIsInByb2NlZHVyZSIsImVuZm9yY2VVc2VySXNBdXRoZWQiLCJtaWRkbGV3YXJlIiwiY3R4IiwibmV4dCIsImNvZGUiLCJwcml2YXRlUHJvY2VkdXJlIiwidXNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./src/server/api/trpc.ts\n");

/***/ }),

/***/ "(api)/./src/server/utils/ai-helpers/aiConstants.ts":
/*!****************************************************!*\
  !*** ./src/server/utils/ai-helpers/aiConstants.ts ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AI_MODELS: () => (/* binding */ AI_MODELS),\n/* harmony export */   BATCH_SIZE_FOR_EMBEDDINGS: () => (/* binding */ BATCH_SIZE_FOR_EMBEDDINGS),\n/* harmony export */   CHUNKS_PER_BUCKET: () => (/* binding */ CHUNKS_PER_BUCKET),\n/* harmony export */   DEFAULT_AI_MODEL: () => (/* binding */ DEFAULT_AI_MODEL),\n/* harmony export */   DEFAULT_EMBEDDING_MODEL: () => (/* binding */ DEFAULT_EMBEDDING_MODEL),\n/* harmony export */   DEFAULT_EMBEDDING_MODEL_PRICE_PER_1000: () => (/* binding */ DEFAULT_EMBEDDING_MODEL_PRICE_PER_1000),\n/* harmony export */   DEFAULT_MAX_TOKENS_PER_CHUNK: () => (/* binding */ DEFAULT_MAX_TOKENS_PER_CHUNK),\n/* harmony export */   DEFAULT_REPLY_MAX_TOKENS: () => (/* binding */ DEFAULT_REPLY_MAX_TOKENS),\n/* harmony export */   NUM_REPRESENTATIVES_CHUNKS_PER_BUCKET: () => (/* binding */ NUM_REPRESENTATIVES_CHUNKS_PER_BUCKET)\n/* harmony export */ });\n// Embeddings\nconst BATCH_SIZE_FOR_EMBEDDINGS = 250;\nconst DEFAULT_EMBEDDING_MODEL = \"text-embedding-ada-002\";\nconst DEFAULT_EMBEDDING_MODEL_PRICE_PER_1000 = 0.0001;\n// Chunks\nconst DEFAULT_MAX_TOKENS_PER_CHUNK = 1250;\nconst NUM_REPRESENTATIVES_CHUNKS_PER_BUCKET = 3;\nconst CHUNKS_PER_BUCKET = 15;\nconst DEFAULT_REPLY_MAX_TOKENS = 256;\nconst AI_MODELS = {\n    \"gpt-3.5-turbo\": {\n        model: \"gpt-3.5-turbo\",\n        maxTokens: 4097,\n        pricePer1000Input: 0.0015,\n        pricePer1000Output: 0.002\n    },\n    \"gpt-3.5-turbo-16k\": {\n        model: \"gpt-3.5-turbo-16k\",\n        maxTokens: 16385,\n        pricePer1000Input: 0.003,\n        pricePer1000Output: 0.004\n    }\n};\nconst DEFAULT_AI_MODEL = AI_MODELS[\"gpt-3.5-turbo\"];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvc2VydmVyL3V0aWxzL2FpLWhlbHBlcnMvYWlDb25zdGFudHMudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBRUEsYUFBYTtBQUNOLE1BQU1BLDRCQUE0QixJQUFJO0FBQ3RDLE1BQU1DLDBCQUEwQix5QkFBeUI7QUFDekQsTUFBTUMseUNBQXlDLE9BQU87QUFFN0QsU0FBUztBQUNGLE1BQU1DLCtCQUErQixLQUFLO0FBQzFDLE1BQU1DLHdDQUF3QyxFQUFFO0FBQ2hELE1BQU1DLG9CQUFvQixHQUFHO0FBRTdCLE1BQU1DLDJCQUEyQixJQUFJO0FBU3JDLE1BQU1DLFlBQXFDO0lBQ2hELGlCQUFpQjtRQUNmQyxPQUFPO1FBQ1BDLFdBQVc7UUFDWEMsbUJBQW1CO1FBQ25CQyxvQkFBb0I7SUFDdEI7SUFDQSxxQkFBcUI7UUFDbkJILE9BQU87UUFDUEMsV0FBVztRQUNYQyxtQkFBbUI7UUFDbkJDLG9CQUFvQjtJQUN0QjtBQWFGLEVBQUU7QUFFSyxNQUFNQyxtQkFBbUJMLFNBQVMsQ0FBQyxnQkFBZ0IsQ0FBRSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlYXJuLWFpLy4vc3JjL3NlcnZlci91dGlscy9haS1oZWxwZXJzL2FpQ29uc3RhbnRzLnRzPzBjODQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdHlwZSBUaWt0b2tlbk1vZGVsIH0gZnJvbSBcInRpa3Rva2VuXCI7XG5cbi8vIEVtYmVkZGluZ3NcbmV4cG9ydCBjb25zdCBCQVRDSF9TSVpFX0ZPUl9FTUJFRERJTkdTID0gMjUwO1xuZXhwb3J0IGNvbnN0IERFRkFVTFRfRU1CRURESU5HX01PREVMID0gXCJ0ZXh0LWVtYmVkZGluZy1hZGEtMDAyXCI7XG5leHBvcnQgY29uc3QgREVGQVVMVF9FTUJFRERJTkdfTU9ERUxfUFJJQ0VfUEVSXzEwMDAgPSAwLjAwMDE7XG5cbi8vIENodW5rc1xuZXhwb3J0IGNvbnN0IERFRkFVTFRfTUFYX1RPS0VOU19QRVJfQ0hVTksgPSAxMjUwO1xuZXhwb3J0IGNvbnN0IE5VTV9SRVBSRVNFTlRBVElWRVNfQ0hVTktTX1BFUl9CVUNLRVQgPSAzO1xuZXhwb3J0IGNvbnN0IENIVU5LU19QRVJfQlVDS0VUID0gMTU7XG5cbmV4cG9ydCBjb25zdCBERUZBVUxUX1JFUExZX01BWF9UT0tFTlMgPSAyNTY7XG5cbmV4cG9ydCB0eXBlIEFpTW9kZWwgPSB7XG4gIG1vZGVsOiBUaWt0b2tlbk1vZGVsO1xuICBtYXhUb2tlbnM6IG51bWJlcjtcbiAgcHJpY2VQZXIxMDAwSW5wdXQ6IG51bWJlcjtcbiAgcHJpY2VQZXIxMDAwT3V0cHV0OiBudW1iZXI7XG59O1xuXG5leHBvcnQgY29uc3QgQUlfTU9ERUxTOiBSZWNvcmQ8c3RyaW5nLCBBaU1vZGVsPiA9IHtcbiAgXCJncHQtMy41LXR1cmJvXCI6IHtcbiAgICBtb2RlbDogXCJncHQtMy41LXR1cmJvXCIsXG4gICAgbWF4VG9rZW5zOiA0MDk3LFxuICAgIHByaWNlUGVyMTAwMElucHV0OiAwLjAwMTUsXG4gICAgcHJpY2VQZXIxMDAwT3V0cHV0OiAwLjAwMixcbiAgfSxcbiAgXCJncHQtMy41LXR1cmJvLTE2a1wiOiB7XG4gICAgbW9kZWw6IFwiZ3B0LTMuNS10dXJiby0xNmtcIixcbiAgICBtYXhUb2tlbnM6IDE2Mzg1LFxuICAgIHByaWNlUGVyMTAwMElucHV0OiAwLjAwMyxcbiAgICBwcmljZVBlcjEwMDBPdXRwdXQ6IDAuMDA0LFxuICB9LFxuICAvLyBcImdwdC00XCI6IHtcbiAgLy8gICBtb2RlbDogXCJncHQtNFwiLFxuICAvLyAgIG1heFRva2VuczogODE5MixcbiAgLy8gICBwcmljZVBlcjEwMDBJbnB1dDogMC4wMyxcbiAgLy8gICBwcmljZVBlcjEwMDBPdXRwdXQ6IDAuMDYsXG4gIC8vIH0sXG4gIC8vIFwiZ3B0LTQtMzJrXCI6IHtcbiAgLy8gICBtb2RlbDogXCJncHQtNC0zMmtcIixcbiAgLy8gICBtYXhUb2tlbnM6IDMyNzY4LFxuICAvLyAgIHByaWNlUGVyMTAwMElucHV0OiAwLjA2LFxuICAvLyAgIHByaWNlUGVyMTAwME91dHB1dDogMC4xMixcbiAgLy8gfSxcbn07XG5cbmV4cG9ydCBjb25zdCBERUZBVUxUX0FJX01PREVMID0gQUlfTU9ERUxTW1wiZ3B0LTMuNS10dXJib1wiXSE7XG4iXSwibmFtZXMiOlsiQkFUQ0hfU0laRV9GT1JfRU1CRURESU5HUyIsIkRFRkFVTFRfRU1CRURESU5HX01PREVMIiwiREVGQVVMVF9FTUJFRERJTkdfTU9ERUxfUFJJQ0VfUEVSXzEwMDAiLCJERUZBVUxUX01BWF9UT0tFTlNfUEVSX0NIVU5LIiwiTlVNX1JFUFJFU0VOVEFUSVZFU19DSFVOS1NfUEVSX0JVQ0tFVCIsIkNIVU5LU19QRVJfQlVDS0VUIiwiREVGQVVMVF9SRVBMWV9NQVhfVE9LRU5TIiwiQUlfTU9ERUxTIiwibW9kZWwiLCJtYXhUb2tlbnMiLCJwcmljZVBlcjEwMDBJbnB1dCIsInByaWNlUGVyMTAwME91dHB1dCIsIkRFRkFVTFRfQUlfTU9ERUwiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./src/server/utils/ai-helpers/aiConstants.ts\n");

/***/ }),

/***/ "(api)/./src/server/utils/ai-helpers/buildPrompt.ts":
/*!****************************************************!*\
  !*** ./src/server/utils/ai-helpers/buildPrompt.ts ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   buildPrompt: () => (/* binding */ buildPrompt),\n/* harmony export */   tokensForQuestion: () => (/* binding */ tokensForQuestion)\n/* harmony export */ });\n/* harmony import */ var tiktoken__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tiktoken */ \"tiktoken\");\n/* harmony import */ var tiktoken__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(tiktoken__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _aiConstants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./aiConstants */ \"(api)/./src/server/utils/ai-helpers/aiConstants.ts\");\n\n\nconst promptStart = \"Answer the question based on the context below.\\n\\nContext:\\n\";\nconst tokensForQuestion = (question, model)=>{\n    const promptEnd = `\\n\\nQuestion: ${question}\\nAnswer:`;\n    const tke = (0,tiktoken__WEBPACK_IMPORTED_MODULE_0__.encoding_for_model)(model);\n    const questionTokens = tke.encode(question);\n    const questionTokenCount = questionTokens.length;\n    const promptTokens = tke.encode(promptEnd);\n    const promptTokenCount = promptTokens.length;\n    return questionTokenCount + promptTokenCount;\n};\n/**\n * Constructs a prompt string for the OpenAI API based on provided contexts and a question.\n *\n * This function is designed to fit as much context as possible within a given token limit, ensuring\n * the question is always included. The final prompt structure will be:\n * \"Answer the question based on the context below.\\n\\nContext:\\n[Contexts separated by \\n\\n---\\n\\n]\\n\\nQuestion: [question]\\nAnswer:\"\n *\n * If the combined token count of contexts and the question exceeds the token limit, the function will\n * trim the contexts accordingly.\n *\n * @param contexts - An array of context strings. These contexts provide background or information\n *                   for the question.\n * @param question - The main question to be included in the prompt.\n * @param tokenLimit - The maximum number of tokens the final prompt should contain.\n * @param model - The AI model to be used, which dictates the tokenization scheme.\n *                Default is whatever's set in DEFAULT_AI_MODEL.\n * @returns A formatted prompt string based on the provided contexts and question. Returns null if the prompt can't be constructed.\n */ function buildPrompt(contexts, question, model = _aiConstants__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_AI_MODEL) {\n    console.debug(\"Building prompt\", {\n        model\n    });\n    const promptEnd = `\\n\\nQuestion: ${question}\\nAnswer:`;\n    const tke = (0,tiktoken__WEBPACK_IMPORTED_MODULE_0__.encoding_for_model)(model.model);\n    const questionTokens = tke.encode(question);\n    let currentTokenCount = questionTokens.length;\n    let prompt = \"\";\n    for(let i = 0; i < contexts.length; i++){\n        const contextTokens = tke.encode(contexts[i]);\n        currentTokenCount += contextTokens.length;\n        // If adding this context exceeds the token limit, construct the prompt with the contexts that fit and break the loop.\n        if (currentTokenCount >= model.maxTokens) {\n            prompt = promptStart + contexts.slice(0, i).join(\"\\n\\n---\\n\\n\") + promptEnd;\n            break;\n        } else if (i === contexts.length - 1) {\n            prompt = promptStart + contexts.join(\"\\n\\n---\\n\\n\") + promptEnd;\n        }\n    }\n    return prompt;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvc2VydmVyL3V0aWxzL2FpLWhlbHBlcnMvYnVpbGRQcm9tcHQudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBa0U7QUFDakI7QUFFakQsTUFBTUUsY0FDSjtBQUVLLE1BQU1DLG9CQUFvQixDQUFDQyxVQUFrQkM7SUFDbEQsTUFBTUMsWUFBWSxDQUFDLGNBQWMsRUFBRUYsU0FBUyxTQUFTLENBQUM7SUFFdEQsTUFBTUcsTUFBTVAsNERBQWtCQSxDQUFDSztJQUUvQixNQUFNRyxpQkFBaUJELElBQUlFLE1BQU0sQ0FBQ0w7SUFFbEMsTUFBTU0scUJBQXFCRixlQUFlRyxNQUFNO0lBRWhELE1BQU1DLGVBQWVMLElBQUlFLE1BQU0sQ0FBQ0g7SUFFaEMsTUFBTU8sbUJBQW1CRCxhQUFhRCxNQUFNO0lBRTVDLE9BQU9ELHFCQUFxQkc7QUFDOUIsRUFBRTtBQUVGOzs7Ozs7Ozs7Ozs7Ozs7OztDQWlCQyxHQUNNLFNBQVNDLFlBQ2RDLFFBQWtCLEVBQ2xCWCxRQUFnQixFQUNoQkMsUUFBUUosMERBQWdCO0lBRXhCZSxRQUFRQyxLQUFLLENBQUMsbUJBQW1CO1FBQUVaO0lBQU07SUFFekMsTUFBTUMsWUFBWSxDQUFDLGNBQWMsRUFBRUYsU0FBUyxTQUFTLENBQUM7SUFFdEQsTUFBTUcsTUFBTVAsNERBQWtCQSxDQUFDSyxNQUFNQSxLQUFLO0lBRTFDLE1BQU1HLGlCQUFpQkQsSUFBSUUsTUFBTSxDQUFDTDtJQUVsQyxJQUFJYyxvQkFBb0JWLGVBQWVHLE1BQU07SUFFN0MsSUFBSVEsU0FBUztJQUViLElBQUssSUFBSUMsSUFBSSxHQUFHQSxJQUFJTCxTQUFTSixNQUFNLEVBQUVTLElBQUs7UUFDeEMsTUFBTUMsZ0JBQWdCZCxJQUFJRSxNQUFNLENBQUNNLFFBQVEsQ0FBQ0ssRUFBRTtRQUU1Q0YscUJBQXFCRyxjQUFjVixNQUFNO1FBRXpDLHNIQUFzSDtRQUN0SCxJQUFJTyxxQkFBcUJiLE1BQU1pQixTQUFTLEVBQUU7WUFDeENILFNBQ0VqQixjQUFjYSxTQUFTUSxLQUFLLENBQUMsR0FBR0gsR0FBR0ksSUFBSSxDQUFDLGlCQUFpQmxCO1lBRTNEO1FBQ0YsT0FFSyxJQUFJYyxNQUFNTCxTQUFTSixNQUFNLEdBQUcsR0FBRztZQUNsQ1EsU0FBU2pCLGNBQWNhLFNBQVNTLElBQUksQ0FBQyxpQkFBaUJsQjtRQUN4RDtJQUNGO0lBRUEsT0FBT2E7QUFDVCIsInNvdXJjZXMiOlsid2VicGFjazovL2xlYXJuLWFpLy4vc3JjL3NlcnZlci91dGlscy9haS1oZWxwZXJzL2J1aWxkUHJvbXB0LnRzP2E4ZTMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdHlwZSBUaWt0b2tlbk1vZGVsLCBlbmNvZGluZ19mb3JfbW9kZWwgfSBmcm9tIFwidGlrdG9rZW5cIjtcbmltcG9ydCB7IERFRkFVTFRfQUlfTU9ERUwgfSBmcm9tIFwiLi9haUNvbnN0YW50c1wiO1xuXG5jb25zdCBwcm9tcHRTdGFydCA9XG4gIFwiQW5zd2VyIHRoZSBxdWVzdGlvbiBiYXNlZCBvbiB0aGUgY29udGV4dCBiZWxvdy5cXG5cXG5Db250ZXh0OlxcblwiO1xuXG5leHBvcnQgY29uc3QgdG9rZW5zRm9yUXVlc3Rpb24gPSAocXVlc3Rpb246IHN0cmluZywgbW9kZWw6IFRpa3Rva2VuTW9kZWwpID0+IHtcbiAgY29uc3QgcHJvbXB0RW5kID0gYFxcblxcblF1ZXN0aW9uOiAke3F1ZXN0aW9ufVxcbkFuc3dlcjpgO1xuXG4gIGNvbnN0IHRrZSA9IGVuY29kaW5nX2Zvcl9tb2RlbChtb2RlbCk7XG5cbiAgY29uc3QgcXVlc3Rpb25Ub2tlbnMgPSB0a2UuZW5jb2RlKHF1ZXN0aW9uKTtcblxuICBjb25zdCBxdWVzdGlvblRva2VuQ291bnQgPSBxdWVzdGlvblRva2Vucy5sZW5ndGg7XG5cbiAgY29uc3QgcHJvbXB0VG9rZW5zID0gdGtlLmVuY29kZShwcm9tcHRFbmQpO1xuXG4gIGNvbnN0IHByb21wdFRva2VuQ291bnQgPSBwcm9tcHRUb2tlbnMubGVuZ3RoO1xuXG4gIHJldHVybiBxdWVzdGlvblRva2VuQ291bnQgKyBwcm9tcHRUb2tlbkNvdW50O1xufTtcblxuLyoqXG4gKiBDb25zdHJ1Y3RzIGEgcHJvbXB0IHN0cmluZyBmb3IgdGhlIE9wZW5BSSBBUEkgYmFzZWQgb24gcHJvdmlkZWQgY29udGV4dHMgYW5kIGEgcXVlc3Rpb24uXG4gKlxuICogVGhpcyBmdW5jdGlvbiBpcyBkZXNpZ25lZCB0byBmaXQgYXMgbXVjaCBjb250ZXh0IGFzIHBvc3NpYmxlIHdpdGhpbiBhIGdpdmVuIHRva2VuIGxpbWl0LCBlbnN1cmluZ1xuICogdGhlIHF1ZXN0aW9uIGlzIGFsd2F5cyBpbmNsdWRlZC4gVGhlIGZpbmFsIHByb21wdCBzdHJ1Y3R1cmUgd2lsbCBiZTpcbiAqIFwiQW5zd2VyIHRoZSBxdWVzdGlvbiBiYXNlZCBvbiB0aGUgY29udGV4dCBiZWxvdy5cXG5cXG5Db250ZXh0OlxcbltDb250ZXh0cyBzZXBhcmF0ZWQgYnkgXFxuXFxuLS0tXFxuXFxuXVxcblxcblF1ZXN0aW9uOiBbcXVlc3Rpb25dXFxuQW5zd2VyOlwiXG4gKlxuICogSWYgdGhlIGNvbWJpbmVkIHRva2VuIGNvdW50IG9mIGNvbnRleHRzIGFuZCB0aGUgcXVlc3Rpb24gZXhjZWVkcyB0aGUgdG9rZW4gbGltaXQsIHRoZSBmdW5jdGlvbiB3aWxsXG4gKiB0cmltIHRoZSBjb250ZXh0cyBhY2NvcmRpbmdseS5cbiAqXG4gKiBAcGFyYW0gY29udGV4dHMgLSBBbiBhcnJheSBvZiBjb250ZXh0IHN0cmluZ3MuIFRoZXNlIGNvbnRleHRzIHByb3ZpZGUgYmFja2dyb3VuZCBvciBpbmZvcm1hdGlvblxuICogICAgICAgICAgICAgICAgICAgZm9yIHRoZSBxdWVzdGlvbi5cbiAqIEBwYXJhbSBxdWVzdGlvbiAtIFRoZSBtYWluIHF1ZXN0aW9uIHRvIGJlIGluY2x1ZGVkIGluIHRoZSBwcm9tcHQuXG4gKiBAcGFyYW0gdG9rZW5MaW1pdCAtIFRoZSBtYXhpbXVtIG51bWJlciBvZiB0b2tlbnMgdGhlIGZpbmFsIHByb21wdCBzaG91bGQgY29udGFpbi5cbiAqIEBwYXJhbSBtb2RlbCAtIFRoZSBBSSBtb2RlbCB0byBiZSB1c2VkLCB3aGljaCBkaWN0YXRlcyB0aGUgdG9rZW5pemF0aW9uIHNjaGVtZS5cbiAqICAgICAgICAgICAgICAgIERlZmF1bHQgaXMgd2hhdGV2ZXIncyBzZXQgaW4gREVGQVVMVF9BSV9NT0RFTC5cbiAqIEByZXR1cm5zIEEgZm9ybWF0dGVkIHByb21wdCBzdHJpbmcgYmFzZWQgb24gdGhlIHByb3ZpZGVkIGNvbnRleHRzIGFuZCBxdWVzdGlvbi4gUmV0dXJucyBudWxsIGlmIHRoZSBwcm9tcHQgY2FuJ3QgYmUgY29uc3RydWN0ZWQuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBidWlsZFByb21wdChcbiAgY29udGV4dHM6IHN0cmluZ1tdLFxuICBxdWVzdGlvbjogc3RyaW5nLFxuICBtb2RlbCA9IERFRkFVTFRfQUlfTU9ERUwsXG4pOiBzdHJpbmcge1xuICBjb25zb2xlLmRlYnVnKFwiQnVpbGRpbmcgcHJvbXB0XCIsIHsgbW9kZWwgfSk7XG5cbiAgY29uc3QgcHJvbXB0RW5kID0gYFxcblxcblF1ZXN0aW9uOiAke3F1ZXN0aW9ufVxcbkFuc3dlcjpgO1xuXG4gIGNvbnN0IHRrZSA9IGVuY29kaW5nX2Zvcl9tb2RlbChtb2RlbC5tb2RlbCk7XG5cbiAgY29uc3QgcXVlc3Rpb25Ub2tlbnMgPSB0a2UuZW5jb2RlKHF1ZXN0aW9uKTtcblxuICBsZXQgY3VycmVudFRva2VuQ291bnQgPSBxdWVzdGlvblRva2Vucy5sZW5ndGg7XG5cbiAgbGV0IHByb21wdCA9IFwiXCI7XG5cbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBjb250ZXh0cy5sZW5ndGg7IGkrKykge1xuICAgIGNvbnN0IGNvbnRleHRUb2tlbnMgPSB0a2UuZW5jb2RlKGNvbnRleHRzW2ldISk7XG5cbiAgICBjdXJyZW50VG9rZW5Db3VudCArPSBjb250ZXh0VG9rZW5zLmxlbmd0aDtcblxuICAgIC8vIElmIGFkZGluZyB0aGlzIGNvbnRleHQgZXhjZWVkcyB0aGUgdG9rZW4gbGltaXQsIGNvbnN0cnVjdCB0aGUgcHJvbXB0IHdpdGggdGhlIGNvbnRleHRzIHRoYXQgZml0IGFuZCBicmVhayB0aGUgbG9vcC5cbiAgICBpZiAoY3VycmVudFRva2VuQ291bnQgPj0gbW9kZWwubWF4VG9rZW5zKSB7XG4gICAgICBwcm9tcHQgPVxuICAgICAgICBwcm9tcHRTdGFydCArIGNvbnRleHRzLnNsaWNlKDAsIGkpLmpvaW4oXCJcXG5cXG4tLS1cXG5cXG5cIikgKyBwcm9tcHRFbmQ7XG5cbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgICAvLyBJZiB0aGlzIGlzIHRoZSBsYXN0IGNvbnRleHQgYW5kIGl0IGZpdHMgd2l0aGluIHRoZSB0b2tlbiBsaW1pdCwgYWRkIGl0IHRvIHRoZSBwcm9tcHQuXG4gICAgZWxzZSBpZiAoaSA9PT0gY29udGV4dHMubGVuZ3RoIC0gMSkge1xuICAgICAgcHJvbXB0ID0gcHJvbXB0U3RhcnQgKyBjb250ZXh0cy5qb2luKFwiXFxuXFxuLS0tXFxuXFxuXCIpICsgcHJvbXB0RW5kO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBwcm9tcHQ7XG59XG4iXSwibmFtZXMiOlsiZW5jb2RpbmdfZm9yX21vZGVsIiwiREVGQVVMVF9BSV9NT0RFTCIsInByb21wdFN0YXJ0IiwidG9rZW5zRm9yUXVlc3Rpb24iLCJxdWVzdGlvbiIsIm1vZGVsIiwicHJvbXB0RW5kIiwidGtlIiwicXVlc3Rpb25Ub2tlbnMiLCJlbmNvZGUiLCJxdWVzdGlvblRva2VuQ291bnQiLCJsZW5ndGgiLCJwcm9tcHRUb2tlbnMiLCJwcm9tcHRUb2tlbkNvdW50IiwiYnVpbGRQcm9tcHQiLCJjb250ZXh0cyIsImNvbnNvbGUiLCJkZWJ1ZyIsImN1cnJlbnRUb2tlbkNvdW50IiwicHJvbXB0IiwiaSIsImNvbnRleHRUb2tlbnMiLCJtYXhUb2tlbnMiLCJzbGljZSIsImpvaW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./src/server/utils/ai-helpers/buildPrompt.ts\n");

/***/ }),

/***/ "(api)/./src/server/utils/ai-helpers/callOpenAi.ts":
/*!***************************************************!*\
  !*** ./src/server/utils/ai-helpers/callOpenAi.ts ***!
  \***************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   callOpenAi: () => (/* binding */ callOpenAi)\n/* harmony export */ });\n/* harmony import */ var openai__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! openai */ \"openai\");\n/* harmony import */ var _aiConstants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./aiConstants */ \"(api)/./src/server/utils/ai-helpers/aiConstants.ts\");\n/* harmony import */ var tiktoken__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tiktoken */ \"tiktoken\");\n/* harmony import */ var tiktoken__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(tiktoken__WEBPACK_IMPORTED_MODULE_2__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([openai__WEBPACK_IMPORTED_MODULE_0__]);\nopenai__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n/* eslint-disable @typescript-eslint/no-explicit-any */ \n\n\nconst client = new openai__WEBPACK_IMPORTED_MODULE_0__.OpenAI({\n    maxRetries: 3\n});\nasync function callOpenAi(prompt, logger, model = _aiConstants__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_AI_MODEL, instructions = \"You are a helpful assistant answering questions based on the context provided.\", temperature = 0.6) {\n    const messages = [\n        {\n            role: \"system\",\n            content: instructions\n        },\n        {\n            role: \"user\",\n            content: prompt\n        }\n    ];\n    const tk = (0,tiktoken__WEBPACK_IMPORTED_MODULE_2__.encoding_for_model)(model.model);\n    const tokens = tk.encode(prompt).length + tk.encode(instructions).length;\n    const maxTokens = model.maxTokens - tokens - 10;\n    console.debug(\"Calling OpenAI w/\", tokens, \"tokens estimated\", {\n        maxTokens,\n        model\n    });\n    try {\n        const fileName = `openai-${Date.now()}.txt`;\n        logger?.logToFile(fileName, `REQUEST:\\nMAX_TOKENS=${maxTokens}\\nPROMPT=${prompt}\\n\\n***\\n\\n`);\n        const completion = await client.chat.completions.create({\n            messages: messages,\n            model: model?.model ?? _aiConstants__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_AI_MODEL,\n            temperature: temperature,\n            max_tokens: maxTokens,\n            stop: [\n                \"Human:\",\n                \"AI:\"\n            ],\n            top_p: 1,\n            frequency_penalty: 0,\n            presence_penalty: 0\n        });\n        completion.usage?.total_tokens && console.debug(\"OpenAI tokens used:\", {\n            output: completion.usage?.completion_tokens,\n            input: completion.usage?.prompt_tokens\n        });\n        const inputTokens = completion.usage?.prompt_tokens;\n        const outputTokens = completion.usage?.completion_tokens;\n        if (!completion.choices[0]?.message.content || !inputTokens || !outputTokens) {\n            throw new Error(\"Failed to fetch response from OpenAI\");\n        }\n        const estimatedPricing = inputTokens / 1000 * (model?.pricePer1000Input ?? model.pricePer1000Input) + outputTokens / 1000 * (model?.pricePer1000Output ?? model.pricePer1000Output);\n        logger?.logToFile(fileName, `RESPONSE:\\n***\\n\\n${JSON.stringify(completion, null, 2)}\\n\\n`);\n        return {\n            message: completion.choices[0].message.content,\n            tokensUsed: completion.usage.total_tokens,\n            estimatedPricing\n        };\n    } catch (err) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        console.error(\"Error calling OpenAI\", err?.message);\n        throw err;\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvc2VydmVyL3V0aWxzL2FpLWhlbHBlcnMvY2FsbE9wZW5BaS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBLHFEQUFxRCxHQUVyQjtBQUNpQjtBQUNIO0FBRzlDLE1BQU1HLFNBQVMsSUFBSUgsMENBQU1BLENBQUM7SUFDeEJJLFlBQVk7QUFDZDtBQUVPLGVBQWVDLFdBQ3BCQyxNQUFjLEVBQ2RDLE1BQW1CLEVBQ25CQyxRQUFRUCwwREFBZ0IsRUFDeEJRLGVBQWUsZ0ZBQWdGLEVBQy9GQyxjQUFjLEdBQUc7SUFFakIsTUFBTUMsV0FBb0M7UUFDeEM7WUFDRUMsTUFBTTtZQUNOQyxTQUFTSjtRQUNYO1FBQ0E7WUFDRUcsTUFBTTtZQUNOQyxTQUFTUDtRQUNYO0tBQ0Q7SUFFRCxNQUFNUSxLQUFLWiw0REFBa0JBLENBQUNNLE1BQU1BLEtBQUs7SUFDekMsTUFBTU8sU0FBU0QsR0FBR0UsTUFBTSxDQUFDVixRQUFRVyxNQUFNLEdBQUdILEdBQUdFLE1BQU0sQ0FBQ1AsY0FBY1EsTUFBTTtJQUV4RSxNQUFNQyxZQUFZVixNQUFNVSxTQUFTLEdBQUdILFNBQVM7SUFFN0NJLFFBQVFDLEtBQUssQ0FBQyxxQkFBcUJMLFFBQVEsb0JBQW9CO1FBQzdERztRQUNBVjtJQUNGO0lBRUEsSUFBSTtRQUNGLE1BQU1hLFdBQVcsQ0FBQyxPQUFPLEVBQUVDLEtBQUtDLEdBQUcsR0FBRyxJQUFJLENBQUM7UUFFM0NoQixRQUFRaUIsVUFDTkgsVUFDQSxDQUFDLHFCQUFxQixFQUFFSCxVQUFVLFNBQVMsRUFBRVosT0FBTyxXQUFXLENBQUM7UUFHbEUsTUFBTW1CLGFBQWEsTUFBTXRCLE9BQU91QixJQUFJLENBQUNDLFdBQVcsQ0FBQ0MsTUFBTSxDQUFDO1lBQ3REakIsVUFBVUE7WUFDVkgsT0FBT0EsT0FBT0EsU0FBU1AsMERBQWdCQTtZQUN2Q1MsYUFBYUE7WUFDYm1CLFlBQVlYO1lBQ1pZLE1BQU07Z0JBQUM7Z0JBQVU7YUFBTTtZQUN2QkMsT0FBTztZQUNQQyxtQkFBbUI7WUFDbkJDLGtCQUFrQjtRQUNwQjtRQUVBUixXQUFXUyxLQUFLLEVBQUVDLGdCQUNoQmhCLFFBQVFDLEtBQUssQ0FBQyx1QkFBdUI7WUFDbkNnQixRQUFRWCxXQUFXUyxLQUFLLEVBQUVHO1lBQzFCQyxPQUFPYixXQUFXUyxLQUFLLEVBQUVLO1FBQzNCO1FBRUYsTUFBTUMsY0FBY2YsV0FBV1MsS0FBSyxFQUFFSztRQUN0QyxNQUFNRSxlQUFlaEIsV0FBV1MsS0FBSyxFQUFFRztRQUV2QyxJQUNFLENBQUNaLFdBQVdpQixPQUFPLENBQUMsRUFBRSxFQUFFQyxRQUFROUIsV0FDaEMsQ0FBQzJCLGVBQ0QsQ0FBQ0MsY0FDRDtZQUNBLE1BQU0sSUFBSUcsTUFBTTtRQUNsQjtRQUVBLE1BQU1DLG1CQUNKLGNBQWUsT0FDWnJDLENBQUFBLE9BQU9zQyxxQkFBcUJ0QyxNQUFNc0MsaUJBQWlCLElBQ3RELGVBQWdCLE9BQ2J0QyxDQUFBQSxPQUFPdUMsc0JBQXNCdkMsTUFBTXVDLGtCQUFrQjtRQUUxRHhDLFFBQVFpQixVQUNOSCxVQUNBLENBQUMsa0JBQWtCLEVBQUUyQixLQUFLQyxTQUFTLENBQUN4QixZQUFZLE1BQU0sR0FBRyxJQUFJLENBQUM7UUFHaEUsT0FBTztZQUNMa0IsU0FBU2xCLFdBQVdpQixPQUFPLENBQUMsRUFBRSxDQUFDQyxPQUFPLENBQUM5QixPQUFPO1lBQzlDcUMsWUFBWXpCLFdBQVdTLEtBQUssQ0FBRUMsWUFBWTtZQUMxQ1U7UUFDRjtJQUNGLEVBQUUsT0FBT00sS0FBVTtRQUNqQixzRUFBc0U7UUFDdEVoQyxRQUFRaUMsS0FBSyxDQUFDLHdCQUF3QkQsS0FBS1I7UUFDM0MsTUFBTVE7SUFDUjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVhcm4tYWkvLi9zcmMvc2VydmVyL3V0aWxzL2FpLWhlbHBlcnMvY2FsbE9wZW5BaS50cz8yN2E1Il0sInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnkgKi9cbmltcG9ydCB7IHR5cGUgQ2hhdENvbXBsZXRpb25NZXNzYWdlIH0gZnJvbSBcIm9wZW5haS9yZXNvdXJjZXMvY2hhdFwiO1xuaW1wb3J0IHsgT3BlbkFJIH0gZnJvbSBcIm9wZW5haVwiO1xuaW1wb3J0IHsgREVGQVVMVF9BSV9NT0RFTCB9IGZyb20gXCIuL2FpQ29uc3RhbnRzXCI7XG5pbXBvcnQgeyBlbmNvZGluZ19mb3JfbW9kZWwgfSBmcm9tIFwidGlrdG9rZW5cIjtcbmltcG9ydCB7IHR5cGUgRmlsZUxvZ2dlciB9IGZyb20gXCIuLi9sb2dIZWxwZXJcIjtcblxuY29uc3QgY2xpZW50ID0gbmV3IE9wZW5BSSh7XG4gIG1heFJldHJpZXM6IDMsXG59KTtcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGNhbGxPcGVuQWkoXG4gIHByb21wdDogc3RyaW5nLFxuICBsb2dnZXI/OiBGaWxlTG9nZ2VyLFxuICBtb2RlbCA9IERFRkFVTFRfQUlfTU9ERUwsXG4gIGluc3RydWN0aW9ucyA9IFwiWW91IGFyZSBhIGhlbHBmdWwgYXNzaXN0YW50IGFuc3dlcmluZyBxdWVzdGlvbnMgYmFzZWQgb24gdGhlIGNvbnRleHQgcHJvdmlkZWQuXCIsXG4gIHRlbXBlcmF0dXJlID0gMC42LFxuKSB7XG4gIGNvbnN0IG1lc3NhZ2VzOiBDaGF0Q29tcGxldGlvbk1lc3NhZ2VbXSA9IFtcbiAgICB7XG4gICAgICByb2xlOiBcInN5c3RlbVwiLFxuICAgICAgY29udGVudDogaW5zdHJ1Y3Rpb25zLFxuICAgIH0sXG4gICAge1xuICAgICAgcm9sZTogXCJ1c2VyXCIsXG4gICAgICBjb250ZW50OiBwcm9tcHQsXG4gICAgfSxcbiAgXTtcblxuICBjb25zdCB0ayA9IGVuY29kaW5nX2Zvcl9tb2RlbChtb2RlbC5tb2RlbCk7XG4gIGNvbnN0IHRva2VucyA9IHRrLmVuY29kZShwcm9tcHQpLmxlbmd0aCArIHRrLmVuY29kZShpbnN0cnVjdGlvbnMpLmxlbmd0aDtcblxuICBjb25zdCBtYXhUb2tlbnMgPSBtb2RlbC5tYXhUb2tlbnMgLSB0b2tlbnMgLSAxMDtcblxuICBjb25zb2xlLmRlYnVnKFwiQ2FsbGluZyBPcGVuQUkgdy9cIiwgdG9rZW5zLCBcInRva2VucyBlc3RpbWF0ZWRcIiwge1xuICAgIG1heFRva2VucyxcbiAgICBtb2RlbCxcbiAgfSk7XG5cbiAgdHJ5IHtcbiAgICBjb25zdCBmaWxlTmFtZSA9IGBvcGVuYWktJHtEYXRlLm5vdygpfS50eHRgO1xuXG4gICAgbG9nZ2VyPy5sb2dUb0ZpbGUoXG4gICAgICBmaWxlTmFtZSxcbiAgICAgIGBSRVFVRVNUOlxcbk1BWF9UT0tFTlM9JHttYXhUb2tlbnN9XFxuUFJPTVBUPSR7cHJvbXB0fVxcblxcbioqKlxcblxcbmAsXG4gICAgKTtcblxuICAgIGNvbnN0IGNvbXBsZXRpb24gPSBhd2FpdCBjbGllbnQuY2hhdC5jb21wbGV0aW9ucy5jcmVhdGUoe1xuICAgICAgbWVzc2FnZXM6IG1lc3NhZ2VzLFxuICAgICAgbW9kZWw6IG1vZGVsPy5tb2RlbCA/PyBERUZBVUxUX0FJX01PREVMLFxuICAgICAgdGVtcGVyYXR1cmU6IHRlbXBlcmF0dXJlLFxuICAgICAgbWF4X3Rva2VuczogbWF4VG9rZW5zLFxuICAgICAgc3RvcDogW1wiSHVtYW46XCIsIFwiQUk6XCJdLCAvLyBUaGUgY29tcGxldGlvbiBjYW7igJl0IGNoYW5nZSB0aGUgc3BlYWtlci5cbiAgICAgIHRvcF9wOiAxLFxuICAgICAgZnJlcXVlbmN5X3BlbmFsdHk6IDAsXG4gICAgICBwcmVzZW5jZV9wZW5hbHR5OiAwLFxuICAgIH0pO1xuXG4gICAgY29tcGxldGlvbi51c2FnZT8udG90YWxfdG9rZW5zICYmXG4gICAgICBjb25zb2xlLmRlYnVnKFwiT3BlbkFJIHRva2VucyB1c2VkOlwiLCB7XG4gICAgICAgIG91dHB1dDogY29tcGxldGlvbi51c2FnZT8uY29tcGxldGlvbl90b2tlbnMsXG4gICAgICAgIGlucHV0OiBjb21wbGV0aW9uLnVzYWdlPy5wcm9tcHRfdG9rZW5zLFxuICAgICAgfSk7XG5cbiAgICBjb25zdCBpbnB1dFRva2VucyA9IGNvbXBsZXRpb24udXNhZ2U/LnByb21wdF90b2tlbnM7XG4gICAgY29uc3Qgb3V0cHV0VG9rZW5zID0gY29tcGxldGlvbi51c2FnZT8uY29tcGxldGlvbl90b2tlbnM7XG5cbiAgICBpZiAoXG4gICAgICAhY29tcGxldGlvbi5jaG9pY2VzWzBdPy5tZXNzYWdlLmNvbnRlbnQgfHxcbiAgICAgICFpbnB1dFRva2VucyB8fFxuICAgICAgIW91dHB1dFRva2Vuc1xuICAgICkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRmFpbGVkIHRvIGZldGNoIHJlc3BvbnNlIGZyb20gT3BlbkFJXCIpO1xuICAgIH1cblxuICAgIGNvbnN0IGVzdGltYXRlZFByaWNpbmcgPVxuICAgICAgKGlucHV0VG9rZW5zIC8gMTAwMCkgKlxuICAgICAgICAobW9kZWw/LnByaWNlUGVyMTAwMElucHV0ID8/IG1vZGVsLnByaWNlUGVyMTAwMElucHV0KSArXG4gICAgICAob3V0cHV0VG9rZW5zIC8gMTAwMCkgKlxuICAgICAgICAobW9kZWw/LnByaWNlUGVyMTAwME91dHB1dCA/PyBtb2RlbC5wcmljZVBlcjEwMDBPdXRwdXQpO1xuXG4gICAgbG9nZ2VyPy5sb2dUb0ZpbGUoXG4gICAgICBmaWxlTmFtZSxcbiAgICAgIGBSRVNQT05TRTpcXG4qKipcXG5cXG4ke0pTT04uc3RyaW5naWZ5KGNvbXBsZXRpb24sIG51bGwsIDIpfVxcblxcbmAsXG4gICAgKTtcblxuICAgIHJldHVybiB7XG4gICAgICBtZXNzYWdlOiBjb21wbGV0aW9uLmNob2ljZXNbMF0ubWVzc2FnZS5jb250ZW50LFxuICAgICAgdG9rZW5zVXNlZDogY29tcGxldGlvbi51c2FnZSEudG90YWxfdG9rZW5zLFxuICAgICAgZXN0aW1hdGVkUHJpY2luZyxcbiAgICB9O1xuICB9IGNhdGNoIChlcnI6IGFueSkge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW5zYWZlLW1lbWJlci1hY2Nlc3NcbiAgICBjb25zb2xlLmVycm9yKFwiRXJyb3IgY2FsbGluZyBPcGVuQUlcIiwgZXJyPy5tZXNzYWdlKTtcbiAgICB0aHJvdyBlcnI7XG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJPcGVuQUkiLCJERUZBVUxUX0FJX01PREVMIiwiZW5jb2RpbmdfZm9yX21vZGVsIiwiY2xpZW50IiwibWF4UmV0cmllcyIsImNhbGxPcGVuQWkiLCJwcm9tcHQiLCJsb2dnZXIiLCJtb2RlbCIsImluc3RydWN0aW9ucyIsInRlbXBlcmF0dXJlIiwibWVzc2FnZXMiLCJyb2xlIiwiY29udGVudCIsInRrIiwidG9rZW5zIiwiZW5jb2RlIiwibGVuZ3RoIiwibWF4VG9rZW5zIiwiY29uc29sZSIsImRlYnVnIiwiZmlsZU5hbWUiLCJEYXRlIiwibm93IiwibG9nVG9GaWxlIiwiY29tcGxldGlvbiIsImNoYXQiLCJjb21wbGV0aW9ucyIsImNyZWF0ZSIsIm1heF90b2tlbnMiLCJzdG9wIiwidG9wX3AiLCJmcmVxdWVuY3lfcGVuYWx0eSIsInByZXNlbmNlX3BlbmFsdHkiLCJ1c2FnZSIsInRvdGFsX3Rva2VucyIsIm91dHB1dCIsImNvbXBsZXRpb25fdG9rZW5zIiwiaW5wdXQiLCJwcm9tcHRfdG9rZW5zIiwiaW5wdXRUb2tlbnMiLCJvdXRwdXRUb2tlbnMiLCJjaG9pY2VzIiwibWVzc2FnZSIsIkVycm9yIiwiZXN0aW1hdGVkUHJpY2luZyIsInByaWNlUGVyMTAwMElucHV0IiwicHJpY2VQZXIxMDAwT3V0cHV0IiwiSlNPTiIsInN0cmluZ2lmeSIsInRva2Vuc1VzZWQiLCJlcnIiLCJlcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./src/server/utils/ai-helpers/callOpenAi.ts\n");

/***/ }),

/***/ "(api)/./src/server/utils/ai-helpers/createChunks.ts":
/*!*****************************************************!*\
  !*** ./src/server/utils/ai-helpers/createChunks.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createChunks: () => (/* binding */ createChunks)\n/* harmony export */ });\n/* harmony import */ var tiktoken__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tiktoken */ \"tiktoken\");\n/* harmony import */ var tiktoken__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(tiktoken__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var natural__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! natural */ \"natural\");\n/* harmony import */ var natural__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(natural__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _aiConstants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./aiConstants */ \"(api)/./src/server/utils/ai-helpers/aiConstants.ts\");\n\n\n\n/**\n * Creates an array of `Chunk` objects from a given text. Each chunk represents a portion of the input text.\n *\n * The function breaks down the input `fileContent` into smaller chunks, ensuring that each chunk\n * does not exceed a specified number of tokens (`DEFAULT_MAX_TOKENS_PER_CHUNK`). The aim is to create meaningful\n * chunks, so the division is based on sentences rather than arbitrary divisions. Additionally, chunks may\n * have some overlap to provide context.\n *\n * The generated chunks are returned as an array. Each chunk has a `start` and `end` property indicating\n * its position in the array of tokenized sentences, a `title` property derived from the provided `title`\n * parameter, and a `text` property containing the actual content of the chunk.\n *\n * If the function cannot create any chunks (e.g., if all sentences are too long), it throws an error.\n *\n * @param fileContent - The input text to be chunked.\n * @param title - The title to be assigned to each chunk.\n * @returns An array of `Chunk` objects.\n */ function createChunks(fileContent, title, logger, maxTokensPerChunk = _aiConstants__WEBPACK_IMPORTED_MODULE_2__.DEFAULT_MAX_TOKENS_PER_CHUNK, model = _aiConstants__WEBPACK_IMPORTED_MODULE_2__.DEFAULT_AI_MODEL) {\n    console.debug(\"Creating chunks\");\n    const chunks = [];\n    const tokenizer = new natural__WEBPACK_IMPORTED_MODULE_1__.SentenceTokenizer();\n    // Tokenize the file content into individual sentences.\n    const sentences = tokenizer.tokenize(fileContent);\n    // Initialize tiktoken for the specified embedding model.\n    // This helps calculate the number of tokens in each sentence.\n    const tiktoken = (0,tiktoken__WEBPACK_IMPORTED_MODULE_0__.encoding_for_model)(model.model);\n    let chunkStart = 0; // Start of the current chunk in the list of sentences.\n    // Keep creating chunks as long as there are sentences left.\n    while(chunkStart < sentences.length){\n        let tokenCount = 0; // Counter to keep track of the number of tokens in the current chunk.\n        let chunkText = \"\"; // Text of the current chunk.\n        let chunkSentences = 0; // Counter to keep track of the number of sentences in the current chunk.\n        let sentencesEnded = false;\n        // Loop through sentences and add them to the current chunk until reaching the maximum token limit.\n        for(let i = chunkStart; tokenCount < maxTokensPerChunk; i++){\n            if (i >= sentences.length) {\n                sentencesEnded = true;\n                break;\n            }\n            const sentence = sentences[i];\n            const tiktokens = tiktoken.encode(sentence); // Encode the sentence to get the number of tokens.\n            const sentenceTokenCount = tiktokens.length;\n            // If a single sentence exceeds the max token limit, skip it.\n            if (sentenceTokenCount > maxTokensPerChunk) continue;\n            // If adding the current sentence doesn't exceed the token limit, add it to the chunk.\n            if (tokenCount + sentenceTokenCount <= maxTokensPerChunk) {\n                tokenCount += sentenceTokenCount;\n                chunkText += \" \" + sentence;\n                chunkSentences++;\n            } else {\n                break; // If the token limit is reached, break out of the loop.\n            }\n        }\n        const trimmedText = chunkText.trim(); // Remove any leading or trailing whitespace from the chunk.\n        // If there's any content in the chunk, add it to the chunks array.\n        if (trimmedText) {\n            chunks.push({\n                start: chunkStart,\n                end: chunkStart + tokenCount,\n                title: title,\n                text: trimmedText\n            });\n        }\n        chunkStart += chunkSentences;\n        if (sentencesEnded) {\n            break;\n        }\n    }\n    if (chunks.length === 0) {\n        throw new Error(\"no chunks created\");\n    }\n    logger?.logToFile(\"chunks.txt\", JSON.stringify(chunks, null, 2));\n    console.debug(\"Chunks created\", chunks.length);\n    return chunks;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./src/server/utils/ai-helpers/createChunks.ts\n");

/***/ }),

/***/ "(api)/./src/server/utils/ai-helpers/getEmbeddings.ts":
/*!******************************************************!*\
  !*** ./src/server/utils/ai-helpers/getEmbeddings.ts ***!
  \******************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getEmbedding: () => (/* binding */ getEmbedding),\n/* harmony export */   getEmbeddings: () => (/* binding */ getEmbeddings)\n/* harmony export */ });\n/* harmony import */ var openai__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! openai */ \"openai\");\n/* harmony import */ var _aiConstants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./aiConstants */ \"(api)/./src/server/utils/ai-helpers/aiConstants.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([openai__WEBPACK_IMPORTED_MODULE_0__]);\nopenai__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\nconst client = new openai__WEBPACK_IMPORTED_MODULE_0__.OpenAI({\n    maxRetries: 3\n});\nasync function callEmbeddingApi(texts, embedModel) {\n    console.debug(\"Calling OpenAI embeddings API\", texts.length);\n    const response = await client.embeddings.create({\n        input: texts,\n        model: embedModel\n    });\n    console.debug(\"OpenAI embeddings tokens used:\", response.usage.total_tokens);\n    return {\n        data: response.data,\n        tokensUsed: response.usage.total_tokens\n    };\n}\n/**\n * Fetches embeddings for a batch of text chunks using the specified embedding model.\n *\n * The function splits the chunks into smaller batches based on the given `batchSize` and then\n * sends these batches one by one to the OpenAI API to get their embeddings. The embeddings are\n * then aggregated into a single array and returned.\n *\n * If the API fails to return embeddings for a batch, the function throws an error.\n *\n * @param chunks - An array of text chunks for which embeddings are to be fetched.\n * @param batchSize - The number of chunks to be sent in a single API call.\n * @param embedModel - The identifier for the embedding model to use.\n * @returns An array of embeddings, where each embedding is an array of numbers.\n */ async function getEmbeddings(chunks, batchSize = 100, embedModel = _aiConstants__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_EMBEDDING_MODEL) {\n    const embeddings = [];\n    let tokens = 0;\n    const chunkLength = chunks.length;\n    for(let i = 0; i < chunkLength; i += batchSize){\n        const iEnd = Math.min(chunkLength, i + batchSize);\n        const texts = chunks.slice(i, iEnd).map((chunkItem)=>chunkItem.text);\n        const { data, tokensUsed } = await callEmbeddingApi(texts, embedModel);\n        tokens += tokensUsed;\n        if (!data) {\n            throw new Error(\"Failed to fetch embeddings for chunks\");\n        }\n        const embeds = data.map((record)=>record.embedding);\n        embeddings.push(...embeds);\n    }\n    return {\n        embeddings,\n        tokensUsed: tokens\n    };\n}\n/**\n * Fetches an embedding for a single piece of text using the specified embedding model.\n *\n * This function sends the given text to the OpenAI API and retrieves its embedding.\n * If the API fails to return an embedding, the function throws an error.\n *\n * @param text - The text for which the embedding is to be fetched.\n * @param embedModel - The identifier for the embedding model to use.\n * @returns An embedding for the given text, represented as an array of numbers.\n */ async function getEmbedding(text, embedModel = _aiConstants__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_EMBEDDING_MODEL) {\n    const { data, tokensUsed } = await callEmbeddingApi([\n        text\n    ], embedModel);\n    if (!data || data.length === 0) {\n        throw new Error(\"Failed to fetch embeddings for single text\");\n    }\n    return {\n        embedding: data[0].embedding,\n        tokensUsed: tokensUsed\n    };\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvc2VydmVyL3V0aWxzL2FpLWhlbHBlcnMvZ2V0RW1iZWRkaW5ncy50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQWdDO0FBRXdCO0FBRXhELE1BQU1FLFNBQVMsSUFBSUYsMENBQU1BLENBQUM7SUFDeEJHLFlBQVk7QUFDZDtBQUVBLGVBQWVDLGlCQUFpQkMsS0FBZSxFQUFFQyxVQUFrQjtJQUNqRUMsUUFBUUMsS0FBSyxDQUFDLGlDQUFpQ0gsTUFBTUksTUFBTTtJQUUzRCxNQUFNQyxXQUFXLE1BQU1SLE9BQU9TLFVBQVUsQ0FBQ0MsTUFBTSxDQUFDO1FBQzlDQyxPQUFPUjtRQUNQUyxPQUFPUjtJQUNUO0lBRUFDLFFBQVFDLEtBQUssQ0FBQyxrQ0FBa0NFLFNBQVNLLEtBQUssQ0FBQ0MsWUFBWTtJQUUzRSxPQUFPO1FBQUVDLE1BQU1QLFNBQVNPLElBQUk7UUFBRUMsWUFBWVIsU0FBU0ssS0FBSyxDQUFDQyxZQUFZO0lBQUM7QUFDeEU7QUFFQTs7Ozs7Ozs7Ozs7OztDQWFDLEdBQ00sZUFBZUcsY0FDcEJDLE1BQWUsRUFDZkMsWUFBWSxHQUFHLEVBQ2ZmLGFBQWFMLGlFQUF1QjtJQUVwQyxNQUFNVSxhQUF5QixFQUFFO0lBRWpDLElBQUlXLFNBQVM7SUFFYixNQUFNQyxjQUFjSCxPQUFPWCxNQUFNO0lBRWpDLElBQUssSUFBSWUsSUFBSSxHQUFHQSxJQUFJRCxhQUFhQyxLQUFLSCxVQUFXO1FBQy9DLE1BQU1JLE9BQU9DLEtBQUtDLEdBQUcsQ0FBQ0osYUFBYUMsSUFBSUg7UUFFdkMsTUFBTWhCLFFBQVFlLE9BQU9RLEtBQUssQ0FBQ0osR0FBR0MsTUFBTUksR0FBRyxDQUFDLENBQUNDLFlBQWNBLFVBQVVDLElBQUk7UUFFckUsTUFBTSxFQUFFZCxJQUFJLEVBQUVDLFVBQVUsRUFBRSxHQUFHLE1BQU1kLGlCQUFpQkMsT0FBT0M7UUFFM0RnQixVQUFVSjtRQUVWLElBQUksQ0FBQ0QsTUFBTTtZQUNULE1BQU0sSUFBSWUsTUFBTTtRQUNsQjtRQUVBLE1BQU1DLFNBQVNoQixLQUFLWSxHQUFHLENBQUMsQ0FBQ0ssU0FBV0EsT0FBT0MsU0FBUztRQUNwRHhCLFdBQVd5QixJQUFJLElBQUlIO0lBQ3JCO0lBRUEsT0FBTztRQUFFdEI7UUFBWU8sWUFBWUk7SUFBTztBQUMxQztBQUVBOzs7Ozs7Ozs7Q0FTQyxHQUNNLGVBQWVlLGFBQ3BCTixJQUFZLEVBQ1p6QixhQUFhTCxpRUFBdUI7SUFFcEMsTUFBTSxFQUFFZ0IsSUFBSSxFQUFFQyxVQUFVLEVBQUUsR0FBRyxNQUFNZCxpQkFBaUI7UUFBQzJCO0tBQUssRUFBRXpCO0lBRTVELElBQUksQ0FBQ1csUUFBUUEsS0FBS1IsTUFBTSxLQUFLLEdBQUc7UUFDOUIsTUFBTSxJQUFJdUIsTUFBTTtJQUNsQjtJQUVBLE9BQU87UUFBRUcsV0FBV2xCLElBQUksQ0FBQyxFQUFFLENBQUVrQixTQUFTO1FBQUVqQixZQUFZQTtJQUFXO0FBQ2pFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVhcm4tYWkvLi9zcmMvc2VydmVyL3V0aWxzL2FpLWhlbHBlcnMvZ2V0RW1iZWRkaW5ncy50cz9mMGY5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE9wZW5BSSB9IGZyb20gXCJvcGVuYWlcIjtcbmltcG9ydCB7IHR5cGUgQ2h1bmsgfSBmcm9tIFwiLi9jcmVhdGVDaHVua3NcIjtcbmltcG9ydCB7IERFRkFVTFRfRU1CRURESU5HX01PREVMIH0gZnJvbSBcIi4vYWlDb25zdGFudHNcIjtcblxuY29uc3QgY2xpZW50ID0gbmV3IE9wZW5BSSh7XG4gIG1heFJldHJpZXM6IDMsXG59KTtcblxuYXN5bmMgZnVuY3Rpb24gY2FsbEVtYmVkZGluZ0FwaSh0ZXh0czogc3RyaW5nW10sIGVtYmVkTW9kZWw6IHN0cmluZykge1xuICBjb25zb2xlLmRlYnVnKFwiQ2FsbGluZyBPcGVuQUkgZW1iZWRkaW5ncyBBUElcIiwgdGV4dHMubGVuZ3RoKTtcblxuICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGNsaWVudC5lbWJlZGRpbmdzLmNyZWF0ZSh7XG4gICAgaW5wdXQ6IHRleHRzLFxuICAgIG1vZGVsOiBlbWJlZE1vZGVsLFxuICB9KTtcblxuICBjb25zb2xlLmRlYnVnKFwiT3BlbkFJIGVtYmVkZGluZ3MgdG9rZW5zIHVzZWQ6XCIsIHJlc3BvbnNlLnVzYWdlLnRvdGFsX3Rva2Vucyk7XG5cbiAgcmV0dXJuIHsgZGF0YTogcmVzcG9uc2UuZGF0YSwgdG9rZW5zVXNlZDogcmVzcG9uc2UudXNhZ2UudG90YWxfdG9rZW5zIH07XG59XG5cbi8qKlxuICogRmV0Y2hlcyBlbWJlZGRpbmdzIGZvciBhIGJhdGNoIG9mIHRleHQgY2h1bmtzIHVzaW5nIHRoZSBzcGVjaWZpZWQgZW1iZWRkaW5nIG1vZGVsLlxuICpcbiAqIFRoZSBmdW5jdGlvbiBzcGxpdHMgdGhlIGNodW5rcyBpbnRvIHNtYWxsZXIgYmF0Y2hlcyBiYXNlZCBvbiB0aGUgZ2l2ZW4gYGJhdGNoU2l6ZWAgYW5kIHRoZW5cbiAqIHNlbmRzIHRoZXNlIGJhdGNoZXMgb25lIGJ5IG9uZSB0byB0aGUgT3BlbkFJIEFQSSB0byBnZXQgdGhlaXIgZW1iZWRkaW5ncy4gVGhlIGVtYmVkZGluZ3MgYXJlXG4gKiB0aGVuIGFnZ3JlZ2F0ZWQgaW50byBhIHNpbmdsZSBhcnJheSBhbmQgcmV0dXJuZWQuXG4gKlxuICogSWYgdGhlIEFQSSBmYWlscyB0byByZXR1cm4gZW1iZWRkaW5ncyBmb3IgYSBiYXRjaCwgdGhlIGZ1bmN0aW9uIHRocm93cyBhbiBlcnJvci5cbiAqXG4gKiBAcGFyYW0gY2h1bmtzIC0gQW4gYXJyYXkgb2YgdGV4dCBjaHVua3MgZm9yIHdoaWNoIGVtYmVkZGluZ3MgYXJlIHRvIGJlIGZldGNoZWQuXG4gKiBAcGFyYW0gYmF0Y2hTaXplIC0gVGhlIG51bWJlciBvZiBjaHVua3MgdG8gYmUgc2VudCBpbiBhIHNpbmdsZSBBUEkgY2FsbC5cbiAqIEBwYXJhbSBlbWJlZE1vZGVsIC0gVGhlIGlkZW50aWZpZXIgZm9yIHRoZSBlbWJlZGRpbmcgbW9kZWwgdG8gdXNlLlxuICogQHJldHVybnMgQW4gYXJyYXkgb2YgZW1iZWRkaW5ncywgd2hlcmUgZWFjaCBlbWJlZGRpbmcgaXMgYW4gYXJyYXkgb2YgbnVtYmVycy5cbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldEVtYmVkZGluZ3MoXG4gIGNodW5rczogQ2h1bmtbXSxcbiAgYmF0Y2hTaXplID0gMTAwLFxuICBlbWJlZE1vZGVsID0gREVGQVVMVF9FTUJFRERJTkdfTU9ERUwsXG4pIHtcbiAgY29uc3QgZW1iZWRkaW5nczogbnVtYmVyW11bXSA9IFtdO1xuXG4gIGxldCB0b2tlbnMgPSAwO1xuXG4gIGNvbnN0IGNodW5rTGVuZ3RoID0gY2h1bmtzLmxlbmd0aDtcblxuICBmb3IgKGxldCBpID0gMDsgaSA8IGNodW5rTGVuZ3RoOyBpICs9IGJhdGNoU2l6ZSkge1xuICAgIGNvbnN0IGlFbmQgPSBNYXRoLm1pbihjaHVua0xlbmd0aCwgaSArIGJhdGNoU2l6ZSk7XG5cbiAgICBjb25zdCB0ZXh0cyA9IGNodW5rcy5zbGljZShpLCBpRW5kKS5tYXAoKGNodW5rSXRlbSkgPT4gY2h1bmtJdGVtLnRleHQpO1xuXG4gICAgY29uc3QgeyBkYXRhLCB0b2tlbnNVc2VkIH0gPSBhd2FpdCBjYWxsRW1iZWRkaW5nQXBpKHRleHRzLCBlbWJlZE1vZGVsKTtcblxuICAgIHRva2VucyArPSB0b2tlbnNVc2VkO1xuXG4gICAgaWYgKCFkYXRhKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJGYWlsZWQgdG8gZmV0Y2ggZW1iZWRkaW5ncyBmb3IgY2h1bmtzXCIpO1xuICAgIH1cblxuICAgIGNvbnN0IGVtYmVkcyA9IGRhdGEubWFwKChyZWNvcmQpID0+IHJlY29yZC5lbWJlZGRpbmcpO1xuICAgIGVtYmVkZGluZ3MucHVzaCguLi5lbWJlZHMpO1xuICB9XG5cbiAgcmV0dXJuIHsgZW1iZWRkaW5ncywgdG9rZW5zVXNlZDogdG9rZW5zIH07XG59XG5cbi8qKlxuICogRmV0Y2hlcyBhbiBlbWJlZGRpbmcgZm9yIGEgc2luZ2xlIHBpZWNlIG9mIHRleHQgdXNpbmcgdGhlIHNwZWNpZmllZCBlbWJlZGRpbmcgbW9kZWwuXG4gKlxuICogVGhpcyBmdW5jdGlvbiBzZW5kcyB0aGUgZ2l2ZW4gdGV4dCB0byB0aGUgT3BlbkFJIEFQSSBhbmQgcmV0cmlldmVzIGl0cyBlbWJlZGRpbmcuXG4gKiBJZiB0aGUgQVBJIGZhaWxzIHRvIHJldHVybiBhbiBlbWJlZGRpbmcsIHRoZSBmdW5jdGlvbiB0aHJvd3MgYW4gZXJyb3IuXG4gKlxuICogQHBhcmFtIHRleHQgLSBUaGUgdGV4dCBmb3Igd2hpY2ggdGhlIGVtYmVkZGluZyBpcyB0byBiZSBmZXRjaGVkLlxuICogQHBhcmFtIGVtYmVkTW9kZWwgLSBUaGUgaWRlbnRpZmllciBmb3IgdGhlIGVtYmVkZGluZyBtb2RlbCB0byB1c2UuXG4gKiBAcmV0dXJucyBBbiBlbWJlZGRpbmcgZm9yIHRoZSBnaXZlbiB0ZXh0LCByZXByZXNlbnRlZCBhcyBhbiBhcnJheSBvZiBudW1iZXJzLlxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0RW1iZWRkaW5nKFxuICB0ZXh0OiBzdHJpbmcsXG4gIGVtYmVkTW9kZWwgPSBERUZBVUxUX0VNQkVERElOR19NT0RFTCxcbikge1xuICBjb25zdCB7IGRhdGEsIHRva2Vuc1VzZWQgfSA9IGF3YWl0IGNhbGxFbWJlZGRpbmdBcGkoW3RleHRdLCBlbWJlZE1vZGVsKTtcblxuICBpZiAoIWRhdGEgfHwgZGF0YS5sZW5ndGggPT09IDApIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJGYWlsZWQgdG8gZmV0Y2ggZW1iZWRkaW5ncyBmb3Igc2luZ2xlIHRleHRcIik7XG4gIH1cblxuICByZXR1cm4geyBlbWJlZGRpbmc6IGRhdGFbMF0hLmVtYmVkZGluZywgdG9rZW5zVXNlZDogdG9rZW5zVXNlZCB9O1xufVxuIl0sIm5hbWVzIjpbIk9wZW5BSSIsIkRFRkFVTFRfRU1CRURESU5HX01PREVMIiwiY2xpZW50IiwibWF4UmV0cmllcyIsImNhbGxFbWJlZGRpbmdBcGkiLCJ0ZXh0cyIsImVtYmVkTW9kZWwiLCJjb25zb2xlIiwiZGVidWciLCJsZW5ndGgiLCJyZXNwb25zZSIsImVtYmVkZGluZ3MiLCJjcmVhdGUiLCJpbnB1dCIsIm1vZGVsIiwidXNhZ2UiLCJ0b3RhbF90b2tlbnMiLCJkYXRhIiwidG9rZW5zVXNlZCIsImdldEVtYmVkZGluZ3MiLCJjaHVua3MiLCJiYXRjaFNpemUiLCJ0b2tlbnMiLCJjaHVua0xlbmd0aCIsImkiLCJpRW5kIiwiTWF0aCIsIm1pbiIsInNsaWNlIiwibWFwIiwiY2h1bmtJdGVtIiwidGV4dCIsIkVycm9yIiwiZW1iZWRzIiwicmVjb3JkIiwiZW1iZWRkaW5nIiwicHVzaCIsImdldEVtYmVkZGluZyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./src/server/utils/ai-helpers/getEmbeddings.ts\n");

/***/ }),

/***/ "(api)/./src/server/utils/ai-helpers/getModelThatFits.ts":
/*!*********************************************************!*\
  !*** ./src/server/utils/ai-helpers/getModelThatFits.ts ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getModelThatFits: () => (/* binding */ getModelThatFits)\n/* harmony export */ });\n/* harmony import */ var tiktoken__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tiktoken */ \"tiktoken\");\n/* harmony import */ var tiktoken__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(tiktoken__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _aiConstants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./aiConstants */ \"(api)/./src/server/utils/ai-helpers/aiConstants.ts\");\n/* harmony import */ var _buildPrompt__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./buildPrompt */ \"(api)/./src/server/utils/ai-helpers/buildPrompt.ts\");\n\n\n\nfunction getModelThatFits(text, question) {\n    const modelsOrderedByPrice = Object.values(_aiConstants__WEBPACK_IMPORTED_MODULE_1__.AI_MODELS).sort((a, b)=>a.pricePer1000Input - b.pricePer1000Input);\n    for (const model of modelsOrderedByPrice){\n        const tk = (0,tiktoken__WEBPACK_IMPORTED_MODULE_0__.encoding_for_model)(model.model);\n        const tokens = tk.encode(text).length;\n        const maxTokens = model.maxTokens - _aiConstants__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_REPLY_MAX_TOKENS - (0,_buildPrompt__WEBPACK_IMPORTED_MODULE_2__.tokensForQuestion)(question, model.model);\n        if (tokens <= maxTokens) return model;\n    }\n    return false;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvc2VydmVyL3V0aWxzL2FpLWhlbHBlcnMvZ2V0TW9kZWxUaGF0Rml0cy50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUE4QztBQUNzQjtBQUNsQjtBQUUzQyxTQUFTSSxpQkFBaUJDLElBQVksRUFBRUMsUUFBZ0I7SUFDN0QsTUFBTUMsdUJBQXVCQyxPQUFPQyxNQUFNLENBQUNSLG1EQUFTQSxFQUFFUyxJQUFJLENBQ3hELENBQUNDLEdBQUdDLElBQU1ELEVBQUVFLGlCQUFpQixHQUFHRCxFQUFFQyxpQkFBaUI7SUFHckQsS0FBSyxNQUFNQyxTQUFTUCxxQkFBc0I7UUFDeEMsTUFBTVEsS0FBS2YsNERBQWtCQSxDQUFDYyxNQUFNQSxLQUFLO1FBQ3pDLE1BQU1FLFNBQVNELEdBQUdFLE1BQU0sQ0FBQ1osTUFBTWEsTUFBTTtRQUVyQyxNQUFNQyxZQUNKTCxNQUFNSyxTQUFTLEdBQ2ZqQixrRUFBd0JBLEdBQ3hCQywrREFBaUJBLENBQUNHLFVBQVVRLE1BQU1BLEtBQUs7UUFFekMsSUFBSUUsVUFBVUcsV0FBVyxPQUFPTDtJQUNsQztJQUVBLE9BQU87QUFDVCIsInNvdXJjZXMiOlsid2VicGFjazovL2xlYXJuLWFpLy4vc3JjL3NlcnZlci91dGlscy9haS1oZWxwZXJzL2dldE1vZGVsVGhhdEZpdHMudHM/YzllMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBlbmNvZGluZ19mb3JfbW9kZWwgfSBmcm9tIFwidGlrdG9rZW5cIjtcbmltcG9ydCB7IEFJX01PREVMUywgREVGQVVMVF9SRVBMWV9NQVhfVE9LRU5TIH0gZnJvbSBcIi4vYWlDb25zdGFudHNcIjtcbmltcG9ydCB7IHRva2Vuc0ZvclF1ZXN0aW9uIH0gZnJvbSBcIi4vYnVpbGRQcm9tcHRcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIGdldE1vZGVsVGhhdEZpdHModGV4dDogc3RyaW5nLCBxdWVzdGlvbjogc3RyaW5nKSB7XG4gIGNvbnN0IG1vZGVsc09yZGVyZWRCeVByaWNlID0gT2JqZWN0LnZhbHVlcyhBSV9NT0RFTFMpLnNvcnQoXG4gICAgKGEsIGIpID0+IGEucHJpY2VQZXIxMDAwSW5wdXQgLSBiLnByaWNlUGVyMTAwMElucHV0LFxuICApO1xuXG4gIGZvciAoY29uc3QgbW9kZWwgb2YgbW9kZWxzT3JkZXJlZEJ5UHJpY2UpIHtcbiAgICBjb25zdCB0ayA9IGVuY29kaW5nX2Zvcl9tb2RlbChtb2RlbC5tb2RlbCk7XG4gICAgY29uc3QgdG9rZW5zID0gdGsuZW5jb2RlKHRleHQpLmxlbmd0aDtcblxuICAgIGNvbnN0IG1heFRva2VucyA9XG4gICAgICBtb2RlbC5tYXhUb2tlbnMgLVxuICAgICAgREVGQVVMVF9SRVBMWV9NQVhfVE9LRU5TIC1cbiAgICAgIHRva2Vuc0ZvclF1ZXN0aW9uKHF1ZXN0aW9uLCBtb2RlbC5tb2RlbCk7XG5cbiAgICBpZiAodG9rZW5zIDw9IG1heFRva2VucykgcmV0dXJuIG1vZGVsO1xuICB9XG5cbiAgcmV0dXJuIGZhbHNlO1xufVxuIl0sIm5hbWVzIjpbImVuY29kaW5nX2Zvcl9tb2RlbCIsIkFJX01PREVMUyIsIkRFRkFVTFRfUkVQTFlfTUFYX1RPS0VOUyIsInRva2Vuc0ZvclF1ZXN0aW9uIiwiZ2V0TW9kZWxUaGF0Rml0cyIsInRleHQiLCJxdWVzdGlvbiIsIm1vZGVsc09yZGVyZWRCeVByaWNlIiwiT2JqZWN0IiwidmFsdWVzIiwic29ydCIsImEiLCJiIiwicHJpY2VQZXIxMDAwSW5wdXQiLCJtb2RlbCIsInRrIiwidG9rZW5zIiwiZW5jb2RlIiwibGVuZ3RoIiwibWF4VG9rZW5zIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./src/server/utils/ai-helpers/getModelThatFits.ts\n");

/***/ }),

/***/ "(api)/./src/server/utils/ai-helpers/runKmeans.ts":
/*!**************************************************!*\
  !*** ./src/server/utils/ai-helpers/runKmeans.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   runKmeans: () => (/* binding */ runKmeans)\n/* harmony export */ });\n/* harmony import */ var ml_kmeans__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ml-kmeans */ \"ml-kmeans\");\n/* harmony import */ var ml_kmeans__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(ml_kmeans__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var numeric__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! numeric */ \"numeric\");\n/* harmony import */ var numeric__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(numeric__WEBPACK_IMPORTED_MODULE_1__);\n\n\nfunction runKmeans(vectors, chunks, numClusters = 8) {\n    console.debug(\"Running K-means clustering\", {\n        vectors: vectors.length,\n        numClusters\n    });\n    if (chunks.length !== vectors.length) {\n        throw new Error(\"Chunks and vectors should have the same length.\");\n    }\n    const result = (0,ml_kmeans__WEBPACK_IMPORTED_MODULE_0__.kmeans)(vectors, numClusters, {});\n    const res = result.computeInformation(vectors);\n    // Extract representative chunk for each cluster\n    const representatives = [];\n    for(let i = 0; i < numClusters; i++){\n        const centroid = res[i].centroid;\n        let closestDistance = Infinity;\n        let closestIndex = -1;\n        // Find the closest vector to the centroid\n        for(let j = 0; j < vectors.length; j++){\n            if (result.clusters[j] === i) {\n                const distance = (0,numeric__WEBPACK_IMPORTED_MODULE_1__.norm2)((0,numeric__WEBPACK_IMPORTED_MODULE_1__.sub)(centroid, vectors[j]));\n                if (distance < closestDistance) {\n                    closestDistance = distance;\n                    closestIndex = j;\n                }\n            }\n        }\n        if (closestIndex !== -1) {\n            representatives.push(chunks[closestIndex]);\n        }\n    }\n    console.debug(\"Representative chunks found\", representatives.length);\n    return representatives;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvc2VydmVyL3V0aWxzL2FpLWhlbHBlcnMvcnVuS21lYW5zLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQW1DO0FBQ0U7QUFHOUIsU0FBU0csVUFDZEMsT0FBbUIsRUFDbkJDLE1BQWUsRUFDZkMsY0FBYyxDQUFDO0lBRWZDLFFBQVFDLEtBQUssQ0FBQyw4QkFBOEI7UUFDMUNKLFNBQVNBLFFBQVFLLE1BQU07UUFDdkJIO0lBQ0Y7SUFFQSxJQUFJRCxPQUFPSSxNQUFNLEtBQUtMLFFBQVFLLE1BQU0sRUFBRTtRQUNwQyxNQUFNLElBQUlDLE1BQU07SUFDbEI7SUFFQSxNQUFNQyxTQUFTWCxpREFBTUEsQ0FBQ0ksU0FBU0UsYUFBYSxDQUFDO0lBQzdDLE1BQU1NLE1BQU1ELE9BQU9FLGtCQUFrQixDQUFDVDtJQUV0QyxnREFBZ0Q7SUFDaEQsTUFBTVUsa0JBQTJCLEVBQUU7SUFFbkMsSUFBSyxJQUFJQyxJQUFJLEdBQUdBLElBQUlULGFBQWFTLElBQUs7UUFDcEMsTUFBTUMsV0FBV0osR0FBRyxDQUFDRyxFQUFFLENBQUVDLFFBQVE7UUFDakMsSUFBSUMsa0JBQWtCQztRQUN0QixJQUFJQyxlQUFlLENBQUM7UUFFcEIsMENBQTBDO1FBQzFDLElBQUssSUFBSUMsSUFBSSxHQUFHQSxJQUFJaEIsUUFBUUssTUFBTSxFQUFFVyxJQUFLO1lBQ3ZDLElBQUlULE9BQU9VLFFBQVEsQ0FBQ0QsRUFBRSxLQUFLTCxHQUFHO2dCQUM1QixNQUFNTyxXQUFXckIsOENBQUtBLENBQUNDLDRDQUFHQSxDQUFDYyxVQUFVWixPQUFPLENBQUNnQixFQUFFO2dCQUMvQyxJQUFJRSxXQUFXTCxpQkFBaUI7b0JBQzlCQSxrQkFBa0JLO29CQUNsQkgsZUFBZUM7Z0JBQ2pCO1lBQ0Y7UUFDRjtRQUVBLElBQUlELGlCQUFpQixDQUFDLEdBQUc7WUFDdkJMLGdCQUFnQlMsSUFBSSxDQUFDbEIsTUFBTSxDQUFDYyxhQUFhO1FBQzNDO0lBQ0Y7SUFFQVosUUFBUUMsS0FBSyxDQUFDLCtCQUErQk0sZ0JBQWdCTCxNQUFNO0lBRW5FLE9BQU9LO0FBQ1QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWFybi1haS8uL3NyYy9zZXJ2ZXIvdXRpbHMvYWktaGVscGVycy9ydW5LbWVhbnMudHM/Yjk5MyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBrbWVhbnMgfSBmcm9tIFwibWwta21lYW5zXCI7XG5pbXBvcnQgeyBub3JtMiwgc3ViIH0gZnJvbSBcIm51bWVyaWNcIjtcbmltcG9ydCB7IHR5cGUgQ2h1bmsgfSBmcm9tIFwiLi9jcmVhdGVDaHVua3NcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIHJ1bkttZWFucyhcbiAgdmVjdG9yczogbnVtYmVyW11bXSxcbiAgY2h1bmtzOiBDaHVua1tdLFxuICBudW1DbHVzdGVycyA9IDgsXG4pIHtcbiAgY29uc29sZS5kZWJ1ZyhcIlJ1bm5pbmcgSy1tZWFucyBjbHVzdGVyaW5nXCIsIHtcbiAgICB2ZWN0b3JzOiB2ZWN0b3JzLmxlbmd0aCxcbiAgICBudW1DbHVzdGVycyxcbiAgfSk7XG5cbiAgaWYgKGNodW5rcy5sZW5ndGggIT09IHZlY3RvcnMubGVuZ3RoKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQ2h1bmtzIGFuZCB2ZWN0b3JzIHNob3VsZCBoYXZlIHRoZSBzYW1lIGxlbmd0aC5cIik7XG4gIH1cblxuICBjb25zdCByZXN1bHQgPSBrbWVhbnModmVjdG9ycywgbnVtQ2x1c3RlcnMsIHt9KTtcbiAgY29uc3QgcmVzID0gcmVzdWx0LmNvbXB1dGVJbmZvcm1hdGlvbih2ZWN0b3JzKTtcblxuICAvLyBFeHRyYWN0IHJlcHJlc2VudGF0aXZlIGNodW5rIGZvciBlYWNoIGNsdXN0ZXJcbiAgY29uc3QgcmVwcmVzZW50YXRpdmVzOiBDaHVua1tdID0gW107XG5cbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBudW1DbHVzdGVyczsgaSsrKSB7XG4gICAgY29uc3QgY2VudHJvaWQgPSByZXNbaV0hLmNlbnRyb2lkO1xuICAgIGxldCBjbG9zZXN0RGlzdGFuY2UgPSBJbmZpbml0eTtcbiAgICBsZXQgY2xvc2VzdEluZGV4ID0gLTE7XG5cbiAgICAvLyBGaW5kIHRoZSBjbG9zZXN0IHZlY3RvciB0byB0aGUgY2VudHJvaWRcbiAgICBmb3IgKGxldCBqID0gMDsgaiA8IHZlY3RvcnMubGVuZ3RoOyBqKyspIHtcbiAgICAgIGlmIChyZXN1bHQuY2x1c3RlcnNbal0gPT09IGkpIHtcbiAgICAgICAgY29uc3QgZGlzdGFuY2UgPSBub3JtMihzdWIoY2VudHJvaWQsIHZlY3RvcnNbal0hKSk7XG4gICAgICAgIGlmIChkaXN0YW5jZSA8IGNsb3Nlc3REaXN0YW5jZSkge1xuICAgICAgICAgIGNsb3Nlc3REaXN0YW5jZSA9IGRpc3RhbmNlO1xuICAgICAgICAgIGNsb3Nlc3RJbmRleCA9IGo7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoY2xvc2VzdEluZGV4ICE9PSAtMSkge1xuICAgICAgcmVwcmVzZW50YXRpdmVzLnB1c2goY2h1bmtzW2Nsb3Nlc3RJbmRleF0hKTtcbiAgICB9XG4gIH1cblxuICBjb25zb2xlLmRlYnVnKFwiUmVwcmVzZW50YXRpdmUgY2h1bmtzIGZvdW5kXCIsIHJlcHJlc2VudGF0aXZlcy5sZW5ndGgpO1xuXG4gIHJldHVybiByZXByZXNlbnRhdGl2ZXM7XG59XG4iXSwibmFtZXMiOlsia21lYW5zIiwibm9ybTIiLCJzdWIiLCJydW5LbWVhbnMiLCJ2ZWN0b3JzIiwiY2h1bmtzIiwibnVtQ2x1c3RlcnMiLCJjb25zb2xlIiwiZGVidWciLCJsZW5ndGgiLCJFcnJvciIsInJlc3VsdCIsInJlcyIsImNvbXB1dGVJbmZvcm1hdGlvbiIsInJlcHJlc2VudGF0aXZlcyIsImkiLCJjZW50cm9pZCIsImNsb3Nlc3REaXN0YW5jZSIsIkluZmluaXR5IiwiY2xvc2VzdEluZGV4IiwiaiIsImNsdXN0ZXJzIiwiZGlzdGFuY2UiLCJwdXNoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./src/server/utils/ai-helpers/runKmeans.ts\n");

/***/ }),

/***/ "(api)/./src/server/utils/ai.ts":
/*!********************************!*\
  !*** ./src/server/utils/ai.ts ***!
  \********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   legacySummarizeText: () => (/* binding */ legacySummarizeText),\n/* harmony export */   promptText: () => (/* binding */ promptText),\n/* harmony export */   summarizeText: () => (/* binding */ summarizeText)\n/* harmony export */ });\n/* harmony import */ var langchain_chat_models_openai__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! langchain/chat_models/openai */ \"langchain/chat_models/openai\");\n/* harmony import */ var langchain_embeddings_openai__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! langchain/embeddings/openai */ \"langchain/embeddings/openai\");\n/* harmony import */ var langchain_text_splitter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! langchain/text_splitter */ \"langchain/text_splitter\");\n/* harmony import */ var langchain_chains__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! langchain/chains */ \"langchain/chains\");\n/* harmony import */ var langchain__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! langchain */ \"langchain\");\n/* harmony import */ var langchain_vectorstores_faiss__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! langchain/vectorstores/faiss */ \"langchain/vectorstores/faiss\");\n/* harmony import */ var _utils_getInfoForLanguage__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ~/utils/getInfoForLanguage */ \"(api)/./src/utils/getInfoForLanguage.ts\");\n/* harmony import */ var _ai_helpers_getEmbeddings__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./ai-helpers/getEmbeddings */ \"(api)/./src/server/utils/ai-helpers/getEmbeddings.ts\");\n/* harmony import */ var _ai_helpers_buildPrompt__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./ai-helpers/buildPrompt */ \"(api)/./src/server/utils/ai-helpers/buildPrompt.ts\");\n/* harmony import */ var _ai_helpers_createChunks__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./ai-helpers/createChunks */ \"(api)/./src/server/utils/ai-helpers/createChunks.ts\");\n/* harmony import */ var _ai_helpers_runKmeans__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./ai-helpers/runKmeans */ \"(api)/./src/server/utils/ai-helpers/runKmeans.ts\");\n/* harmony import */ var _ai_helpers_callOpenAi__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./ai-helpers/callOpenAi */ \"(api)/./src/server/utils/ai-helpers/callOpenAi.ts\");\n/* harmony import */ var _ai_helpers_aiConstants__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./ai-helpers/aiConstants */ \"(api)/./src/server/utils/ai-helpers/aiConstants.ts\");\n/* harmony import */ var _logHelper__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./logHelper */ \"(api)/./src/server/utils/logHelper.ts\");\n/* harmony import */ var _ai_helpers_getModelThatFits__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./ai-helpers/getModelThatFits */ \"(api)/./src/server/utils/ai-helpers/getModelThatFits.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([langchain_chat_models_openai__WEBPACK_IMPORTED_MODULE_0__, langchain_embeddings_openai__WEBPACK_IMPORTED_MODULE_1__, langchain_text_splitter__WEBPACK_IMPORTED_MODULE_2__, langchain_chains__WEBPACK_IMPORTED_MODULE_3__, langchain__WEBPACK_IMPORTED_MODULE_4__, langchain_vectorstores_faiss__WEBPACK_IMPORTED_MODULE_5__, _ai_helpers_getEmbeddings__WEBPACK_IMPORTED_MODULE_7__, _ai_helpers_callOpenAi__WEBPACK_IMPORTED_MODULE_11__]);\n([langchain_chat_models_openai__WEBPACK_IMPORTED_MODULE_0__, langchain_embeddings_openai__WEBPACK_IMPORTED_MODULE_1__, langchain_text_splitter__WEBPACK_IMPORTED_MODULE_2__, langchain_chains__WEBPACK_IMPORTED_MODULE_3__, langchain__WEBPACK_IMPORTED_MODULE_4__, langchain_vectorstores_faiss__WEBPACK_IMPORTED_MODULE_5__, _ai_helpers_getEmbeddings__WEBPACK_IMPORTED_MODULE_7__, _ai_helpers_callOpenAi__WEBPACK_IMPORTED_MODULE_11__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst getSummarizePrompt = (languageCode)=>{\n    const language = (0,_utils_getInfoForLanguage__WEBPACK_IMPORTED_MODULE_6__.getInfoForLanguage)(languageCode);\n    return `Summarize the text.\n    Give preference to more paragraphs over fewer paragraphs, and make them as short as possible.\n    Give the summary a short title.\n    Give your reply in the language ${language?.language} (${language?.code}). \n    Follow strictly the given pattern for the reply, using HTML for formatting:\n\n    <b>Section:</b> [title]<br>\n    <b>Summary:</b> <span>[summary]</span><br>\n`;\n};\nconst getOutlinePrompt = (languageCode)=>{\n    const language = (0,_utils_getInfoForLanguage__WEBPACK_IMPORTED_MODULE_6__.getInfoForLanguage)(languageCode);\n    return `Create an outline for the text.\n    Give the outline a short title and provide bullet points for the key parts of the text.\n    Use a hierarchical structure for the outline.\n    Give your reply in the language ${language?.language} (${language?.code}). \n    Output multiple sections and provide a title for each section, following strictly the format below with HTML for formatting:\n\n    <b>Section:</b> [title]<br>\n    <span>[outline]</span><br>`;\n};\nconst getExplainPrompt = (languageCode)=>{\n    const language = (0,_utils_getInfoForLanguage__WEBPACK_IMPORTED_MODULE_6__.getInfoForLanguage)(languageCode);\n    return `Explain this text like I am 12 years old.\n    Give your reply in the language ${language?.language} (${language?.code}). \n    Follow strictly the given pattern for the reply, using HTML for formatting:\n\n    <b>Section:</b> [title]<br>\n    <span>[explanation]</span><br>`;\n};\nconst getPrompt = (type, languageCode)=>{\n    if (type === \"SUMMARY\") {\n        return getSummarizePrompt(languageCode);\n    } else if (type === \"OUTLINE\") {\n        return getOutlinePrompt(languageCode);\n    } else {\n        return getExplainPrompt(languageCode);\n    }\n};\nasync function summarizeText(text, file, languageCode, type) {\n    const logger = new _logHelper__WEBPACK_IMPORTED_MODULE_13__.FileLogger(file);\n    const question = getPrompt(type, languageCode);\n    const model = (0,_ai_helpers_getModelThatFits__WEBPACK_IMPORTED_MODULE_14__.getModelThatFits)(text, question);\n    if (model) {\n        console.debug(\"Found model that fits text\", model);\n        const prompt = (0,_ai_helpers_buildPrompt__WEBPACK_IMPORTED_MODULE_8__.buildPrompt)([\n            text\n        ], question, model);\n        logger.logToFile(\"single-prompt.txt\", prompt);\n        const openAIResponse = await (0,_ai_helpers_callOpenAi__WEBPACK_IMPORTED_MODULE_11__.callOpenAi)(prompt, logger, model);\n        console.debug(\"OpenAI response\", openAIResponse);\n        return openAIResponse.message;\n    } else {\n        console.debug(\"No model found that fits text\");\n        return summarizeLongText(text, file, languageCode, type);\n    }\n}\nasync function summarizeLongText(text, file, languageCode, type) {\n    const logger = new _logHelper__WEBPACK_IMPORTED_MODULE_13__.FileLogger(file);\n    let tokensUsed = 0;\n    let estimatedCost = 0;\n    const chunks = (0,_ai_helpers_createChunks__WEBPACK_IMPORTED_MODULE_9__.createChunks)(text, file, logger);\n    const { embeddings: vectors, tokensUsed: tokensUsedEmbeddings } = await (0,_ai_helpers_getEmbeddings__WEBPACK_IMPORTED_MODULE_7__.getEmbeddings)(chunks, _ai_helpers_aiConstants__WEBPACK_IMPORTED_MODULE_12__.BATCH_SIZE_FOR_EMBEDDINGS);\n    tokensUsed += tokensUsedEmbeddings;\n    estimatedCost += tokensUsedEmbeddings / 1000 * _ai_helpers_aiConstants__WEBPACK_IMPORTED_MODULE_12__.DEFAULT_EMBEDDING_MODEL_PRICE_PER_1000;\n    const summariesOfBuckets = await getSummariesOfBuckets(chunks, vectors);\n    const finalSummary = compileFinalSummary(summariesOfBuckets);\n    logger.logToFile(\"summary.txt\", `${finalSummary}\\n\\nEstimated cost: ${estimatedCost}\\n\\nTokens used: ${tokensUsed}\\n\\n`);\n    console.debug(\"Final summary\", {\n        tokensUsed,\n        estimatedCost\n    });\n    return finalSummary;\n    // ----------------\n    // Helper Functions\n    // ----------------\n    /**\n   * Retrieves summaries for each bucket of chunks.\n   * @param chunks The text chunks to be summarized.\n   * @param vectors Embeddings corresponding to the chunks.\n   * @returns An array of summaries for each bucket.\n   */ async function getSummariesOfBuckets(chunks, vectors) {\n        const numOfBuckets = Math.ceil(chunks.length / _ai_helpers_aiConstants__WEBPACK_IMPORTED_MODULE_12__.CHUNKS_PER_BUCKET);\n        const orderedSummaries = [];\n        const bucketPromises = Array.from({\n            length: numOfBuckets\n        }).map(async (_, i)=>{\n            const summary = await summarizeBucketUsingKmeans(i, i * _ai_helpers_aiConstants__WEBPACK_IMPORTED_MODULE_12__.CHUNKS_PER_BUCKET, chunks, vectors, {\n                includeFirstChunk: true,\n                includeLastChunk: true\n            });\n            // Insert the summary at the correct index in the ordered array of summaries.\n            orderedSummaries[i] = summary;\n        });\n        await Promise.all(bucketPromises);\n        logger.logToFile(`ordered-summaries.txt`, JSON.stringify(orderedSummaries, null, 2));\n        return orderedSummaries;\n    }\n    /**\n   * Summarizes a specific bucket of chunks.\n   * @param numBucket The bucket number.\n   * @param start The start index for the chunks.\n   * @param chunks The text chunks to be summarized.\n   * @param vectors Embeddings corresponding to the chunks.\n   * @returns A summary for the specific bucket.\n   */ async function summarizeBucketUsingKmeans(numBucket, start, chunks, vectors, options) {\n        console.debug(\"Summarizing bucket using K-means\", numBucket, options);\n        const bucketOfChunks = chunks.slice(start, start + _ai_helpers_aiConstants__WEBPACK_IMPORTED_MODULE_12__.CHUNKS_PER_BUCKET);\n        const bucketOfVectors = vectors.slice(start, start + _ai_helpers_aiConstants__WEBPACK_IMPORTED_MODULE_12__.CHUNKS_PER_BUCKET);\n        let numClusters = _ai_helpers_aiConstants__WEBPACK_IMPORTED_MODULE_12__.NUM_REPRESENTATIVES_CHUNKS_PER_BUCKET;\n        const v = [\n            ...bucketOfVectors\n        ];\n        const c = [\n            ...bucketOfChunks\n        ];\n        if (options?.includeFirstChunk) {\n            numClusters -= 1;\n            v.shift();\n            c.shift();\n        }\n        if (options?.includeLastChunk) {\n            numClusters -= 1;\n            v.pop();\n            c.pop();\n        }\n        let bucketRepresentatives = bucketOfChunks;\n        if (numClusters < v.length) {\n            bucketRepresentatives = (0,_ai_helpers_runKmeans__WEBPACK_IMPORTED_MODULE_10__.runKmeans)(v, c, numClusters);\n            if (options?.includeFirstChunk) {\n                bucketRepresentatives.unshift(bucketOfChunks[0]);\n            }\n            if (options?.includeLastChunk) {\n                bucketRepresentatives.push(bucketOfChunks[bucketOfChunks.length - 1]);\n            }\n            // Order the representatives by their position in the original text.\n            bucketRepresentatives.sort((a, b)=>a.start - b.start);\n        }\n        const representativesTexts = bucketRepresentatives.map((match)=>match.text);\n        logger.logToFile(`chunks-representatives-${numBucket}.txt`, JSON.stringify(bucketRepresentatives, null, 2));\n        const prompt = (0,_ai_helpers_buildPrompt__WEBPACK_IMPORTED_MODULE_8__.buildPrompt)(representativesTexts, getPrompt(type, languageCode));\n        const { message, tokensUsed: tokensUsedInCall, estimatedPricing: ep } = await (0,_ai_helpers_callOpenAi__WEBPACK_IMPORTED_MODULE_11__.callOpenAi)(prompt, logger);\n        tokensUsed += tokensUsedInCall;\n        estimatedCost += ep;\n        logger.logToFile(`summaries-representative-${numBucket}.txt`, message);\n        return message;\n    }\n    /**\n   * Compiles the final summary from all bucket summaries.\n   * @param summaries The summaries of all buckets.\n   * @returns The final summarized text.\n   */ function compileFinalSummary(summaries) {\n        console.debug(\"Compiling final summary\");\n        const mergedSummaries = summaries.join(\"\\n\\n\");\n        return mergedSummaries;\n    }\n}\nasync function promptText(text, prompt, chatHistory) {\n    // Create the text splitter and split the text into chunks\n    const textSplitter = new langchain_text_splitter__WEBPACK_IMPORTED_MODULE_2__.RecursiveCharacterTextSplitter({\n        chunkSize: 1000,\n        chunkOverlap: 200\n    });\n    const texts = await textSplitter.createDocuments([\n        text\n    ]);\n    // Create the in-memory vector index and retriever\n    const vectorIndex = await langchain_vectorstores_faiss__WEBPACK_IMPORTED_MODULE_5__.FaissStore.fromDocuments(texts, new langchain_embeddings_openai__WEBPACK_IMPORTED_MODULE_1__.OpenAIEmbeddings());\n    const retriever = vectorIndex.asRetriever({\n        k: 6,\n        searchType: \"similarity\"\n    });\n    // Create the conversational interface\n    const convInterface = langchain_chains__WEBPACK_IMPORTED_MODULE_3__.ConversationalRetrievalQAChain.fromLLM(new langchain_chat_models_openai__WEBPACK_IMPORTED_MODULE_0__.ChatOpenAI({\n        modelName: _ai_helpers_aiConstants__WEBPACK_IMPORTED_MODULE_12__.DEFAULT_AI_MODEL.model,\n        temperature: 0\n    }), retriever, {\n        verbose: true\n    });\n    const strChatHistory = chatHistory?.map((message)=>{\n        return `Human: ${message.question}\\nAssistant: ${message.answer}`;\n    }).join(\"\\n\") ?? \"\";\n    // Create the chat history and query\n    console.debug(\"Prompting OpenAI\", prompt, strChatHistory);\n    const timeNow = new Date().getTime();\n    const result = await convInterface.call({\n        question: prompt,\n        chat_history: strChatHistory\n    });\n    console.debug(\"OpenAI took\", new Date().getTime() - timeNow, \"ms\");\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n    return result.text;\n}\nasync function legacySummarizeText(text, languageCode, type) {\n    console.debug(\"Summarizing text\", text.length, type);\n    // Create the text splitter and split the text into chunks\n    const textSplitter = new langchain_text_splitter__WEBPACK_IMPORTED_MODULE_2__.RecursiveCharacterTextSplitter({\n        chunkSize: 1000\n    });\n    const texts = await textSplitter.createDocuments([\n        text\n    ]);\n    const model = new langchain__WEBPACK_IMPORTED_MODULE_4__.OpenAI({\n        modelName: \"gpt-3.5-turbo-16k\",\n        temperature: 0\n    });\n    const languageInfo = (0,_utils_getInfoForLanguage__WEBPACK_IMPORTED_MODULE_6__.getInfoForLanguage)(languageCode);\n    const language = `${languageInfo?.language} (${languageInfo?.code})`;\n    if (!languageInfo) {\n        throw new Error(`Language ${languageCode} not found`);\n    }\n    // Prompt used to summarize each chunk of the text\n    const MAP_CUSTOM_PROMPT = `\n      Summarize the following text in a clear and concise way in ${language}.\n      Text: {text}\n      Brief Summary:\n  `;\n    const mapPromptTemplate = new langchain__WEBPACK_IMPORTED_MODULE_4__.PromptTemplate({\n        template: MAP_CUSTOM_PROMPT,\n        inputVariables: [\n            \"text\"\n        ]\n    });\n    // Prompt used to combine the summaries created with the prompt above\n    const COMBINE_CUSTOM_PROMPT_SUMMARY = `\n    Generate a summary of the following text in ${language}.\n    Make sure the summary includes the following elements:\n\n    * An introduction paragraph that provides an overview of the topic.\n    * Bullet points that list the key points of the text.\n    * A conclusion paragraph that summarizes the main points of the text.\n\n    Text: {text}\n`;\n    const COMBINE_CUSTOM_PROMPT_OUTLINE = `\n    Generate an outline of the following text in ${language}.\n    The outline should consist of sections.\n    Each section should consist of a title that represents the main idea of the section.\n    Each section should also consist of bullet points that list the key points of the section.\n\n    Text: {text}\n`;\n    const combinePromptTemplate = new langchain__WEBPACK_IMPORTED_MODULE_4__.PromptTemplate({\n        template: type === \"summary\" ? COMBINE_CUSTOM_PROMPT_SUMMARY : COMBINE_CUSTOM_PROMPT_OUTLINE,\n        inputVariables: [\n            \"text\"\n        ]\n    });\n    console.debug(\"Loading summarization chain\");\n    const chain = (0,langchain_chains__WEBPACK_IMPORTED_MODULE_3__.loadSummarizationChain)(model, {\n        type: \"map_reduce\",\n        combineMapPrompt: mapPromptTemplate,\n        combinePrompt: combinePromptTemplate\n    });\n    console.debug(\"Summarizing w/ OpenAI\");\n    const timeNow = new Date().getTime();\n    const res = await chain.call({\n        input_documents: texts\n    });\n    console.debug(\"OpenAI took\", new Date().getTime() - timeNow, \"ms\");\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n    return res.text;\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./src/server/utils/ai.ts\n");

/***/ }),

/***/ "(api)/./src/server/utils/extractPagesFromFileText.ts":
/*!******************************************************!*\
  !*** ./src/server/utils/extractPagesFromFileText.ts ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   extractPagesFromFileText: () => (/* binding */ extractPagesFromFileText)\n/* harmony export */ });\nfunction extractPagesFromFileText(text, pageStart, pageEnd) {\n    console.debug(\"Extracting pages from file text\", {\n        pageStart,\n        pageEnd\n    });\n    // Check if the text doesn't have any [[page X]] headers. If not, return the entire text.\n    if (!/\\[\\[page \\d+\\]\\]/.test(text)) {\n        return text;\n    }\n    // Split the text using the page headers as delimiters.\n    // This regex captures content between [[page X]] headers. It also ensures capturing the last page.\n    const pages = text.split(/\\[\\[page \\d+\\]\\]\\n?/).filter(Boolean);\n    if (pageStart === undefined || pageEnd === undefined) {\n        // If neither pageStart nor pageEnd is specified, return the concatenated pages.\n        return pages.join(\"\\n\");\n    } else {\n        // Adjust the indices for zero-based array indexing\n        pageStart -= 1;\n        // Extract the relevant pages and concatenate them.\n        return pages.slice(pageStart, pageEnd + 1).join(\"\\n\");\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvc2VydmVyL3V0aWxzL2V4dHJhY3RQYWdlc0Zyb21GaWxlVGV4dC50cyIsIm1hcHBpbmdzIjoiOzs7O0FBQU8sU0FBU0EseUJBQ2RDLElBQVksRUFDWkMsU0FBa0IsRUFDbEJDLE9BQWdCO0lBRWhCQyxRQUFRQyxLQUFLLENBQUMsbUNBQW1DO1FBQUVIO1FBQVdDO0lBQVE7SUFFdEUseUZBQXlGO0lBQ3pGLElBQUksQ0FBQyxtQkFBbUJHLElBQUksQ0FBQ0wsT0FBTztRQUNsQyxPQUFPQTtJQUNUO0lBRUEsdURBQXVEO0lBQ3ZELG1HQUFtRztJQUNuRyxNQUFNTSxRQUFRTixLQUFLTyxLQUFLLENBQUMsdUJBQXVCQyxNQUFNLENBQUNDO0lBRXZELElBQUlSLGNBQWNTLGFBQWFSLFlBQVlRLFdBQVc7UUFDcEQsZ0ZBQWdGO1FBQ2hGLE9BQU9KLE1BQU1LLElBQUksQ0FBQztJQUNwQixPQUFPO1FBQ0wsbURBQW1EO1FBQ25EVixhQUFhO1FBRWIsbURBQW1EO1FBQ25ELE9BQU9LLE1BQU1NLEtBQUssQ0FBQ1gsV0FBV0MsVUFBVSxHQUFHUyxJQUFJLENBQUM7SUFDbEQ7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2xlYXJuLWFpLy4vc3JjL3NlcnZlci91dGlscy9leHRyYWN0UGFnZXNGcm9tRmlsZVRleHQudHM/ZTFlYyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gZXh0cmFjdFBhZ2VzRnJvbUZpbGVUZXh0KFxuICB0ZXh0OiBzdHJpbmcsXG4gIHBhZ2VTdGFydD86IG51bWJlcixcbiAgcGFnZUVuZD86IG51bWJlcixcbik6IHN0cmluZyB7XG4gIGNvbnNvbGUuZGVidWcoXCJFeHRyYWN0aW5nIHBhZ2VzIGZyb20gZmlsZSB0ZXh0XCIsIHsgcGFnZVN0YXJ0LCBwYWdlRW5kIH0pO1xuXG4gIC8vIENoZWNrIGlmIHRoZSB0ZXh0IGRvZXNuJ3QgaGF2ZSBhbnkgW1twYWdlIFhdXSBoZWFkZXJzLiBJZiBub3QsIHJldHVybiB0aGUgZW50aXJlIHRleHQuXG4gIGlmICghL1xcW1xcW3BhZ2UgXFxkK1xcXVxcXS8udGVzdCh0ZXh0KSkge1xuICAgIHJldHVybiB0ZXh0O1xuICB9XG5cbiAgLy8gU3BsaXQgdGhlIHRleHQgdXNpbmcgdGhlIHBhZ2UgaGVhZGVycyBhcyBkZWxpbWl0ZXJzLlxuICAvLyBUaGlzIHJlZ2V4IGNhcHR1cmVzIGNvbnRlbnQgYmV0d2VlbiBbW3BhZ2UgWF1dIGhlYWRlcnMuIEl0IGFsc28gZW5zdXJlcyBjYXB0dXJpbmcgdGhlIGxhc3QgcGFnZS5cbiAgY29uc3QgcGFnZXMgPSB0ZXh0LnNwbGl0KC9cXFtcXFtwYWdlIFxcZCtcXF1cXF1cXG4/LykuZmlsdGVyKEJvb2xlYW4pO1xuXG4gIGlmIChwYWdlU3RhcnQgPT09IHVuZGVmaW5lZCB8fCBwYWdlRW5kID09PSB1bmRlZmluZWQpIHtcbiAgICAvLyBJZiBuZWl0aGVyIHBhZ2VTdGFydCBub3IgcGFnZUVuZCBpcyBzcGVjaWZpZWQsIHJldHVybiB0aGUgY29uY2F0ZW5hdGVkIHBhZ2VzLlxuICAgIHJldHVybiBwYWdlcy5qb2luKFwiXFxuXCIpO1xuICB9IGVsc2Uge1xuICAgIC8vIEFkanVzdCB0aGUgaW5kaWNlcyBmb3IgemVyby1iYXNlZCBhcnJheSBpbmRleGluZ1xuICAgIHBhZ2VTdGFydCAtPSAxO1xuXG4gICAgLy8gRXh0cmFjdCB0aGUgcmVsZXZhbnQgcGFnZXMgYW5kIGNvbmNhdGVuYXRlIHRoZW0uXG4gICAgcmV0dXJuIHBhZ2VzLnNsaWNlKHBhZ2VTdGFydCwgcGFnZUVuZCArIDEpLmpvaW4oXCJcXG5cIik7XG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJleHRyYWN0UGFnZXNGcm9tRmlsZVRleHQiLCJ0ZXh0IiwicGFnZVN0YXJ0IiwicGFnZUVuZCIsImNvbnNvbGUiLCJkZWJ1ZyIsInRlc3QiLCJwYWdlcyIsInNwbGl0IiwiZmlsdGVyIiwiQm9vbGVhbiIsInVuZGVmaW5lZCIsImpvaW4iLCJzbGljZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./src/server/utils/extractPagesFromFileText.ts\n");

/***/ }),

/***/ "(api)/./src/server/utils/extractPdf.ts":
/*!****************************************!*\
  !*** ./src/server/utils/extractPdf.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   extractPdf: () => (/* binding */ extractPdf)\n/* harmony export */ });\n/* harmony import */ var pdf_parse__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! pdf-parse */ \"pdf-parse\");\n/* harmony import */ var pdf_parse__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(pdf_parse__WEBPACK_IMPORTED_MODULE_0__);\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */ /* eslint-disable @typescript-eslint/no-explicit-any */ /* eslint-disable @typescript-eslint/no-unsafe-call */ /* eslint-disable @typescript-eslint/no-unsafe-member-access */ /* eslint-disable @typescript-eslint/no-unsafe-return */ \nasync function extractPdf(buffer) {\n    let currPage = 0;\n    const thePdf = await pdf_parse__WEBPACK_IMPORTED_MODULE_0___default()(buffer, {\n        // From: https://gitlab.com/fwiwDev/pdf-extraction/-/blob/master/lib/pdf-extraction.js?ref_type=heads\n        pagerender (pageData) {\n            const renderOptions = {\n                normalizeWhitespace: false,\n                disableCombineTextItems: false\n            };\n            return pageData.getTextContent(renderOptions).then((textContent)=>{\n                currPage += 1;\n                let lastY, text = \"\";\n                for (const item of textContent.items){\n                    if (lastY == item.transform[5] || !lastY) {\n                        text += item.str;\n                    } else {\n                        text += \"\\n\" + item.str;\n                    }\n                    lastY = item.transform[5];\n                }\n                if (text) return `[[page ${currPage}]]\\n${text}`;\n                return text;\n            });\n        }\n    });\n    return {\n        text: thePdf.text,\n        numPages: currPage\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvc2VydmVyL3V0aWxzL2V4dHJhY3RQZGYudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsMERBQTBELEdBQzFELHFEQUFxRCxHQUNyRCxvREFBb0QsR0FDcEQsNkRBQTZELEdBQzdELHNEQUFzRCxHQUMxQjtBQUVyQixlQUFlQyxXQUFXQyxNQUFjO0lBQzdDLElBQUlDLFdBQVc7SUFFZixNQUFNQyxTQUFTLE1BQU1KLGdEQUFHQSxDQUFDRSxRQUFRO1FBQy9CLHFHQUFxRztRQUNyR0csWUFBV0MsUUFBUTtZQUNqQixNQUFNQyxnQkFBZ0I7Z0JBQ3BCQyxxQkFBcUI7Z0JBQ3JCQyx5QkFBeUI7WUFDM0I7WUFFQSxPQUFPSCxTQUFTSSxjQUFjLENBQUNILGVBQWVJLElBQUksQ0FBQyxDQUFDQztnQkFDbERULFlBQVk7Z0JBRVosSUFBSVUsT0FDRkMsT0FBTztnQkFFVCxLQUFLLE1BQU1DLFFBQVFILFlBQVlJLEtBQUssQ0FBRTtvQkFDcEMsSUFBSUgsU0FBU0UsS0FBS0UsU0FBUyxDQUFDLEVBQUUsSUFBSSxDQUFDSixPQUFPO3dCQUN4Q0MsUUFBUUMsS0FBS0csR0FBRztvQkFDbEIsT0FBTzt3QkFDTEosUUFBUSxPQUFPQyxLQUFLRyxHQUFHO29CQUN6QjtvQkFDQUwsUUFBUUUsS0FBS0UsU0FBUyxDQUFDLEVBQUU7Z0JBQzNCO2dCQUVBLElBQUlILE1BQU0sT0FBTyxDQUFDLE9BQU8sRUFBRVgsU0FBUyxJQUFJLEVBQUVXLEtBQUssQ0FBQztnQkFDaEQsT0FBT0E7WUFDVDtRQUNGO0lBQ0Y7SUFFQSxPQUFPO1FBQUVBLE1BQU1WLE9BQU9VLElBQUk7UUFBRUssVUFBVWhCO0lBQVM7QUFDakQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWFybi1haS8uL3NyYy9zZXJ2ZXIvdXRpbHMvZXh0cmFjdFBkZi50cz8wZGRhIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnNhZmUtYXNzaWdubWVudCAqL1xuLyogZXNsaW50LWRpc2FibGUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueSAqL1xuLyogZXNsaW50LWRpc2FibGUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVuc2FmZS1jYWxsICovXG4vKiBlc2xpbnQtZGlzYWJsZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW5zYWZlLW1lbWJlci1hY2Nlc3MgKi9cbi8qIGVzbGludC1kaXNhYmxlIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnNhZmUtcmV0dXJuICovXG5pbXBvcnQgcGRmIGZyb20gXCJwZGYtcGFyc2VcIjtcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGV4dHJhY3RQZGYoYnVmZmVyOiBCdWZmZXIpIHtcbiAgbGV0IGN1cnJQYWdlID0gMDtcblxuICBjb25zdCB0aGVQZGYgPSBhd2FpdCBwZGYoYnVmZmVyLCB7XG4gICAgLy8gRnJvbTogaHR0cHM6Ly9naXRsYWIuY29tL2Z3aXdEZXYvcGRmLWV4dHJhY3Rpb24vLS9ibG9iL21hc3Rlci9saWIvcGRmLWV4dHJhY3Rpb24uanM/cmVmX3R5cGU9aGVhZHNcbiAgICBwYWdlcmVuZGVyKHBhZ2VEYXRhKSB7XG4gICAgICBjb25zdCByZW5kZXJPcHRpb25zID0ge1xuICAgICAgICBub3JtYWxpemVXaGl0ZXNwYWNlOiBmYWxzZSxcbiAgICAgICAgZGlzYWJsZUNvbWJpbmVUZXh0SXRlbXM6IGZhbHNlLFxuICAgICAgfTtcblxuICAgICAgcmV0dXJuIHBhZ2VEYXRhLmdldFRleHRDb250ZW50KHJlbmRlck9wdGlvbnMpLnRoZW4oKHRleHRDb250ZW50OiBhbnkpID0+IHtcbiAgICAgICAgY3VyclBhZ2UgKz0gMTtcblxuICAgICAgICBsZXQgbGFzdFksXG4gICAgICAgICAgdGV4dCA9IFwiXCI7XG5cbiAgICAgICAgZm9yIChjb25zdCBpdGVtIG9mIHRleHRDb250ZW50Lml0ZW1zKSB7XG4gICAgICAgICAgaWYgKGxhc3RZID09IGl0ZW0udHJhbnNmb3JtWzVdIHx8ICFsYXN0WSkge1xuICAgICAgICAgICAgdGV4dCArPSBpdGVtLnN0cjtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGV4dCArPSBcIlxcblwiICsgaXRlbS5zdHI7XG4gICAgICAgICAgfVxuICAgICAgICAgIGxhc3RZID0gaXRlbS50cmFuc2Zvcm1bNV07XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodGV4dCkgcmV0dXJuIGBbW3BhZ2UgJHtjdXJyUGFnZX1dXVxcbiR7dGV4dH1gO1xuICAgICAgICByZXR1cm4gdGV4dDtcbiAgICAgIH0pO1xuICAgIH0sXG4gIH0pO1xuXG4gIHJldHVybiB7IHRleHQ6IHRoZVBkZi50ZXh0LCBudW1QYWdlczogY3VyclBhZ2UgfTtcbn1cbiJdLCJuYW1lcyI6WyJwZGYiLCJleHRyYWN0UGRmIiwiYnVmZmVyIiwiY3VyclBhZ2UiLCJ0aGVQZGYiLCJwYWdlcmVuZGVyIiwicGFnZURhdGEiLCJyZW5kZXJPcHRpb25zIiwibm9ybWFsaXplV2hpdGVzcGFjZSIsImRpc2FibGVDb21iaW5lVGV4dEl0ZW1zIiwiZ2V0VGV4dENvbnRlbnQiLCJ0aGVuIiwidGV4dENvbnRlbnQiLCJsYXN0WSIsInRleHQiLCJpdGVtIiwiaXRlbXMiLCJ0cmFuc2Zvcm0iLCJzdHIiLCJudW1QYWdlcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./src/server/utils/extractPdf.ts\n");

/***/ }),

/***/ "(api)/./src/server/utils/logHelper.ts":
/*!***************************************!*\
  !*** ./src/server/utils/logHelper.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FileLogger: () => (/* binding */ FileLogger)\n/* harmony export */ });\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_1__);\n\n\nclass FileLogger {\n    constructor(uid){\n        this.uid = uid;\n        this.outputPath = \"\";\n        if (process.env.LOG_SUMMARIES_LOCALLY && !fs__WEBPACK_IMPORTED_MODULE_0___default().existsSync(this.outputPath)) {\n            this.outputPath = path__WEBPACK_IMPORTED_MODULE_1___default().join(\"output\", `${this.uid}`, `${Date.now()}`);\n            fs__WEBPACK_IMPORTED_MODULE_0___default().mkdirSync(this.outputPath, {\n                recursive: true\n            });\n        }\n    }\n    logToFile(filename, message) {\n        if (!process.env.LOG_SUMMARIES_LOCALLY) return;\n        fs__WEBPACK_IMPORTED_MODULE_0___default().appendFile(path__WEBPACK_IMPORTED_MODULE_1___default().join(this.outputPath, filename), `${message}\\n`, (err)=>{\n            if (err) throw err;\n            console.log(`Logged to ${filename}`);\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvc2VydmVyL3V0aWxzL2xvZ0hlbHBlci50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFvQjtBQUNJO0FBRWpCLE1BQU1FO0lBSVhDLFlBQVlDLEdBQVcsQ0FBRTtRQUN2QixJQUFJLENBQUNBLEdBQUcsR0FBR0E7UUFDWCxJQUFJLENBQUNDLFVBQVUsR0FBRztRQUVsQixJQUFJQyxRQUFRQyxHQUFHLENBQUNDLHFCQUFxQixJQUFJLENBQUNSLG9EQUFhLENBQUMsSUFBSSxDQUFDSyxVQUFVLEdBQUc7WUFDeEUsSUFBSSxDQUFDQSxVQUFVLEdBQUdKLGdEQUFTLENBQUMsVUFBVSxDQUFDLEVBQUUsSUFBSSxDQUFDRyxHQUFHLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRU8sS0FBS0MsR0FBRyxHQUFHLENBQUM7WUFDcEVaLG1EQUFZLENBQUMsSUFBSSxDQUFDSyxVQUFVLEVBQUU7Z0JBQUVTLFdBQVc7WUFBSztRQUNsRDtJQUNGO0lBRUFDLFVBQVVDLFFBQWdCLEVBQUVDLE9BQWUsRUFBRTtRQUMzQyxJQUFJLENBQUNYLFFBQVFDLEdBQUcsQ0FBQ0MscUJBQXFCLEVBQUU7UUFFeENSLG9EQUFhLENBQ1hDLGdEQUFTLENBQUMsSUFBSSxDQUFDSSxVQUFVLEVBQUVXLFdBQzNCLENBQUMsRUFBRUMsUUFBUSxFQUFFLENBQUMsRUFDZCxDQUFDRTtZQUNDLElBQUlBLEtBQUssTUFBTUE7WUFDZkMsUUFBUUMsR0FBRyxDQUFDLENBQUMsVUFBVSxFQUFFTCxTQUFTLENBQUM7UUFDckM7SUFFSjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVhcm4tYWkvLi9zcmMvc2VydmVyL3V0aWxzL2xvZ0hlbHBlci50cz81Yzc0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBmcyBmcm9tIFwiZnNcIjtcbmltcG9ydCBwYXRoIGZyb20gXCJwYXRoXCI7XG5cbmV4cG9ydCBjbGFzcyBGaWxlTG9nZ2VyIHtcbiAgcmVhZG9ubHkgdWlkOiBzdHJpbmc7XG4gIHJlYWRvbmx5IG91dHB1dFBhdGg6IHN0cmluZztcblxuICBjb25zdHJ1Y3Rvcih1aWQ6IHN0cmluZykge1xuICAgIHRoaXMudWlkID0gdWlkO1xuICAgIHRoaXMub3V0cHV0UGF0aCA9IFwiXCI7XG5cbiAgICBpZiAocHJvY2Vzcy5lbnYuTE9HX1NVTU1BUklFU19MT0NBTExZICYmICFmcy5leGlzdHNTeW5jKHRoaXMub3V0cHV0UGF0aCkpIHtcbiAgICAgIHRoaXMub3V0cHV0UGF0aCA9IHBhdGguam9pbihcIm91dHB1dFwiLCBgJHt0aGlzLnVpZH1gLCBgJHtEYXRlLm5vdygpfWApO1xuICAgICAgZnMubWtkaXJTeW5jKHRoaXMub3V0cHV0UGF0aCwgeyByZWN1cnNpdmU6IHRydWUgfSk7XG4gICAgfVxuICB9XG5cbiAgbG9nVG9GaWxlKGZpbGVuYW1lOiBzdHJpbmcsIG1lc3NhZ2U6IHN0cmluZykge1xuICAgIGlmICghcHJvY2Vzcy5lbnYuTE9HX1NVTU1BUklFU19MT0NBTExZKSByZXR1cm47XG5cbiAgICBmcy5hcHBlbmRGaWxlKFxuICAgICAgcGF0aC5qb2luKHRoaXMub3V0cHV0UGF0aCwgZmlsZW5hbWUpLFxuICAgICAgYCR7bWVzc2FnZX1cXG5gLFxuICAgICAgKGVycikgPT4ge1xuICAgICAgICBpZiAoZXJyKSB0aHJvdyBlcnI7XG4gICAgICAgIGNvbnNvbGUubG9nKGBMb2dnZWQgdG8gJHtmaWxlbmFtZX1gKTtcbiAgICAgIH0sXG4gICAgKTtcbiAgfVxufVxuIl0sIm5hbWVzIjpbImZzIiwicGF0aCIsIkZpbGVMb2dnZXIiLCJjb25zdHJ1Y3RvciIsInVpZCIsIm91dHB1dFBhdGgiLCJwcm9jZXNzIiwiZW52IiwiTE9HX1NVTU1BUklFU19MT0NBTExZIiwiZXhpc3RzU3luYyIsImpvaW4iLCJEYXRlIiwibm93IiwibWtkaXJTeW5jIiwicmVjdXJzaXZlIiwibG9nVG9GaWxlIiwiZmlsZW5hbWUiLCJtZXNzYWdlIiwiYXBwZW5kRmlsZSIsImVyciIsImNvbnNvbGUiLCJsb2ciXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./src/server/utils/logHelper.ts\n");

/***/ }),

/***/ "(api)/./src/utils/constants.ts":
/*!********************************!*\
  !*** ./src/utils/constants.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   APP_NAME: () => (/* binding */ APP_NAME),\n/* harmony export */   COINS_PER_BUNDLE: () => (/* binding */ COINS_PER_BUNDLE),\n/* harmony export */   COINS_PER_MONTH: () => (/* binding */ COINS_PER_MONTH),\n/* harmony export */   INITIAL_COINS: () => (/* binding */ INITIAL_COINS)\n/* harmony export */ });\nconst APP_NAME = \"Resumito\";\nconst INITIAL_COINS = 5;\nconst COINS_PER_MONTH = 50;\nconst COINS_PER_BUNDLE = 50;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvdXRpbHMvY29uc3RhbnRzLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBTyxNQUFNQSxXQUFXLFdBQVc7QUFFNUIsTUFBTUMsZ0JBQWdCLEVBQUU7QUFDeEIsTUFBTUMsa0JBQWtCLEdBQUc7QUFDM0IsTUFBTUMsbUJBQW1CLEdBQUciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWFybi1haS8uL3NyYy91dGlscy9jb25zdGFudHMudHM/MDU4OCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgQVBQX05BTUUgPSBcIlJlc3VtaXRvXCI7XG5cbmV4cG9ydCBjb25zdCBJTklUSUFMX0NPSU5TID0gNTtcbmV4cG9ydCBjb25zdCBDT0lOU19QRVJfTU9OVEggPSA1MDtcbmV4cG9ydCBjb25zdCBDT0lOU19QRVJfQlVORExFID0gNTA7XG4iXSwibmFtZXMiOlsiQVBQX05BTUUiLCJJTklUSUFMX0NPSU5TIiwiQ09JTlNfUEVSX01PTlRIIiwiQ09JTlNfUEVSX0JVTkRMRSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./src/utils/constants.ts\n");

/***/ }),

/***/ "(api)/./src/utils/costs.ts":
/*!****************************!*\
  !*** ./src/utils/costs.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getCostBySummaryTypeAndPages: () => (/* binding */ getCostBySummaryTypeAndPages),\n/* harmony export */   getCostUploadByFileType: () => (/* binding */ getCostUploadByFileType)\n/* harmony export */ });\nconst PRICE_SUMMARY_PER_100_PAGES = 0.15;\nconst PRICE_PER_COIN = 0.1;\nconst PROFIT_MARGIN = 1.5;\nconst getPriceInCoinsWithProfitMargin = (price)=>{\n    return Math.ceil(Math.ceil(price / PRICE_PER_COIN) * PROFIT_MARGIN);\n};\nconst getCostBySummaryTypeAndPages = (summaryType, pageStart, pageEnd)=>{\n    const pages = pageEnd && pageStart ? pageEnd - pageStart : undefined;\n    if (pages) {\n        return getPriceInCoinsWithProfitMargin(pages / 100 * PRICE_SUMMARY_PER_100_PAGES);\n    } else {\n        return getPriceInCoinsWithProfitMargin(PRICE_SUMMARY_PER_100_PAGES);\n    }\n};\nconst AUDIO_TRANSCRIBE_COST_PER_MINUTE = 0.024;\nconst getCostUploadByFileType = (fileType, options)=>{\n    if (fileType.includes(\"image\")) return 2;\n    if (fileType.includes(\"audio\")) {\n        const duration = options?.audioDurationInSeconds;\n        if (!duration) throw new Error(\"Audio duration is required\");\n        return getPriceInCoinsWithProfitMargin(AUDIO_TRANSCRIBE_COST_PER_MINUTE * (duration / 60));\n    }\n    return 0;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvdXRpbHMvY29zdHMudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFFQSxNQUFNQSw4QkFBOEI7QUFDcEMsTUFBTUMsaUJBQWlCO0FBQ3ZCLE1BQU1DLGdCQUFnQjtBQUV0QixNQUFNQyxrQ0FBa0MsQ0FBQ0M7SUFDdkMsT0FBT0MsS0FBS0MsSUFBSSxDQUFDRCxLQUFLQyxJQUFJLENBQUNGLFFBQVFILGtCQUFrQkM7QUFDdkQ7QUFFTyxNQUFNSywrQkFBK0IsQ0FDMUNDLGFBQ0FDLFdBQ0FDO0lBRUEsTUFBTUMsUUFBUUQsV0FBV0QsWUFBWUMsVUFBVUQsWUFBWUc7SUFFM0QsSUFBSUQsT0FBTztRQUNULE9BQU9SLGdDQUNMLFFBQVMsTUFBT0g7SUFFcEIsT0FBTztRQUNMLE9BQU9HLGdDQUFnQ0g7SUFDekM7QUFDRixFQUFFO0FBRUYsTUFBTWEsbUNBQW1DO0FBRWxDLE1BQU1DLDBCQUEwQixDQUNyQ0MsVUFDQUM7SUFJQSxJQUFJRCxTQUFTRSxRQUFRLENBQUMsVUFBVSxPQUFPO0lBRXZDLElBQUlGLFNBQVNFLFFBQVEsQ0FBQyxVQUFVO1FBQzlCLE1BQU1DLFdBQVdGLFNBQVNHO1FBRTFCLElBQUksQ0FBQ0QsVUFBVSxNQUFNLElBQUlFLE1BQU07UUFFL0IsT0FBT2pCLGdDQUNMVSxtQ0FBb0NLLENBQUFBLFdBQVcsRUFBQztJQUVwRDtJQUVBLE9BQU87QUFDVCxFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVhcm4tYWkvLi9zcmMvdXRpbHMvY29zdHMudHM/MWEyZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB0eXBlIFN1bW1hcnlUeXBlIH0gZnJvbSBcIkBwcmlzbWEvY2xpZW50XCI7XG5cbmNvbnN0IFBSSUNFX1NVTU1BUllfUEVSXzEwMF9QQUdFUyA9IDAuMTU7XG5jb25zdCBQUklDRV9QRVJfQ09JTiA9IDAuMTtcbmNvbnN0IFBST0ZJVF9NQVJHSU4gPSAxLjU7XG5cbmNvbnN0IGdldFByaWNlSW5Db2luc1dpdGhQcm9maXRNYXJnaW4gPSAocHJpY2U6IG51bWJlcikgPT4ge1xuICByZXR1cm4gTWF0aC5jZWlsKE1hdGguY2VpbChwcmljZSAvIFBSSUNFX1BFUl9DT0lOKSAqIFBST0ZJVF9NQVJHSU4pO1xufTtcblxuZXhwb3J0IGNvbnN0IGdldENvc3RCeVN1bW1hcnlUeXBlQW5kUGFnZXMgPSAoXG4gIHN1bW1hcnlUeXBlOiBTdW1tYXJ5VHlwZSxcbiAgcGFnZVN0YXJ0PzogbnVtYmVyLFxuICBwYWdlRW5kPzogbnVtYmVyLFxuKSA9PiB7XG4gIGNvbnN0IHBhZ2VzID0gcGFnZUVuZCAmJiBwYWdlU3RhcnQgPyBwYWdlRW5kIC0gcGFnZVN0YXJ0IDogdW5kZWZpbmVkO1xuXG4gIGlmIChwYWdlcykge1xuICAgIHJldHVybiBnZXRQcmljZUluQ29pbnNXaXRoUHJvZml0TWFyZ2luKFxuICAgICAgKHBhZ2VzIC8gMTAwKSAqIFBSSUNFX1NVTU1BUllfUEVSXzEwMF9QQUdFUyxcbiAgICApO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBnZXRQcmljZUluQ29pbnNXaXRoUHJvZml0TWFyZ2luKFBSSUNFX1NVTU1BUllfUEVSXzEwMF9QQUdFUyk7XG4gIH1cbn07XG5cbmNvbnN0IEFVRElPX1RSQU5TQ1JJQkVfQ09TVF9QRVJfTUlOVVRFID0gMC4wMjQ7XG5cbmV4cG9ydCBjb25zdCBnZXRDb3N0VXBsb2FkQnlGaWxlVHlwZSA9IChcbiAgZmlsZVR5cGU6IHN0cmluZyxcbiAgb3B0aW9ucz86IHtcbiAgICBhdWRpb0R1cmF0aW9uSW5TZWNvbmRzPzogbnVtYmVyO1xuICB9LFxuKSA9PiB7XG4gIGlmIChmaWxlVHlwZS5pbmNsdWRlcyhcImltYWdlXCIpKSByZXR1cm4gMjtcblxuICBpZiAoZmlsZVR5cGUuaW5jbHVkZXMoXCJhdWRpb1wiKSkge1xuICAgIGNvbnN0IGR1cmF0aW9uID0gb3B0aW9ucz8uYXVkaW9EdXJhdGlvbkluU2Vjb25kcztcblxuICAgIGlmICghZHVyYXRpb24pIHRocm93IG5ldyBFcnJvcihcIkF1ZGlvIGR1cmF0aW9uIGlzIHJlcXVpcmVkXCIpO1xuXG4gICAgcmV0dXJuIGdldFByaWNlSW5Db2luc1dpdGhQcm9maXRNYXJnaW4oXG4gICAgICBBVURJT19UUkFOU0NSSUJFX0NPU1RfUEVSX01JTlVURSAqIChkdXJhdGlvbiAvIDYwKSxcbiAgICApO1xuICB9XG5cbiAgcmV0dXJuIDA7XG59O1xuIl0sIm5hbWVzIjpbIlBSSUNFX1NVTU1BUllfUEVSXzEwMF9QQUdFUyIsIlBSSUNFX1BFUl9DT0lOIiwiUFJPRklUX01BUkdJTiIsImdldFByaWNlSW5Db2luc1dpdGhQcm9maXRNYXJnaW4iLCJwcmljZSIsIk1hdGgiLCJjZWlsIiwiZ2V0Q29zdEJ5U3VtbWFyeVR5cGVBbmRQYWdlcyIsInN1bW1hcnlUeXBlIiwicGFnZVN0YXJ0IiwicGFnZUVuZCIsInBhZ2VzIiwidW5kZWZpbmVkIiwiQVVESU9fVFJBTlNDUklCRV9DT1NUX1BFUl9NSU5VVEUiLCJnZXRDb3N0VXBsb2FkQnlGaWxlVHlwZSIsImZpbGVUeXBlIiwib3B0aW9ucyIsImluY2x1ZGVzIiwiZHVyYXRpb24iLCJhdWRpb0R1cmF0aW9uSW5TZWNvbmRzIiwiRXJyb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./src/utils/costs.ts\n");

/***/ }),

/***/ "(api)/./src/utils/getInfoForLanguage.ts":
/*!*****************************************!*\
  !*** ./src/utils/getInfoForLanguage.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getInfoForLanguage: () => (/* binding */ getInfoForLanguage)\n/* harmony export */ });\n/* harmony import */ var _assets_languages_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ~/assets/languages.json */ \"(api)/./src/assets/languages.json\");\n\nfunction getInfoForLanguage(languageCode) {\n    const languageData = _assets_languages_json__WEBPACK_IMPORTED_MODULE_0__.languages.find((l)=>l.code === languageCode);\n    return languageData;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvdXRpbHMvZ2V0SW5mb0Zvckxhbmd1YWdlLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWdEO0FBRXpDLFNBQVNDLG1CQUFtQkMsWUFBb0I7SUFDckQsTUFBTUMsZUFBZUgsNkRBQW1CLENBQUNLLElBQUksQ0FBQyxDQUFDQyxJQUFNQSxFQUFFQyxJQUFJLEtBQUtMO0lBQ2hFLE9BQU9DO0FBQ1QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWFybi1haS8uL3NyYy91dGlscy9nZXRJbmZvRm9yTGFuZ3VhZ2UudHM/MmI2OCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgTGFuZ3VhZ2VzIGZyb20gXCJ+L2Fzc2V0cy9sYW5ndWFnZXMuanNvblwiO1xuXG5leHBvcnQgZnVuY3Rpb24gZ2V0SW5mb0Zvckxhbmd1YWdlKGxhbmd1YWdlQ29kZTogc3RyaW5nKSB7XG4gIGNvbnN0IGxhbmd1YWdlRGF0YSA9IExhbmd1YWdlcy5sYW5ndWFnZXMuZmluZCgobCkgPT4gbC5jb2RlID09PSBsYW5ndWFnZUNvZGUpO1xuICByZXR1cm4gbGFuZ3VhZ2VEYXRhO1xufVxuIl0sIm5hbWVzIjpbIkxhbmd1YWdlcyIsImdldEluZm9Gb3JMYW5ndWFnZSIsImxhbmd1YWdlQ29kZSIsImxhbmd1YWdlRGF0YSIsImxhbmd1YWdlcyIsImZpbmQiLCJsIiwiY29kZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./src/utils/getInfoForLanguage.ts\n");

/***/ }),

/***/ "(api)/../../packages/database/src/client.ts":
/*!*********************************************!*\
  !*** ../../packages/database/src/client.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   prisma: () => (/* binding */ prisma)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n\nconst globalForPrisma = globalThis;\nconst prisma = globalForPrisma.prisma ?? new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient({\n    log:  true ? [\n        \"query\",\n        \"error\",\n        \"warn\"\n    ] : 0\n});\nif (true) globalForPrisma.prisma = prisma;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi4vLi4vcGFja2FnZXMvZGF0YWJhc2Uvc3JjL2NsaWVudC50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBOEM7QUFFOUMsTUFBTUMsa0JBQWtCQztBQUlqQixNQUFNQyxTQUNYRixnQkFBZ0JFLE1BQU0sSUFDdEIsSUFBSUgsd0RBQVlBLENBQUM7SUFDZkksS0FBS0MsS0FBeUIsR0FBZ0I7UUFBQztRQUFTO1FBQVM7S0FBTyxHQUFHLENBQVM7QUFDdEYsR0FBRztBQUVMLElBQUlBLElBQXlCLEVBQWNKLGdCQUFnQkUsTUFBTSxHQUFHQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlYXJuLWFpLy4uLy4uL3BhY2thZ2VzL2RhdGFiYXNlL3NyYy9jbGllbnQudHM/OWFjNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQcmlzbWFDbGllbnQgfSBmcm9tICdAcHJpc21hL2NsaWVudCc7XG5cbmNvbnN0IGdsb2JhbEZvclByaXNtYSA9IGdsb2JhbFRoaXMgYXMgdW5rbm93biBhcyB7XG4gIHByaXNtYTogUHJpc21hQ2xpZW50IHwgdW5kZWZpbmVkO1xufTtcblxuZXhwb3J0IGNvbnN0IHByaXNtYSA9XG4gIGdsb2JhbEZvclByaXNtYS5wcmlzbWEgPz9cbiAgbmV3IFByaXNtYUNsaWVudCh7XG4gICAgbG9nOiBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ2RldmVsb3BtZW50JyA/IFsncXVlcnknLCAnZXJyb3InLCAnd2FybiddIDogWydlcnJvciddLFxuICB9KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIGdsb2JhbEZvclByaXNtYS5wcmlzbWEgPSBwcmlzbWE7XG4iXSwibmFtZXMiOlsiUHJpc21hQ2xpZW50IiwiZ2xvYmFsRm9yUHJpc21hIiwiZ2xvYmFsVGhpcyIsInByaXNtYSIsImxvZyIsInByb2Nlc3MiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/../../packages/database/src/client.ts\n");

/***/ }),

/***/ "(api)/../../node_modules/next/dist/server/future/route-kind.js":
/*!****************************************************************!*\
  !*** ../../node_modules/next/dist/server/future/route-kind.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"RouteKind\", ({\n    enumerable: true,\n    get: function() {\n        return RouteKind;\n    }\n}));\nvar RouteKind;\n(function(RouteKind) {\n    RouteKind[/**\n   * `PAGES` represents all the React pages that are under `pages/`.\n   */ \"PAGES\"] = \"PAGES\";\n    RouteKind[/**\n   * `PAGES_API` represents all the API routes under `pages/api/`.\n   */ \"PAGES_API\"] = \"PAGES_API\";\n    RouteKind[/**\n   * `APP_PAGE` represents all the React pages that are under `app/` with the\n   * filename of `page.{j,t}s{,x}`.\n   */ \"APP_PAGE\"] = \"APP_PAGE\";\n    RouteKind[/**\n   * `APP_ROUTE` represents all the API routes and metadata routes that are under `app/` with the\n   * filename of `route.{j,t}s{,x}`.\n   */ \"APP_ROUTE\"] = \"APP_ROUTE\";\n})(RouteKind || (RouteKind = {}));\n\n//# sourceMappingURL=route-kind.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRiw2Q0FBNEM7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLEVBQUM7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixJQUFJLEVBQUUsR0FBRztBQUNqQztBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsSUFBSSxFQUFFLEdBQUc7QUFDbEM7QUFDQSxDQUFDLDhCQUE4Qjs7QUFFL0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWFybi1haS8uLi8uLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZC5qcz8xYzU0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiUm91dGVLaW5kXCIsIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBSb3V0ZUtpbmQ7XG4gICAgfVxufSk7XG52YXIgUm91dGVLaW5kO1xuKGZ1bmN0aW9uKFJvdXRlS2luZCkge1xuICAgIFJvdXRlS2luZFsvKipcbiAgICogYFBBR0VTYCByZXByZXNlbnRzIGFsbCB0aGUgUmVhY3QgcGFnZXMgdGhhdCBhcmUgdW5kZXIgYHBhZ2VzL2AuXG4gICAqLyBcIlBBR0VTXCJdID0gXCJQQUdFU1wiO1xuICAgIFJvdXRlS2luZFsvKipcbiAgICogYFBBR0VTX0FQSWAgcmVwcmVzZW50cyBhbGwgdGhlIEFQSSByb3V0ZXMgdW5kZXIgYHBhZ2VzL2FwaS9gLlxuICAgKi8gXCJQQUdFU19BUElcIl0gPSBcIlBBR0VTX0FQSVwiO1xuICAgIFJvdXRlS2luZFsvKipcbiAgICogYEFQUF9QQUdFYCByZXByZXNlbnRzIGFsbCB0aGUgUmVhY3QgcGFnZXMgdGhhdCBhcmUgdW5kZXIgYGFwcC9gIHdpdGggdGhlXG4gICAqIGZpbGVuYW1lIG9mIGBwYWdlLntqLHR9c3sseH1gLlxuICAgKi8gXCJBUFBfUEFHRVwiXSA9IFwiQVBQX1BBR0VcIjtcbiAgICBSb3V0ZUtpbmRbLyoqXG4gICAqIGBBUFBfUk9VVEVgIHJlcHJlc2VudHMgYWxsIHRoZSBBUEkgcm91dGVzIGFuZCBtZXRhZGF0YSByb3V0ZXMgdGhhdCBhcmUgdW5kZXIgYGFwcC9gIHdpdGggdGhlXG4gICAqIGZpbGVuYW1lIG9mIGByb3V0ZS57aix0fXN7LHh9YC5cbiAgICovIFwiQVBQX1JPVVRFXCJdID0gXCJBUFBfUk9VVEVcIjtcbn0pKFJvdXRlS2luZCB8fCAoUm91dGVLaW5kID0ge30pKTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cm91dGUta2luZC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/../../node_modules/next/dist/server/future/route-kind.js\n");

/***/ }),

/***/ "(api)/../../node_modules/next/dist/server/future/route-modules/pages-api/module.js":
/*!************************************************************************************!*\
  !*** ../../node_modules/next/dist/server/future/route-modules/pages-api/module.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    PagesAPIRouteModule: function() {\n        return PagesAPIRouteModule;\n    },\n    default: function() {\n        return _default;\n    }\n});\nconst _routemodule = __webpack_require__(/*! ../route-module */ \"../route-module\");\nconst _node = __webpack_require__(/*! ../../../api-utils/node */ \"../../../api-utils/node\");\nclass PagesAPIRouteModule extends _routemodule.RouteModule {\n    /**\n   *\n   * @param req the incoming server request\n   * @param res the outgoing server response\n   * @param context the context for the render\n   */ async render(req, res, context) {\n        await (0, _node.apiResolver)(req, res, context.query, this.userland, {\n            ...context.previewProps,\n            revalidate: context.revalidate,\n            trustHostHeader: context.trustHostHeader,\n            allowedRevalidateHeaderKeys: context.allowedRevalidateHeaderKeys,\n            hostname: context.hostname\n        }, context.minimalMode, context.dev, context.page);\n    }\n}\nconst _default = PagesAPIRouteModule;\n\n//# sourceMappingURL=module.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvcGFnZXMtYXBpL21vZHVsZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLE1BQU0sQ0FHTDtBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCxxQkFBcUIsbUJBQU8sQ0FBQyx3Q0FBaUI7QUFDOUMsY0FBYyxtQkFBTyxDQUFDLHdEQUF5QjtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWFybi1haS8uLi8uLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9wYWdlcy1hcGkvbW9kdWxlLmpzP2MzMmUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG4wICYmIChtb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBQYWdlc0FQSVJvdXRlTW9kdWxlOiBudWxsLFxuICAgIGRlZmF1bHQ6IG51bGxcbn0pO1xuZnVuY3Rpb24gX2V4cG9ydCh0YXJnZXQsIGFsbCkge1xuICAgIGZvcih2YXIgbmFtZSBpbiBhbGwpT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgbmFtZSwge1xuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICBnZXQ6IGFsbFtuYW1lXVxuICAgIH0pO1xufVxuX2V4cG9ydChleHBvcnRzLCB7XG4gICAgUGFnZXNBUElSb3V0ZU1vZHVsZTogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBQYWdlc0FQSVJvdXRlTW9kdWxlO1xuICAgIH0sXG4gICAgZGVmYXVsdDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBfZGVmYXVsdDtcbiAgICB9XG59KTtcbmNvbnN0IF9yb3V0ZW1vZHVsZSA9IHJlcXVpcmUoXCIuLi9yb3V0ZS1tb2R1bGVcIik7XG5jb25zdCBfbm9kZSA9IHJlcXVpcmUoXCIuLi8uLi8uLi9hcGktdXRpbHMvbm9kZVwiKTtcbmNsYXNzIFBhZ2VzQVBJUm91dGVNb2R1bGUgZXh0ZW5kcyBfcm91dGVtb2R1bGUuUm91dGVNb2R1bGUge1xuICAgIC8qKlxuICAgKlxuICAgKiBAcGFyYW0gcmVxIHRoZSBpbmNvbWluZyBzZXJ2ZXIgcmVxdWVzdFxuICAgKiBAcGFyYW0gcmVzIHRoZSBvdXRnb2luZyBzZXJ2ZXIgcmVzcG9uc2VcbiAgICogQHBhcmFtIGNvbnRleHQgdGhlIGNvbnRleHQgZm9yIHRoZSByZW5kZXJcbiAgICovIGFzeW5jIHJlbmRlcihyZXEsIHJlcywgY29udGV4dCkge1xuICAgICAgICBhd2FpdCAoMCwgX25vZGUuYXBpUmVzb2x2ZXIpKHJlcSwgcmVzLCBjb250ZXh0LnF1ZXJ5LCB0aGlzLnVzZXJsYW5kLCB7XG4gICAgICAgICAgICAuLi5jb250ZXh0LnByZXZpZXdQcm9wcyxcbiAgICAgICAgICAgIHJldmFsaWRhdGU6IGNvbnRleHQucmV2YWxpZGF0ZSxcbiAgICAgICAgICAgIHRydXN0SG9zdEhlYWRlcjogY29udGV4dC50cnVzdEhvc3RIZWFkZXIsXG4gICAgICAgICAgICBhbGxvd2VkUmV2YWxpZGF0ZUhlYWRlcktleXM6IGNvbnRleHQuYWxsb3dlZFJldmFsaWRhdGVIZWFkZXJLZXlzLFxuICAgICAgICAgICAgaG9zdG5hbWU6IGNvbnRleHQuaG9zdG5hbWVcbiAgICAgICAgfSwgY29udGV4dC5taW5pbWFsTW9kZSwgY29udGV4dC5kZXYsIGNvbnRleHQucGFnZSk7XG4gICAgfVxufVxuY29uc3QgX2RlZmF1bHQgPSBQYWdlc0FQSVJvdXRlTW9kdWxlO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1tb2R1bGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/../../node_modules/next/dist/server/future/route-modules/pages-api/module.js\n");

/***/ }),

/***/ "(api)/./src/env.mjs":
/*!*********************!*\
  !*** ./src/env.mjs ***!
  \*********************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   env: () => (/* binding */ env)\n/* harmony export */ });\n/* harmony import */ var _t3_oss_env_nextjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @t3-oss/env-nextjs */ \"@t3-oss/env-nextjs\");\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! zod */ \"zod\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_t3_oss_env_nextjs__WEBPACK_IMPORTED_MODULE_0__, zod__WEBPACK_IMPORTED_MODULE_1__]);\n([_t3_oss_env_nextjs__WEBPACK_IMPORTED_MODULE_0__, zod__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\nconst env = (0,_t3_oss_env_nextjs__WEBPACK_IMPORTED_MODULE_0__.createEnv)({\n    /**\n   * Specify your server-side environment variables schema here. This way you can ensure the app\n   * isn't built with invalid env vars.\n   */ server: {\n        DATABASE_URL: zod__WEBPACK_IMPORTED_MODULE_1__.z.string().url(),\n        NODE_ENV: zod__WEBPACK_IMPORTED_MODULE_1__.z.enum([\n            \"development\",\n            \"test\",\n            \"production\"\n        ])\n    },\n    /**\n   * Specify your client-side environment variables schema here. This way you can ensure the app\n   * isn't built with invalid env vars. To expose them to the client, prefix them with\n   * `NEXT_PUBLIC_`.\n   */ client: {\n    },\n    /**\n   * You can't destruct `process.env` as a regular object in the Next.js edge runtimes (e.g.\n   * middlewares) or client-side so we need to destruct manually.\n   */ runtimeEnv: {\n        DATABASE_URL: process.env.DATABASE_URL,\n        NODE_ENV: \"development\"\n    },\n    /**\n   * Run `build` or `dev` with `SKIP_ENV_VALIDATION` to skip env validation.\n   * This is especially useful for Docker builds.\n   */ skipValidation: !!process.env.SKIP_ENV_VALIDATION\n});\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvZW52Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBK0M7QUFDdkI7QUFFakIsTUFBTUUsTUFBTUYsNkRBQVNBLENBQUM7SUFDM0I7OztHQUdDLEdBQ0RHLFFBQVE7UUFDTkMsY0FBY0gsa0NBQUNBLENBQUNJLE1BQU0sR0FBR0MsR0FBRztRQUM1QkMsVUFBVU4sa0NBQUNBLENBQUNPLElBQUksQ0FBQztZQUFDO1lBQWU7WUFBUTtTQUFhO0lBQ3hEO0lBRUE7Ozs7R0FJQyxHQUNEQyxRQUFRO0lBRVI7SUFFQTs7O0dBR0MsR0FDREMsWUFBWTtRQUNWTixjQUFjTyxRQUFRVCxHQUFHLENBQUNFLFlBQVk7UUFDdENHLFVBNUJKO0lBOEJFO0lBQ0E7OztHQUdDLEdBQ0RLLGdCQUFnQixDQUFDLENBQUNELFFBQVFULEdBQUcsQ0FBQ1csbUJBQW1CO0FBQ25ELEdBQUciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWFybi1haS8uL3NyYy9lbnYubWpzP2MzYjkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlRW52IH0gZnJvbSBcIkB0My1vc3MvZW52LW5leHRqc1wiO1xuaW1wb3J0IHsgeiB9IGZyb20gXCJ6b2RcIjtcblxuZXhwb3J0IGNvbnN0IGVudiA9IGNyZWF0ZUVudih7XG4gIC8qKlxuICAgKiBTcGVjaWZ5IHlvdXIgc2VydmVyLXNpZGUgZW52aXJvbm1lbnQgdmFyaWFibGVzIHNjaGVtYSBoZXJlLiBUaGlzIHdheSB5b3UgY2FuIGVuc3VyZSB0aGUgYXBwXG4gICAqIGlzbid0IGJ1aWx0IHdpdGggaW52YWxpZCBlbnYgdmFycy5cbiAgICovXG4gIHNlcnZlcjoge1xuICAgIERBVEFCQVNFX1VSTDogei5zdHJpbmcoKS51cmwoKSxcbiAgICBOT0RFX0VOVjogei5lbnVtKFtcImRldmVsb3BtZW50XCIsIFwidGVzdFwiLCBcInByb2R1Y3Rpb25cIl0pLFxuICB9LFxuXG4gIC8qKlxuICAgKiBTcGVjaWZ5IHlvdXIgY2xpZW50LXNpZGUgZW52aXJvbm1lbnQgdmFyaWFibGVzIHNjaGVtYSBoZXJlLiBUaGlzIHdheSB5b3UgY2FuIGVuc3VyZSB0aGUgYXBwXG4gICAqIGlzbid0IGJ1aWx0IHdpdGggaW52YWxpZCBlbnYgdmFycy4gVG8gZXhwb3NlIHRoZW0gdG8gdGhlIGNsaWVudCwgcHJlZml4IHRoZW0gd2l0aFxuICAgKiBgTkVYVF9QVUJMSUNfYC5cbiAgICovXG4gIGNsaWVudDoge1xuICAgIC8vIE5FWFRfUFVCTElDX0NMSUVOVFZBUjogei5zdHJpbmcoKS5taW4oMSksXG4gIH0sXG5cbiAgLyoqXG4gICAqIFlvdSBjYW4ndCBkZXN0cnVjdCBgcHJvY2Vzcy5lbnZgIGFzIGEgcmVndWxhciBvYmplY3QgaW4gdGhlIE5leHQuanMgZWRnZSBydW50aW1lcyAoZS5nLlxuICAgKiBtaWRkbGV3YXJlcykgb3IgY2xpZW50LXNpZGUgc28gd2UgbmVlZCB0byBkZXN0cnVjdCBtYW51YWxseS5cbiAgICovXG4gIHJ1bnRpbWVFbnY6IHtcbiAgICBEQVRBQkFTRV9VUkw6IHByb2Nlc3MuZW52LkRBVEFCQVNFX1VSTCxcbiAgICBOT0RFX0VOVjogcHJvY2Vzcy5lbnYuTk9ERV9FTlYsXG4gICAgLy8gTkVYVF9QVUJMSUNfQ0xJRU5UVkFSOiBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19DTElFTlRWQVIsXG4gIH0sXG4gIC8qKlxuICAgKiBSdW4gYGJ1aWxkYCBvciBgZGV2YCB3aXRoIGBTS0lQX0VOVl9WQUxJREFUSU9OYCB0byBza2lwIGVudiB2YWxpZGF0aW9uLlxuICAgKiBUaGlzIGlzIGVzcGVjaWFsbHkgdXNlZnVsIGZvciBEb2NrZXIgYnVpbGRzLlxuICAgKi9cbiAgc2tpcFZhbGlkYXRpb246ICEhcHJvY2Vzcy5lbnYuU0tJUF9FTlZfVkFMSURBVElPTixcbn0pO1xuIl0sIm5hbWVzIjpbImNyZWF0ZUVudiIsInoiLCJlbnYiLCJzZXJ2ZXIiLCJEQVRBQkFTRV9VUkwiLCJzdHJpbmciLCJ1cmwiLCJOT0RFX0VOViIsImVudW0iLCJjbGllbnQiLCJydW50aW1lRW52IiwicHJvY2VzcyIsInNraXBWYWxpZGF0aW9uIiwiU0tJUF9FTlZfVkFMSURBVElPTiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./src/env.mjs\n");

/***/ }),

/***/ "(api)/./src/assets/languages.json":
/*!***********************************!*\
  !*** ./src/assets/languages.json ***!
  \***********************************/
/***/ ((module) => {

module.exports = JSON.parse('{"languages":[{"language":"Arabic","code":"ar","emoji":"🇸🇦"},{"language":"Bengali","code":"bn","emoji":"🇧🇩"},{"language":"Dutch","code":"nl","emoji":"🇳🇱"},{"language":"English","code":"en","emoji":"🇬🇧"},{"language":"Filipino","code":"tl","emoji":"🇵🇭"},{"language":"French","code":"fr","emoji":"🇫🇷"},{"language":"German","code":"de","emoji":"🇩🇪"},{"language":"Hindi","code":"hi","emoji":"🇮🇳"},{"language":"Italian","code":"it","emoji":"🇮🇹"},{"language":"Japanese","code":"ja","emoji":"🇯🇵"},{"language":"Korean","code":"ko","emoji":"🇰🇷"},{"language":"Malay/Indonesian","code":"ms","emoji":"🇮🇩"},{"language":"Mandarin","code":"zh","emoji":"🇨🇳"},{"language":"Persian","code":"fa","emoji":"🇮🇷"},{"language":"Polish","code":"pl","emoji":"🇵🇱"},{"language":"Portuguese","code":"pt","emoji":"🇵🇹"},{"language":"Portuguese (Brazil)","code":"pt-br","emoji":"🇧🇷"},{"language":"Russian","code":"ru","emoji":"🇷🇺"},{"language":"Spanish","code":"es","emoji":"🇪🇸"},{"language":"Thai","code":"th","emoji":"🇹🇭"},{"language":"Turkish","code":"tr","emoji":"🇹🇷"},{"language":"Urdu","code":"ur","emoji":"🇵🇰"},{"language":"Vietnamese","code":"vi","emoji":"🇻🇳"}]}');

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/../../node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Ftrpc%2F%5Btrpc%5D&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Ftrpc%2F%5Btrpc%5D.ts&middlewareConfigBase64=e30%3D!"));
module.exports = __webpack_exports__;

})();